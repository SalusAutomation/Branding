%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 150323_ 227627815 Infographic template with DNA structure for medical and biological research_f.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 3/23/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-03-23T10:13:45+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-03-23T10:13:45+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-03-23T10:13:45+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AheKuxVU4xjiGBJbeoPj9&#xA;GKtek1SNtjStep9sVaH2SvHfxxVbirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVXem3Hl7Vp3p0xVbiq5CobfwNK7iuKtkc3CoKsaDYdT7DFXPDLGAXQqD0JxVZirsVXB2FAD&#xA;06dNsVVaKCyUqUqQT0qOv34qtikUE8yRvWo7n3xVY5UuxXZSTQe2KrcVdirsVdirsVb4Pw58TwJo&#xA;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&#xA;UxVpmLMT09sVcWZupJ+eKtYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:23d2efeb-f55c-7840-b00a-5dcc7817d47a</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:23d2efeb-f55c-7840-b00a-5dcc7817d47a</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:31FE7CFB49AFE311AB70A8026428D953</stRef:instanceID>
            <stRef:documentID>xmp.did:31FE7CFB49AFE311AB70A8026428D953</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CD29A04DBF9EE311BAB9800B4D57E175</stEvt:instanceID>
                  <stEvt:when>2014-02-26T18:36:14+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DFBD7A2EA19FE311A533EDBC3B667191</stEvt:instanceID>
                  <stEvt:when>2014-02-27T18:25:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9BEE237194AEE311910FFBA5D57BBA8C</stEvt:instanceID>
                  <stEvt:when>2014-03-18T18:57:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:31FE7CFB49AFE311AB70A8026428D953</stEvt:instanceID>
                  <stEvt:when>2014-03-19T16:59:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:23d2efeb-f55c-7840-b00a-5dcc7817d47a</stEvt:instanceID>
                  <stEvt:when>2015-03-23T10:13:45+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>OpenSans-Light</stFnt:fontName>
                  <stFnt:fontFamily>Open Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.10</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>OpenSans-Light.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.35 .35 .35 rgb
f
288.276 148.161 mo
288.276 104.014 161.705 70.949 161.705 26.7583 cv
161.705 61.5371 li
161.705 105.728 288.276 138.795 288.276 182.938 cv
288.276 148.161 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 104.848 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.2 .972549 1 ]
/C1 [.0666667 .266667 .513726 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0666667 .266667 .513726 ]
/C1 [.2 .972549 1 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 104.848 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~1GU^@0ekC;0JG170/"t3/hSb./M/P*/1`>&.k<,".Olkr.4HYn-n$Gj-RU5f-7'ra,pX`],U4NY,9e<U
+X&!P+<VdL+!2RH*Zc@D*??.?*#oq;)]K_7)B'M3)&X8.(`4&*(Ddi&()@W"'bh>r'GD,n'+toj&eP]f
&J5Te&eYfi',)#m'GM5q'bqH!()@Z%(Ddl)(`4)-)&X>2)B'P6)]Kb:*#ot>*?H7C*ZlIG+!;[K+<_mO
+X/*S,9nEX,U=W\,pai`-71&e-RU8i-n$Jm.4H\q.Olr!.k</%/1`A)/M/S-/h\k20/,(60JP::0etL>
~>
<~q"FCPo'l,9m-Ep"kN1daiS`SKgY1?4f$r0sd*Kt\b/q`E`P]R/^V7@m]"#5W['R$AY-"e*WMcViUS=ER
SXc1;R$O#%P*(fcNJi[MLPCJ7JUi5uI!U'_G'.kHE,TW1CM@HpARo7Y?s[,C>$4p-<)Z[k:JFMU8Ou<>
6q'R98P;`O:Jaqf<*!('>$G9=?t!MTAS5[jCM[m,EH6,CG'J:YI!pKpJV/W1LPUhGNK0'^P*D5tR$jG6
SY)RLUSXicWN*&%Y->1;['dBQ]">Vh^VRe)`Q$!@b08,Vd*gCmf%8U/gYL`EiSrq[kNM0rm-a?3o(2PJ
~>
<~s8Mupqtg-`p\+:PoCDG@n*]T0lg!`ukN:mej5T%Ui8<DIgtUQ9f[n^)eC2jnd*L"^bfe/NaN)<>`5BI.
_8*h"]tCtg\[],W[C!9GZ*:F7XfSS'WMl_lV50l\U7n6PSt2C@R[KP0QBd\uP*(ieNfB!UMM[.EL4t;5
K7ei2L51SAMMmFQNfT9aP*;,qQC!u,R[]h<StD[LU8"EYV5C/hWN*##Xfek3Z*L^C[C3QS\[oDc]tV7s
_84"+`5Ta:aN;TJbg"GZd*^:jeCE.%f\,!5gtgiEi8ESRj5f=akNM0qlg4$,n*ol<oCV_Lp\=R\qu$El
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
161.705 34.4878 mo
161.705 26.7583 li
161.705 70.949 288.276 104.014 288.276 148.161 cv
288.276 155.889 li
288.276 111.742 161.705 78.6772 161.705 34.4878 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 91.3238 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.298039 1 1 ]
/C1 [.101961 .384314 .705882 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.101961 .384314 .705882 ]
/C1 [.298039 1 1 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 91.3238 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~9M8#N8kMZH84Z9A7n,s;77BU46pj=/6:*t(5sR\"5<h=q4Ztqj4?GVd3]];^3B/uX2`EWQ2Dm?K1c.!E
1GU^?0ek@90/"t2/hJY,/1`;%.k3"u.4HYn-mpAh-71#b,U=W[,9e<U+X&!O+<M[I*Zc=B*?6%<)]K\6
)B'M5)]Kb:*??.A*ZlIG+<VgN+X/*S,9nHZ,UF``-71)f-n$Jm.4Qes.k<,$/1iG*/hSe10/,(70ekF=
1G^gD1c.'I2E!HP2`NcV3B9,]3]fDb4?Pbi4[)%o5<hCu5s[e'6:4+-6psF377Ka97n6*@84cBF8kM`L
~>
<~s8DlmqY9gYp%.bEnF,c2lg!]sk2k[`iS`VLgtUQ8f@JL%da?Ffc-4ARaiDE?`59@+^V.:l]",;Y[C!6E
Yck42X/`.sVPU)`TqJ$LS=>t8Q^3o$PECrfNf8mRM26n?KS+i+IsuclH?jaYF`_\EE,TW2CMIQsAn>L_
@Uiq[AnYmnCMds-E,fr@F`r"TH@($gIt3*&KS>/:M2I4MNfT9aPE_>uQ^O;3S=Z@GTqeE[VPgDnX/rJ-
Yd(L@[C3QT]">Vg^VI\&`5Ta:ai_fNc-ObadaZguf@\g3gtglGiSrq[k3(snlg4$-nF?)@p%J.TqYU3h
~>
<~s8Muqr;?HgqYBs^p\4CTp%@tKoCDJBnF5o8mdBK/m-F!&l07EqkN:pgjlGL_io8qUi8<GKhVI#CgY:H9
g"=s/f@JL&eC;srda?Ihd*L"_c-=JVbK@uLaiMNC`l?!9`5BL0_SO%'^V@Lr]tD"i]=PP`\@B#V[^ENM
['[6K[^NZT\@K/]]=Y_g]tM.p^VIY$_SX4.`5KX7`lH-@aiV]JbKS2Tc-FV\d*U1fdaQ[peCE+#f@S[-
g"P07gYCW@hVR/Ii8NYSioB+\jlPXekNM-ol0@U#m-O--mdKW6nF?)?oCMVIp%J+Rp\=R[qYL*er;HTn
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
161.705 61.5371 mo
161.705 53.8077 li
161.705 97.9994 288.276 131.066 288.276 175.21 cv
288.276 182.938 li
288.276 138.795 161.705 105.728 161.705 61.5371 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 118.373 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.133333 .823529 .968627 ]
/C1 [.0431373 .180392 .352941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0431373 .180392 .352941 ]
/C1 [.133333 .823529 .968627 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 118.373 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+sA*Q+X%sN+<VdL+!2RH+!)IE*Zc@C*??.@*#oq<*#on:)]K_7)B'M4)AsD1)&X;/(`4),(Ddl((Ddi&
()@Z#'bqGu'bh>r'GM2o',)#m&eYfi&eYcg&J5Td&.fBa&.]9^%hB-[%LrsY%1NaU%1EXR$k*OP$O[=M
$O[=M$O[@O$k*OQ%1NaU%1WjX%LrsZ%hB0]&.fBa&.fEc&J5Tf&eYfi&ebol',)#n'GM5q'bqGu'bqK"
()@Z%(Ddl((Dmu+(`4,.)&X;0)B'M4)B'P6)]K_9*#oq<*$$%?*??1B*Zc@D+!2RH+!;[K+<VdM+X&!P
~>
<~da6=cbfe/Na2Z*9_SO%%]tCqe\@8lQZa$a<Y,n\(W2HMhUS=HTSt2C?R@'>+P`q5kO,f0WMMR%BKnFu.
IsufnH?jaZF`_\EE,TW1CMINqAn>I]@:*>H>Zt94<`N*t;,C%`9M7uK7n,p76:!h"4Zkbc3&WWN1GLR:
/h\n51GgsI3&s#^4[)(r6:4127n?6F9MSA[;,^Fo<`iL.>[:ZC@:E_XAnPdlCM[m,E,fr@Fa&(UH@1-i
It<3(KnbA=MMmFRO-#KfPa.T&R@9Y:StMdOUSXicW2co"Y-5(7Za@-L\@K2`]tV:u_Sa@4a2uKIbg+P]
~>
<~p\"1Mo'l,9mHa'%ki_'gj5T"ShVHu@g"=p,eC2jmcd'eZb/q`F`Pf[2_8!^t]XkY`\$`TLZE^U9XfSP%
W2HMgUS=HSSt2C@R@'>,P`q8mO,f3YMi!7FL4k22JUi2tI!^-`GBS(LEcH&9D/=!%BP1pg@q&kS?<pf?
>$G6;?=72N@qB7bBPD6uD/O<4EcZ>GGBeC[I!pHoJV&N-L51SAMi<XUO-,ThPa7Z'R@B_;StD^NUSOcb
W2ZeuXfek4ZEppG\%&u[]Y2%o_8=+.`Q-'Ab08,Ucd:+heCE1'g"P6;hV[8Nj5f=bkiqBumI'H4o(2MH
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
288.276 269.566 mo
288.276 225.42 161.705 192.354 161.705 148.163 cv
161.705 182.941 li
161.705 227.133 288.276 260.201 288.276 304.343 cv
288.276 269.566 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 226.253 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 226.253 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
161.705 155.892 mo
161.705 148.163 li
161.705 192.354 288.276 225.42 288.276 269.566 cv
288.276 277.295 li
288.276 233.148 161.705 200.082 161.705 155.892 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 212.729 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 212.729 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
161.705 182.941 mo
161.705 175.212 li
161.705 219.405 288.276 252.471 288.276 296.614 cv
288.276 304.343 li
288.276 260.201 161.705 227.133 161.705 182.941 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 239.778 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 239.778 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
288.276 390.962 mo
288.276 346.816 161.705 313.75 161.705 269.561 cv
161.705 304.339 li
161.705 348.529 288.276 381.597 288.276 425.739 cv
288.276 390.962 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 347.65 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 347.65 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
161.705 277.288 mo
161.705 269.561 li
161.705 313.75 288.276 346.816 288.276 390.962 cv
288.276 398.691 li
288.276 354.544 161.705 321.478 161.705 277.288 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 334.126 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 334.126 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
161.705 304.339 mo
161.705 296.609 li
161.705 340.801 288.276 373.867 288.276 418.01 cv
288.276 425.739 li
288.276 381.597 161.705 348.529 161.705 304.339 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 361.174 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 361.174 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
281.324 149.674 mo
223.059 149.674 li
225.193 149.674 226.922 151.406 226.922 153.538 cv
226.922 155.674 225.193 157.402 223.059 157.402 cv
281.324 157.402 li
283.455 157.402 285.188 155.674 285.188 153.538 cv
285.188 151.406 283.455 149.674 281.324 149.674 cv
cp
.2 .831373 1 rgb
f
281.324 156.286 mo
225.773 156.286 li
225.076 156.975 224.118 157.402 223.059 157.402 cv
281.324 157.402 li
283.455 157.402 285.188 155.674 285.188 153.538 cv
285.188 153.348 285.159 153.164 285.132 152.98 cv
284.86 154.85 283.265 156.286 281.324 156.286 cv
cp
.14902 .623529 .74902 rgb
f
280.243 150.719 mo
225.685 150.719 li
226.338 151.328 226.769 152.158 226.878 153.091 cv
280.243 153.091 li
280.898 153.091 281.429 152.561 281.429 151.905 cv
281.429 151.25 280.898 150.719 280.243 150.719 cv
cp
.521569 .898039 1 rgb
f
226.922 153.538 mo
226.922 151.406 225.193 149.674 223.059 149.674 cv
168.657 149.674 li
166.522 149.674 164.793 151.406 164.793 153.538 cv
164.793 155.674 166.522 157.402 168.657 157.402 cv
223.059 157.402 li
225.193 157.402 226.922 155.674 226.922 153.538 cv
cp
.815686 .580392 .784314 rgb
f
168.657 156.286 mo
166.712 156.286 165.121 154.85 164.85 152.98 cv
164.822 153.164 164.793 153.348 164.793 153.538 cv
164.793 155.674 166.522 157.402 168.657 157.402 cv
223.059 157.402 li
224.118 157.402 225.076 156.975 225.773 156.286 cv
168.657 156.286 li
cp
.611765 .435294 .588235 rgb
f
168.553 151.905 mo
168.553 152.561 169.084 153.091 169.739 153.091 cv
226.878 153.091 li
226.769 152.158 226.338 151.328 225.685 150.719 cv
169.739 150.719 li
169.084 150.719 168.553 151.25 168.553 151.905 cv
cp
.890196 .74902 .870588 rgb
f
263.618 197.083 mo
223.051 197.083 li
225.195 197.083 226.93 198.815 226.93 200.948 cv
226.93 203.084 225.195 204.811 223.051 204.811 cv
263.618 204.811 li
265.758 204.811 267.498 203.084 267.498 200.948 cv
267.498 198.815 265.758 197.083 263.618 197.083 cv
cp
.2 .831373 1 rgb
f
263.618 203.694 mo
225.776 203.694 li
225.076 204.385 224.114 204.811 223.051 204.811 cv
263.618 204.811 li
265.758 204.811 267.498 203.084 267.498 200.948 cv
267.498 200.756 267.469 200.572 267.441 200.39 cv
267.168 202.258 265.567 203.694 263.618 203.694 cv
cp
.14902 .623529 .74902 rgb
f
262.533 198.128 mo
225.688 198.128 li
226.344 198.736 226.776 199.568 226.885 200.501 cv
262.533 200.501 li
263.19 200.501 263.723 199.969 263.723 199.315 cv
263.723 198.658 263.19 198.128 262.533 198.128 cv
cp
.521569 .898039 1 rgb
f
226.93 200.948 mo
226.93 198.815 225.195 197.083 223.051 197.083 cv
186.363 197.083 li
184.219 197.083 182.484 198.815 182.484 200.948 cv
182.484 203.084 184.219 204.811 186.363 204.811 cv
223.051 204.811 li
225.195 204.811 226.93 203.084 226.93 200.948 cv
cp
.815686 .580392 .784314 rgb
f
186.363 203.694 mo
184.411 203.694 182.812 202.258 182.54 200.39 cv
182.513 200.572 182.484 200.756 182.484 200.948 cv
182.484 203.084 184.219 204.811 186.363 204.811 cv
223.051 204.811 li
224.114 204.811 225.076 204.385 225.776 203.694 cv
186.363 203.694 li
cp
.611765 .435294 .588235 rgb
f
186.258 199.315 mo
186.258 199.969 186.791 200.501 187.448 200.501 cv
226.885 200.501 li
226.776 199.568 226.344 198.736 225.688 198.128 cv
187.448 198.128 li
186.791 198.128 186.258 198.658 186.258 199.315 cv
cp
.890196 .74902 .870588 rgb
f
263.634 125.97 mo
223.303 125.97 li
219.439 129.834 li
223.303 133.698 li
263.634 133.698 li
265.766 133.698 267.498 131.97 267.498 129.834 cv
267.498 127.697 265.766 125.97 263.634 125.97 cv
cp
.368627 .733333 .0823529 rgb
f
263.634 132.582 mo
222.187 132.582 li
223.303 133.698 li
263.634 133.698 li
265.766 133.698 267.498 131.97 267.498 129.834 cv
267.498 129.643 267.469 129.46 267.441 129.276 cv
267.169 131.145 265.575 132.582 263.634 132.582 cv
cp
.278431 .54902 .0627451 rgb
f
261.826 126.722 mo
222.551 126.722 li
220.179 129.094 li
261.826 129.094 li
262.481 129.094 263.012 128.563 263.012 127.908 cv
263.012 127.253 262.481 126.722 261.826 126.722 cv
cp
.619608 .839216 .45098 rgb
f
223.303 125.97 mo
186.347 125.97 li
184.212 125.97 182.484 127.697 182.484 129.834 cv
182.484 131.97 184.212 133.698 186.347 133.698 cv
223.303 133.698 li
219.439 129.834 li
223.303 125.97 li
cp
1 .85098 .309804 rgb
f
186.347 132.582 mo
184.403 132.582 182.812 131.145 182.54 129.276 cv
182.513 129.46 182.484 129.643 182.484 129.834 cv
182.484 131.97 184.212 133.698 186.347 133.698 cv
223.303 133.698 li
222.187 132.582 li
186.347 132.582 li
cp
.74902 .639216 .231373 rgb
f
188.156 126.722 mo
187.501 126.722 186.97 127.253 186.97 127.908 cv
186.97 128.563 187.501 129.094 188.156 129.094 cv
220.179 129.094 li
222.551 126.722 li
188.156 126.722 li
cp
1 .909804 .584314 rgb
f
281.335 173.378 mo
223.308 173.378 li
219.454 177.242 li
223.308 181.107 li
281.335 181.107 li
283.461 181.107 285.188 179.379 285.188 177.242 cv
285.188 175.106 283.461 173.378 281.335 173.378 cv
cp
.368627 .733333 .0823529 rgb
f
281.335 179.991 mo
222.195 179.991 li
223.308 181.107 li
281.335 181.107 li
283.461 181.107 285.188 179.379 285.188 177.242 cv
285.188 177.051 285.159 176.868 285.132 176.684 cv
284.861 178.553 283.271 179.991 281.335 179.991 cv
cp
.278431 .54902 .0627451 rgb
f
279.531 174.13 mo
222.558 174.13 li
220.192 176.502 li
279.531 176.502 li
280.185 176.502 280.714 175.971 280.714 175.316 cv
280.714 174.661 280.185 174.13 279.531 174.13 cv
cp
.619608 .839216 .45098 rgb
f
223.308 173.378 mo
168.647 173.378 li
166.517 173.378 164.793 175.106 164.793 177.242 cv
164.793 179.379 166.517 181.107 168.647 181.107 cv
223.308 181.107 li
219.454 177.242 li
223.308 173.378 li
cp
1 .85098 .309804 rgb
f
168.647 179.991 mo
166.707 179.991 165.12 178.553 164.85 176.684 cv
164.822 176.868 164.793 177.051 164.793 177.242 cv
164.793 179.379 166.517 181.107 168.647 181.107 cv
223.308 181.107 li
222.195 179.991 li
168.647 179.991 li
cp
.74902 .639216 .231373 rgb
f
170.45 174.13 mo
169.796 174.13 169.268 174.661 169.268 175.316 cv
169.268 175.971 169.796 176.502 170.45 176.502 cv
220.192 176.502 li
222.558 174.13 li
170.45 174.13 li
cp
1 .909804 .584314 rgb
f
281.324 394.682 mo
223.059 394.682 li
225.193 394.682 226.922 396.415 226.922 398.547 cv
226.922 400.684 225.193 402.41 223.059 402.41 cv
281.324 402.41 li
283.455 402.41 285.188 400.684 285.188 398.547 cv
285.188 396.415 283.455 394.682 281.324 394.682 cv
cp
.2 .831373 1 rgb
f
281.324 401.294 mo
225.773 401.294 li
225.076 401.985 224.118 402.41 223.059 402.41 cv
281.324 402.41 li
283.455 402.41 285.188 400.684 285.188 398.547 cv
285.188 398.355 285.159 398.172 285.132 397.989 cv
284.86 399.857 283.265 401.294 281.324 401.294 cv
cp
.14902 .623529 .74902 rgb
f
280.243 395.729 mo
225.685 395.729 li
226.338 396.337 226.769 397.167 226.878 398.1 cv
280.243 398.1 li
280.898 398.1 281.429 397.568 281.429 396.914 cv
281.429 396.259 280.898 395.729 280.243 395.729 cv
cp
.521569 .898039 1 rgb
f
226.922 398.547 mo
226.922 396.415 225.193 394.682 223.059 394.682 cv
168.657 394.682 li
166.522 394.682 164.793 396.415 164.793 398.547 cv
164.793 400.684 166.522 402.41 168.657 402.41 cv
223.059 402.41 li
225.193 402.41 226.922 400.684 226.922 398.547 cv
cp
.815686 .580392 .784314 rgb
f
168.657 401.294 mo
166.712 401.294 165.121 399.857 164.85 397.989 cv
164.822 398.172 164.793 398.355 164.793 398.547 cv
164.793 400.684 166.522 402.41 168.657 402.41 cv
223.059 402.41 li
224.118 402.41 225.076 401.985 225.773 401.294 cv
168.657 401.294 li
cp
.611765 .435294 .588235 rgb
f
168.553 396.914 mo
168.553 397.568 169.084 398.1 169.739 398.1 cv
226.878 398.1 li
226.769 397.167 226.338 396.337 225.685 395.729 cv
169.739 395.729 li
169.084 395.729 168.553 396.259 168.553 396.914 cv
cp
.890196 .74902 .870588 rgb
f
263.634 370.977 mo
223.303 370.977 li
219.439 374.844 li
223.303 378.706 li
263.634 378.706 li
265.766 378.706 267.498 376.979 267.498 374.844 cv
267.498 372.706 265.766 370.977 263.634 370.977 cv
cp
.368627 .733333 .0823529 rgb
f
263.634 377.59 mo
222.187 377.59 li
223.303 378.706 li
263.634 378.706 li
265.766 378.706 267.498 376.979 267.498 374.844 cv
267.498 374.651 267.469 374.467 267.441 374.285 cv
267.169 376.153 265.575 377.59 263.634 377.59 cv
cp
.278431 .54902 .0627451 rgb
f
261.826 371.73 mo
222.551 371.73 li
220.179 374.102 li
261.826 374.102 li
262.481 374.102 263.012 373.572 263.012 372.916 cv
263.012 372.262 262.481 371.73 261.826 371.73 cv
cp
.619608 .839216 .45098 rgb
f
223.303 370.977 mo
186.347 370.977 li
184.212 370.977 182.484 372.706 182.484 374.844 cv
182.484 376.979 184.212 378.706 186.347 378.706 cv
223.303 378.706 li
219.439 374.844 li
223.303 370.977 li
cp
1 .85098 .309804 rgb
f
186.347 377.59 mo
184.403 377.59 182.812 376.153 182.54 374.285 cv
182.513 374.467 182.484 374.651 182.484 374.844 cv
182.484 376.979 184.212 378.706 186.347 378.706 cv
223.303 378.706 li
222.187 377.59 li
186.347 377.59 li
cp
.74902 .639216 .231373 rgb
f
188.156 371.73 mo
187.501 371.73 186.97 372.262 186.97 372.916 cv
186.97 373.572 187.501 374.102 188.156 374.102 cv
220.179 374.102 li
222.551 371.73 li
188.156 371.73 li
cp
1 .909804 .584314 rgb
f
281.324 271.232 mo
223.059 271.232 li
225.193 271.232 226.922 272.965 226.922 275.098 cv
226.922 277.234 225.193 278.961 223.059 278.961 cv
281.324 278.961 li
283.455 278.961 285.188 277.234 285.188 275.098 cv
285.188 272.965 283.455 271.232 281.324 271.232 cv
cp
.2 .831373 1 rgb
f
281.324 277.844 mo
225.773 277.844 li
225.076 278.535 224.118 278.961 223.059 278.961 cv
281.324 278.961 li
283.455 278.961 285.188 277.234 285.188 275.098 cv
285.188 274.905 285.159 274.722 285.132 274.54 cv
284.86 276.407 283.265 277.844 281.324 277.844 cv
cp
.14902 .623529 .74902 rgb
f
280.243 272.278 mo
225.685 272.278 li
226.338 272.886 226.769 273.718 226.878 274.651 cv
280.243 274.651 li
280.898 274.651 281.429 274.118 281.429 273.465 cv
281.429 272.808 280.898 272.278 280.243 272.278 cv
cp
.521569 .898039 1 rgb
f
226.922 275.098 mo
226.922 272.965 225.193 271.232 223.059 271.232 cv
168.657 271.232 li
166.522 271.232 164.793 272.965 164.793 275.098 cv
164.793 277.234 166.522 278.961 168.657 278.961 cv
223.059 278.961 li
225.193 278.961 226.922 277.234 226.922 275.098 cv
cp
.815686 .580392 .784314 rgb
f
168.657 277.844 mo
166.712 277.844 165.121 276.407 164.85 274.54 cv
164.822 274.722 164.793 274.905 164.793 275.098 cv
164.793 277.234 166.522 278.961 168.657 278.961 cv
223.059 278.961 li
224.118 278.961 225.076 278.535 225.773 277.844 cv
168.657 277.844 li
cp
.611765 .435294 .588235 rgb
f
168.553 273.465 mo
168.553 274.118 169.084 274.651 169.739 274.651 cv
226.878 274.651 li
226.769 273.718 226.338 272.886 225.685 272.278 cv
169.739 272.278 li
169.084 272.278 168.553 272.808 168.553 273.465 cv
cp
.890196 .74902 .870588 rgb
f
263.634 247.528 mo
223.303 247.528 li
219.439 251.393 li
223.303 255.256 li
263.634 255.256 li
265.766 255.256 267.498 253.529 267.498 251.393 cv
267.498 249.257 265.766 247.528 263.634 247.528 cv
cp
.368627 .733333 .0823529 rgb
f
263.634 254.141 mo
222.187 254.141 li
223.303 255.256 li
263.634 255.256 li
265.766 255.256 267.498 253.529 267.498 251.393 cv
267.498 251.202 267.469 251.018 267.441 250.835 cv
267.169 252.704 265.575 254.141 263.634 254.141 cv
cp
.278431 .54902 .0627451 rgb
f
261.826 248.28 mo
222.551 248.28 li
220.179 250.652 li
261.826 250.652 li
262.481 250.652 263.012 250.122 263.012 249.467 cv
263.012 248.813 262.481 248.28 261.826 248.28 cv
cp
.619608 .839216 .45098 rgb
f
223.303 247.528 mo
186.347 247.528 li
184.212 247.528 182.484 249.257 182.484 251.393 cv
182.484 253.529 184.212 255.256 186.347 255.256 cv
223.303 255.256 li
219.439 251.393 li
223.303 247.528 li
cp
1 .85098 .309804 rgb
f
186.347 254.141 mo
184.403 254.141 182.812 252.704 182.54 250.835 cv
182.513 251.018 182.484 251.202 182.484 251.393 cv
182.484 253.529 184.212 255.256 186.347 255.256 cv
223.303 255.256 li
222.187 254.141 li
186.347 254.141 li
cp
.74902 .639216 .231373 rgb
f
188.156 248.28 mo
187.501 248.28 186.97 248.813 186.97 249.467 cv
186.97 250.122 187.501 250.652 188.156 250.652 cv
220.179 250.652 li
222.551 248.28 li
188.156 248.28 li
cp
1 .909804 .584314 rgb
f
263.618 318.64 mo
223.051 318.64 li
225.195 318.64 226.93 320.374 226.93 322.506 cv
226.93 324.642 225.195 326.369 223.051 326.369 cv
263.618 326.369 li
265.758 326.369 267.498 324.642 267.498 322.506 cv
267.498 320.374 265.758 318.64 263.618 318.64 cv
cp
.2 .831373 1 rgb
f
263.618 325.252 mo
225.776 325.252 li
225.076 325.944 224.114 326.369 223.051 326.369 cv
263.618 326.369 li
265.758 326.369 267.498 324.642 267.498 322.506 cv
267.498 322.313 267.469 322.131 267.441 321.948 cv
267.168 323.815 265.567 325.252 263.618 325.252 cv
cp
.14902 .623529 .74902 rgb
f
262.533 319.686 mo
225.688 319.686 li
226.344 320.295 226.776 321.126 226.885 322.059 cv
262.533 322.059 li
263.19 322.059 263.723 321.527 263.723 320.873 cv
263.723 320.216 263.19 319.686 262.533 319.686 cv
cp
.521569 .898039 1 rgb
f
226.93 322.506 mo
226.93 320.374 225.195 318.64 223.051 318.64 cv
186.363 318.64 li
184.219 318.64 182.484 320.374 182.484 322.506 cv
182.484 324.642 184.219 326.369 186.363 326.369 cv
223.051 326.369 li
225.195 326.369 226.93 324.642 226.93 322.506 cv
cp
.815686 .580392 .784314 rgb
f
186.363 325.252 mo
184.411 325.252 182.812 323.815 182.54 321.948 cv
182.513 322.131 182.484 322.313 182.484 322.506 cv
182.484 324.642 184.219 326.369 186.363 326.369 cv
223.051 326.369 li
224.114 326.369 225.076 325.944 225.776 325.252 cv
186.363 325.252 li
cp
.611765 .435294 .588235 rgb
f
186.258 320.873 mo
186.258 321.527 186.791 322.059 187.448 322.059 cv
226.885 322.059 li
226.776 321.126 226.344 320.295 225.688 319.686 cv
187.448 319.686 li
186.791 319.686 186.258 320.216 186.258 320.873 cv
cp
.890196 .74902 .870588 rgb
f
281.335 294.936 mo
223.308 294.936 li
219.454 298.801 li
223.308 302.664 li
281.335 302.664 li
283.461 302.664 285.188 300.938 285.188 298.801 cv
285.188 296.665 283.461 294.936 281.335 294.936 cv
cp
.368627 .733333 .0823529 rgb
f
281.335 301.549 mo
222.195 301.549 li
223.308 302.664 li
281.335 302.664 li
283.461 302.664 285.188 300.938 285.188 298.801 cv
285.188 298.61 285.159 298.426 285.132 298.243 cv
284.861 300.112 283.271 301.549 281.335 301.549 cv
cp
.278431 .54902 .0627451 rgb
f
279.531 295.688 mo
222.558 295.688 li
220.192 298.06 li
279.531 298.06 li
280.185 298.06 280.714 297.53 280.714 296.875 cv
280.714 296.221 280.185 295.688 279.531 295.688 cv
cp
.619608 .839216 .45098 rgb
f
223.308 294.936 mo
168.647 294.936 li
166.517 294.936 164.793 296.665 164.793 298.801 cv
164.793 300.938 166.517 302.664 168.647 302.664 cv
223.308 302.664 li
219.454 298.801 li
223.308 294.936 li
cp
1 .85098 .309804 rgb
f
168.647 301.549 mo
166.707 301.549 165.12 300.112 164.85 298.243 cv
164.822 298.426 164.793 298.61 164.793 298.801 cv
164.793 300.938 166.517 302.664 168.647 302.664 cv
223.308 302.664 li
222.195 301.549 li
168.647 301.549 li
cp
.74902 .639216 .231373 rgb
f
170.45 295.688 mo
169.796 295.688 169.268 296.221 169.268 296.875 cv
169.268 297.53 169.796 298.06 170.45 298.06 cv
220.192 298.06 li
222.558 295.688 li
170.45 295.688 li
cp
1 .909804 .584314 rgb
f
263.618 73.7904 mo
223.051 73.7904 li
225.195 73.7904 226.93 75.5236 226.93 77.6559 cv
226.93 79.7925 225.195 81.5186 223.051 81.5186 cv
263.618 81.5186 li
265.758 81.5186 267.498 79.7925 267.498 77.6559 cv
267.498 75.5236 265.758 73.7904 263.618 73.7904 cv
cp
.2 .831373 1 rgb
f
263.618 80.4028 mo
225.776 80.4028 li
225.076 81.0928 224.114 81.5186 223.051 81.5186 cv
263.618 81.5186 li
265.758 81.5186 267.498 79.7925 267.498 77.6559 cv
267.498 77.4639 267.469 77.2811 267.441 77.0977 cv
267.168 78.9658 265.567 80.4028 263.618 80.4028 cv
cp
.14902 .623529 .74902 rgb
f
262.533 74.837 mo
225.688 74.837 li
226.344 75.445 226.776 76.2758 226.885 77.2089 cv
262.533 77.2089 li
263.19 77.2089 263.723 76.6768 263.723 76.0227 cv
263.723 75.3669 263.19 74.837 262.533 74.837 cv
cp
.521569 .898039 1 rgb
f
226.93 77.6559 mo
226.93 75.5236 225.195 73.7904 223.051 73.7904 cv
186.363 73.7904 li
184.219 73.7904 182.484 75.5236 182.484 77.6559 cv
182.484 79.7925 184.219 81.5186 186.363 81.5186 cv
223.051 81.5186 li
225.195 81.5186 226.93 79.7925 226.93 77.6559 cv
cp
.815686 .580392 .784314 rgb
f
186.363 80.4028 mo
184.411 80.4028 182.812 78.9658 182.54 77.0977 cv
182.513 77.2811 182.484 77.4639 182.484 77.6559 cv
182.484 79.7925 184.219 81.5186 186.363 81.5186 cv
223.051 81.5186 li
224.114 81.5186 225.076 81.0928 225.776 80.4028 cv
186.363 80.4028 li
cp
.611765 .435294 .588235 rgb
f
186.258 76.0227 mo
186.258 76.6768 186.791 77.2089 187.448 77.2089 cv
226.885 77.2089 li
226.776 76.2758 226.344 75.445 225.688 74.837 cv
187.448 74.837 li
186.791 74.837 186.258 75.3669 186.258 76.0227 cv
cp
.890196 .74902 .870588 rgb
f
281.335 50.0863 mo
223.308 50.0863 li
219.454 53.9507 li
223.308 57.8145 li
281.335 57.8145 li
283.461 57.8145 285.188 56.0873 285.188 53.9507 cv
285.188 51.8143 283.461 50.0863 281.335 50.0863 cv
cp
.368627 .733333 .0823529 rgb
f
281.335 56.6988 mo
222.195 56.6988 li
223.308 57.8145 li
281.335 57.8145 li
283.461 57.8145 285.188 56.0873 285.188 53.9507 cv
285.188 53.7585 285.159 53.5758 285.132 53.3925 cv
284.861 55.2606 283.271 56.6988 281.335 56.6988 cv
cp
.278431 .54902 .0627451 rgb
f
279.531 50.8385 mo
222.558 50.8385 li
220.192 53.2104 li
279.531 53.2104 li
280.185 53.2104 280.714 52.6793 280.714 52.0247 cv
280.714 51.3696 280.185 50.8385 279.531 50.8385 cv
cp
.619608 .839216 .45098 rgb
f
223.308 50.0863 mo
168.647 50.0863 li
166.517 50.0863 164.793 51.8143 164.793 53.9507 cv
164.793 56.0873 166.517 57.8145 168.647 57.8145 cv
223.308 57.8145 li
219.454 53.9507 li
223.308 50.0863 li
cp
1 .85098 .309804 rgb
f
168.647 56.6988 mo
166.707 56.6988 165.12 55.2606 164.85 53.3925 cv
164.822 53.5758 164.793 53.7585 164.793 53.9507 cv
164.793 56.0873 166.517 57.8145 168.647 57.8145 cv
223.308 57.8145 li
222.195 56.6988 li
168.647 56.6988 li
cp
.74902 .639216 .231373 rgb
f
170.45 50.8385 mo
169.796 50.8385 169.268 51.3696 169.268 52.0247 cv
169.268 52.6793 169.796 53.2104 170.45 53.2104 cv
220.192 53.2104 li
222.558 50.8385 li
170.45 50.8385 li
cp
1 .909804 .584314 rgb
f
288.276 61.5341 mo
288.276 105.682 161.705 138.747 161.705 182.937 cv
161.705 148.159 li
161.705 103.968 288.276 70.9004 288.276 26.7577 cv
288.276 61.5341 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 104.848 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .615686 .054902 ]
/C1 [.607843 .905882 .176471 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.607843 .905882 .176471 ]
/C1 [.211765 .615686 .054902 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 104.848 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~2E!KR3B9,^4?Yhk5<qM#6:4./77Kd<84cEH9MA/U:Jakb;H$Ln<E<1&=BSg3>?kH??XI2L@U`hXAS,Oe
BPD3rCM[j*DJsK6EH6,BF`hkOG^4R\H[L6iIXcluJV&N-KS>/9LkpnFMi<USNfT6_OckolPa.Q$Q^F20
S!ob4Q^=#'P`q;oOcYWbNfB!VMi*@ILkg_=KS4u0JUi9#IXQWlH[9s_G^"=RF`_\FEH,r9DJj<-CMITu
BP1phARo:[@UWYO?X@#C>?b96=BAR)<E)mq;Gg7e:JOVX9M7uL84Z6?779O26:!n&5<_4n4?GSa3B/rU
~>
<~SXl@DT:_dMTq\9VUSO`_VP^8hW2ZbrWiN5&Xf\b/YHY79Z*L[A['[6K[^W`U\@K/]]=Y_g]tM.p^VIY$
_SX4.`5KX7`lH-@aN;TIbKJ,Rc-FV\cd:(edaHUneCE+#f%8O+g"G*5gYCT?h;7#Gi8ESQio9"ZjQ5Lc
kN:mfjQ,@\io/kSi8<DJh;-lAgY1B7g"=p.f%/C%eC2mpda?Ihcd0n^c-4DTbK@uLaN2EB`l?!9`5BL0
_SO%'^V@Lr]tD"i]=PP`\@B#W[^ENM['R'DZ*CO;YHG%1XfSV)WiE%tW2HPjVPU,bUSFQXTqS-OT:VXF
~>
<~%LrsY%M''\%hK9`&.oKd&J>]h&ebol',2,p'GV>t'bqK"()@]&(Ddo*(`4,.)&X>2)B'P6)]Kb:*#ot>
*??.A*Zc@E+!2RI+<VdM+X&!Q+sJ3U,9nEY,U=W],pai`-71&d-RU8h-n$Jl.4H\p.Olnt.k<,#/1`>'
/M&G(/1W5$.k3"u.Oceq.4?Sm-mpAi-RL/e-7'ra,paf^,U=TZ,9nBV+sJ0R+X%sN+<VaJ+!2OF*Zc=B
*??.?*#oq;)]K_7)B'M3)&X;/(`4)+(Ddl'()@Z#'bqGu'GM5q',)#m&eYfi&J5Te&.fBa%hB0]%LrsY
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
161.705 175.208 mo
161.705 182.937 li
161.705 138.747 288.276 105.682 288.276 61.5341 cv
288.276 53.8059 li
288.276 97.9527 161.705 131.018 161.705 175.208 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 118.372 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.211765 .615686 .054902 ]
/C1 [.368627 .733333 .0823529 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.368627 .733333 .0823529 ]
/C1 [.211765 .615686 .054902 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 118.372 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~2E!HO2`EZT3&ioY3BB2^4$,Mc4?P_h4Zttm5!M7r5<qJ!5s[e'6:+%,6UX=16q'O57Rfj;7n6*@84cBE
8P2TI91qoO9MA/T9hnGY:/=Y]:f'tc;,L4h;H$Lm;cH^q<E3%"<`W:'='/R,=BSd0>$>*6>?b?;>[:W@
?<piB>[1N<>?b97>$5!2=BJ[-='&I(<`W4#<E)ps;c?Un;GpCi;,L.d:esk_:/4PZ9he>U9MA)P91hfK
8P)KF84Z9A7n6$<7R]a76psF26UO4-6:*t(5sR\#5<h@s5!D.n4Ztni4?GVd4$#D`3B9)Z3&iiU2`<QP
~>
<~SXl=BSXuFEStDXIT:hjMTV/!PTqS3TU8"EXUSFW\Unjf_V5:#cVP^5gVl-GkW2QYnWMukrWiE)!X/i;%
XK8M)XKAV,Xfeh0Y-5%4YHP17YctC;Z*CU?ZEggCZa7!F['[3J[C*EN[^NWR\$riU\@B&Y\[f8]]"5Ja
]=PSb]",A^\[]/Z\@8rV\$rfS[^NTO[C*BK['[0GZa7!DZEgd@Z*CR<Yct@8YHP.5Y-+q1Xf\_-XK8M)
XK/D&X/`2"Wi;tsWMlboW2QVlVl-DhVP^2dV59u`Unjf]USFTYU8"BUTqS0QTV.sNT:_aJSt;OFSXl=B
~>
<~%LrsY%LrsY%LrsY%LrsY%LrsZ%hB0]%hB0]%hB0]%hB0]%hK9`&.fBa&.fBa&.fBa&.fBb&J5Te&J5Te
&J5Te&J5Te&J5Wg&eYfi&eYfi&eYfi&eYfi',)#m',)#m',)#m',)#m',)&o'GM5q'GM5q'GM5q'GM5q
'bh>r'GM5q'GM5q'GM5q'GM5p',)#m',)#m',)#m',)#m'+toj&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Qc&.fBa&.fBa&.fBa&.fBa%hB0]%hB0]%hB0]%hB0]%hB-[%LrsY%LrsY%LrsY%LrsY
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
161.705 148.159 mo
161.705 155.888 li
161.705 111.697 288.276 78.6299 288.276 34.4855 cv
288.276 26.7577 li
288.276 70.9004 161.705 103.968 161.705 148.159 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 91.3228 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.368627 .733333 .0823529 ]
/C1 [.686275 .92549 .341176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.686275 .92549 .341176 ]
/C1 [.368627 .733333 .0823529 ]
/N 1 
>>
]
/Bounds [.5 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 91.3228 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~?=$uG?t!JQ@q0%[AS,OeBP;*pC27U$D/F0/DfBZ8EcQ5CFEMbMGB\:WH$XgaI!pElIXcluJV&K+K7nr4
L51P?M2@+IMi<USNfK0]OHGZgPEV5rQ'R`&R$a;1R[]h;SXl@ET:hmOU8"EYUnsrcVl6PnWN*#"XKAV-
YHG"0XK/D%WMuhpVl$>fUnjc[U7n9RT:_^GSXc4>R[TY3R$X,)Q'IStPEM&jOH5H_NfB!VMi*CKM26qB
L4t>7K7ec-JUi9#IXZ]nI!^3dH$OXYGBS.PFEDSEEcH&;Df9N1D/=!'C2.HrBP1phARo=]@q&kT?sd8I
~>
<~]=Y\f]Y(qk^:q=r^V@S"_83t)_Sa:/`5KU5`Q#p;a2c9BaN;QGb0%oNbKS2Sc-=PZcHjh`d*U1fdF-Il
e'lgre^`4$f%/I)f\"j0g"P06gY:K<gtgfBhVR,Hhr*GNiSieUioB(ZjQ,FajlY^gkND'mkiq?slK[^$
m-F!&lK[Wukih6nkND!ijlPUbjQ#:\io8tViS`YPhr!;IhVI#Dgt^Z=gY1B8g"G$1f[na+f%/C%e^W*t
e'landF$@gd*U+bcHa_[c-4DUbKJ)Ob/qcIaN2HCa2Z-=`Pod6`5BL1_SX.*_8*k$^V@Ls^:h4m]Y(kg
~>
<~'bqK"(Ddo*)&X>2)]Kb:*??1B+!2UJ+X&$R,9nHZ,pjrd-R^Al.4Qet.kE5'/M8Y/0/,(70etL?1GgpG
2)[BP3&ioY3]]>a4?Pbi5!D1q5X7V$6:+%,6psI47Ros>84cBF8kVfN9MJ5V:/=Y^:f1(f;H$Ln<)lq!
=&r=$<)cdp;Gp@h:f'q`:/4MX9MA)P8kMZH84Z6@7R]a66pj=.6:!n&5X.Is5!;%k4?GVc3]T2[3&`cS
2Dm<J1G^dA0ek@90/"q1/M/M).k<)!.4HYn-RU5f,pX`\,9e<T+WqmL+!)ID*?6%<)]BV4)&O2,(D[c$
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
288.276 182.935 mo
288.276 227.083 161.705 260.149 161.705 304.339 cv
161.705 269.561 li
161.705 225.369 288.276 192.301 288.276 148.159 cv
288.276 182.935 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 226.249 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 226.249 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
161.705 296.609 mo
161.705 304.339 li
161.705 260.149 288.276 227.083 288.276 182.935 cv
288.276 175.207 li
288.276 219.355 161.705 252.42 161.705 296.609 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 239.773 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 239.773 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
161.705 269.561 mo
161.705 277.288 li
161.705 233.098 288.276 200.03 288.276 155.887 cv
288.276 148.159 li
288.276 192.301 161.705 225.369 161.705 269.561 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 212.723 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 212.723 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
288.276 304.336 mo
288.276 348.484 161.705 381.549 161.705 425.739 cv
161.705 390.96 li
161.705 346.77 288.276 313.702 288.276 269.561 cv
288.276 304.336 li
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 347.65 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 347.65 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
161.705 418.009 mo
161.705 425.739 li
161.705 381.549 288.276 348.484 288.276 304.336 cv
288.276 296.609 li
288.276 340.755 161.705 373.82 161.705 418.009 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 361.174 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 361.174 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
161.705 390.96 mo
161.705 398.689 li
161.705 354.499 288.276 321.431 288.276 277.288 cv
288.276 269.561 li
288.276 313.702 161.705 346.77 161.705 390.96 cv
cp
level3{
gsave
clp
[126.571 0 0 126.571 161.705 334.125 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[126.571 0 0 126.571 161.705 334.125 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
108.909 412.891 mo
104.765 412.891 li
104.765 379.735 li
108.909 379.735 li
108.909 412.891 li
cp
.454902 .768627 .862745 rgb
f
103.523 412.891 mo
104.765 412.891 li
104.765 379.735 li
103.523 380.815 li
103.523 412.891 li
cp
.27451 .694118 .819608 rgb
f
113.054 412.891 mo
108.909 412.891 li
108.909 393.154 li
113.054 393.154 li
113.054 412.891 li
cp
1 1 1 rgb
f
126.201 412.891 mo
122.056 412.891 li
122.056 386.538 li
126.201 386.538 li
126.201 412.891 li
cp
f
120.812 412.891 mo
122.056 412.891 li
122.056 386.538 li
120.812 387.619 li
120.812 412.891 li
cp
.639216 .847059 .909804 rgb
f
122.056 412.891 mo
117.911 412.891 li
117.911 391.683 li
122.056 391.683 li
122.056 412.891 li
cp
.454902 .768627 .862745 rgb
f
116.668 412.891 mo
117.911 412.891 li
117.911 391.683 li
116.668 392.761 li
116.668 412.891 li
cp
.27451 .694118 .819608 rgb
f
135.204 412.891 mo
131.06 412.891 li
131.06 382.972 li
135.204 382.972 li
135.204 412.891 li
cp
.454902 .768627 .862745 rgb
f
129.817 412.891 mo
131.06 412.891 li
131.06 382.972 li
129.817 384.05 li
129.817 412.891 li
cp
.27451 .694118 .819608 rgb
f
139.348 412.891 mo
135.204 412.891 li
135.204 398.462 li
139.348 398.462 li
139.348 412.891 li
cp
1 1 1 rgb
f
103.779 417.707 mo
103.779 416.106 105.376 416.513 105.376 415.606 cv
105.376 415.234 105.2 415.053 104.803 415.053 cv
104.44 415.053 104.239 415.248 104.239 415.685 cv
103.774 415.685 li
103.774 414.95 104.19 414.627 104.822 414.627 cv
105.449 414.627 105.846 414.93 105.846 415.601 cv
105.846 416.968 104.254 416.365 104.254 417.702 cv
104.254 417.991 li
105.817 417.991 li
105.817 418.452 li
103.779 418.452 li
103.779 417.707 li
cp
f
107.88 417.409 mo
107.88 415.7 li
107.88 415.18 107.689 415.082 107.346 415.082 cv
106.994 415.082 106.773 415.18 106.773 415.7 cv
106.773 417.409 li
106.773 417.928 106.93 418.075 107.346 418.075 cv
107.689 418.075 107.88 417.928 107.88 417.409 cv
cp
106.308 417.409 mo
106.308 415.7 li
106.308 414.94 106.729 414.67 107.346 414.67 cv
107.934 414.67 108.346 414.94 108.346 415.7 cv
108.346 417.409 li
108.346 418.188 108.047 418.501 107.346 418.501 cv
106.612 418.501 106.308 418.188 106.308 417.409 cv
cp
f
108.699 418.056 mo
109.312 418.056 li
109.312 415.087 li
108.832 415.087 li
108.832 414.67 li
109.777 414.67 li
109.777 418.056 li
110.36 418.056 li
110.36 418.452 li
108.699 418.452 li
108.699 418.056 li
cp
f
112.266 417.409 mo
112.266 415.7 li
112.266 415.18 112.075 415.082 111.732 415.082 cv
111.38 415.082 111.159 415.18 111.159 415.7 cv
111.159 417.409 li
111.159 417.928 111.316 418.075 111.732 418.075 cv
112.075 418.075 112.266 417.928 112.266 417.409 cv
cp
110.694 417.409 mo
110.694 415.7 li
110.694 414.94 111.115 414.67 111.732 414.67 cv
112.32 414.67 112.732 414.94 112.732 415.7 cv
112.732 417.409 li
112.732 418.188 112.433 418.501 111.732 418.501 cv
110.998 418.501 110.694 418.188 110.694 417.409 cv
cp
f
116.931 417.707 mo
116.931 416.106 118.528 416.513 118.528 415.606 cv
118.528 415.234 118.351 415.053 117.954 415.053 cv
117.592 415.053 117.391 415.248 117.391 415.685 cv
116.926 415.685 li
116.926 414.95 117.342 414.627 117.974 414.627 cv
118.601 414.627 118.998 414.93 118.998 415.601 cv
118.998 416.968 117.406 416.365 117.406 417.702 cv
117.406 417.991 li
118.969 417.991 li
118.969 418.452 li
116.931 418.452 li
116.931 417.707 li
cp
f
121.032 417.409 mo
121.032 415.7 li
121.032 415.18 120.841 415.082 120.498 415.082 cv
120.146 415.082 119.925 415.18 119.925 415.7 cv
119.925 417.409 li
119.925 417.928 120.082 418.075 120.498 418.075 cv
120.841 418.075 121.032 417.928 121.032 417.409 cv
cp
119.46 417.409 mo
119.46 415.7 li
119.46 414.94 119.881 414.67 120.498 414.67 cv
121.086 414.67 121.497 414.94 121.497 415.7 cv
121.497 417.409 li
121.497 418.188 121.199 418.501 120.498 418.501 cv
119.764 418.501 119.46 418.188 119.46 417.409 cv
cp
f
121.851 418.056 mo
122.464 418.056 li
122.464 415.087 li
121.984 415.087 li
121.984 414.67 li
122.929 414.67 li
122.929 418.056 li
123.512 418.056 li
123.512 418.452 li
121.851 418.452 li
121.851 418.056 li
cp
f
123.836 417.707 mo
123.836 416.106 125.433 416.513 125.433 415.606 cv
125.433 415.234 125.256 415.053 124.86 415.053 cv
124.497 415.053 124.296 415.248 124.296 415.685 cv
123.831 415.685 li
123.831 414.95 124.247 414.627 124.88 414.627 cv
125.507 414.627 125.903 414.93 125.903 415.601 cv
125.903 416.968 124.311 416.365 124.311 417.702 cv
124.311 417.991 li
125.874 417.991 li
125.874 418.452 li
123.836 418.452 li
123.836 417.707 li
cp
f
129.998 417.707 mo
129.998 416.106 131.595 416.513 131.595 415.606 cv
131.595 415.234 131.418 415.053 131.021 415.053 cv
130.659 415.053 130.458 415.248 130.458 415.685 cv
129.993 415.685 li
129.993 414.95 130.409 414.627 131.041 414.627 cv
131.668 414.627 132.065 414.93 132.065 415.601 cv
132.065 416.968 130.473 416.365 130.473 417.702 cv
130.473 417.991 li
132.036 417.991 li
132.036 418.452 li
129.998 418.452 li
129.998 417.707 li
cp
f
134.099 417.409 mo
134.099 415.7 li
134.099 415.18 133.908 415.082 133.565 415.082 cv
133.213 415.082 132.992 415.18 132.992 415.7 cv
132.992 417.409 li
132.992 417.928 133.149 418.075 133.565 418.075 cv
133.908 418.075 134.099 417.928 134.099 417.409 cv
cp
132.527 417.409 mo
132.527 415.7 li
132.527 414.94 132.948 414.67 133.565 414.67 cv
134.153 414.67 134.565 414.94 134.565 415.7 cv
134.565 417.409 li
134.565 418.188 134.266 418.501 133.565 418.501 cv
132.831 418.501 132.527 418.188 132.527 417.409 cv
cp
f
134.918 418.056 mo
135.531 418.056 li
135.531 415.087 li
135.051 415.087 li
135.051 414.67 li
135.996 414.67 li
135.996 418.056 li
136.579 418.056 li
136.579 418.452 li
134.918 418.452 li
134.918 418.056 li
cp
f
138.255 415.489 mo
137.192 417.208 li
138.255 417.208 li
138.255 415.489 li
cp
136.717 417.634 mo
136.648 417.257 li
138.284 414.666 li
138.72 414.666 li
138.72 417.208 li
139.054 417.208 li
139.054 417.634 li
138.72 417.634 li
138.72 418.452 li
138.255 418.452 li
138.255 417.634 li
136.717 417.634 li
cp
f
142.623 413.131 mo
100.246 413.131 li
100.246 412.649 li
142.623 412.649 li
142.623 413.131 li
cp
.0941176 .615686 .772549 rgb
f
320.726 386.061 mo
317.385 389.406 315.317 394.018 315.317 399.116 cv
315.317 404.215 317.385 408.831 320.726 412.172 cv
333.782 399.116 li
320.726 386.061 li
cp
.27451 .694118 .819608 rgb
f
333.782 380.654 mo
328.685 380.654 324.068 382.722 320.726 386.061 cv
333.782 399.116 li
338.56 381.284 li
337.035 380.876 335.433 380.654 333.782 380.654 cv
cp
1 1 1 rgb
f
338.56 381.284 mo
333.782 399.116 li
350.516 406.922 li
351.624 404.549 352.245 401.909 352.245 399.116 cv
352.245 390.574 346.439 383.388 338.56 381.284 cv
cp
.639216 .847059 .909804 rgb
f
333.782 399.116 mo
320.726 412.172 li
324.068 415.514 328.685 417.582 333.782 417.582 cv
338.879 417.582 343.493 415.514 346.835 412.172 cv
348.351 410.659 349.598 408.883 350.516 406.922 cv
333.782 399.116 li
cp
.0705882 .462745 .580392 rgb
f
333.783 182.638 mo
323.598 182.638 315.342 174.384 315.342 164.199 cv
315.342 154.018 323.598 145.763 333.783 145.763 cv
343.964 145.763 352.22 154.018 352.22 164.199 cv
352.22 174.384 343.964 182.638 333.783 182.638 cv
cp
333.783 143.456 mo
322.323 143.456 313.037 152.743 313.037 164.199 cv
313.037 175.657 322.323 184.943 333.783 184.943 cv
345.239 184.943 354.526 175.657 354.526 164.199 cv
354.526 152.743 345.239 143.456 333.783 143.456 cv
cp
1 1 1 rgb
f
333.783 181.256 mo
343.186 181.256 350.839 173.605 350.839 164.199 cv
350.839 154.796 343.186 147.145 333.783 147.145 cv
333.783 142.074 li
345.98 142.074 355.908 152.001 355.908 164.199 cv
355.908 176.402 345.98 186.325 333.783 186.325 cv
333.783 181.256 li
cp
.454902 .768627 .862745 rgb
f
328.337 164.822 mo
328.337 165.529 328.637 165.824 329.184 165.824 cv
329.688 165.824 330.087 165.579 330.087 164.738 cv
330.087 164.549 li
330.087 163.75 329.905 163.555 329.233 163.555 cv
327.769 163.555 li
327.769 161.02 li
330.578 161.02 li
330.578 161.643 li
328.42 161.643 li
328.42 162.925 li
329.246 162.925 li
330.374 162.925 330.753 163.379 330.753 164.535 cv
330.753 164.745 li
330.753 165.95 330.101 166.468 329.184 166.468 cv
328.28 166.468 327.678 166.055 327.678 164.822 cv
328.337 164.822 li
cp
1 1 1 rgb
f
333.647 164.927 mo
333.647 162.483 li
333.647 161.741 333.373 161.601 332.884 161.601 cv
332.379 161.601 332.063 161.741 332.063 162.483 cv
332.063 164.927 li
332.063 165.669 332.288 165.879 332.884 165.879 cv
333.373 165.879 333.647 165.669 333.647 164.927 cv
cp
331.398 164.927 mo
331.398 162.483 li
331.398 161.397 332 161.012 332.884 161.012 cv
333.723 161.012 334.311 161.397 334.311 162.483 cv
334.311 164.927 li
334.311 166.04 333.884 166.489 332.884 166.489 cv
331.833 166.489 331.398 166.04 331.398 164.927 cv
cp
f
339.315 165.355 mo
339.315 164.794 li
339.315 164.444 339.223 164.255 338.845 164.255 cv
338.488 164.255 338.383 164.444 338.383 164.794 cv
338.383 165.355 li
338.383 165.704 338.488 165.908 338.845 165.908 cv
339.223 165.908 339.315 165.704 339.315 165.355 cv
cp
337.822 165.382 mo
337.822 164.781 li
337.822 164.08 338.151 163.744 338.845 163.744 cv
339.552 163.744 339.881 164.066 339.881 164.781 cv
339.881 165.382 li
339.881 166.097 339.552 166.419 338.845 166.419 cv
338.151 166.419 337.822 166.097 337.822 165.382 cv
cp
338.362 160.963 mo
336.786 166.517 li
336.268 166.517 li
337.857 160.963 li
338.362 160.963 li
cp
336.351 162.588 mo
336.351 162.028 li
336.351 161.678 336.26 161.488 335.883 161.488 cv
335.525 161.488 335.42 161.678 335.42 162.028 cv
335.42 162.588 li
335.42 162.939 335.525 163.141 335.883 163.141 cv
336.26 163.141 336.351 162.939 336.351 162.588 cv
cp
334.861 162.616 mo
334.861 162.014 li
334.861 161.313 335.189 160.977 335.883 160.977 cv
336.59 160.977 336.919 161.299 336.919 162.014 cv
336.919 162.616 li
336.919 163.33 336.59 163.652 335.883 163.652 cv
335.189 163.652 334.861 163.33 334.861 162.616 cv
cp
f
333.783 68.1812 mo
323.598 68.1812 315.342 59.9258 315.342 49.7414 cv
315.342 39.5586 323.598 31.3024 333.783 31.3024 cv
343.964 31.3024 352.22 39.5586 352.22 49.7414 cv
352.22 59.9258 343.964 68.1812 333.783 68.1812 cv
cp
333.783 28.9975 mo
322.323 28.9975 313.037 38.2854 313.037 49.7414 cv
313.037 61.1991 322.323 70.4837 333.783 70.4837 cv
345.239 70.4837 354.526 61.1991 354.526 49.7414 cv
354.526 38.2854 345.239 28.9975 333.783 28.9975 cv
cp
f
316.725 49.7414 mo
316.725 59.1464 324.375 66.7977 333.783 66.7977 cv
343.186 66.7977 350.839 59.1464 350.839 49.7414 cv
350.839 40.3371 343.186 32.6852 333.783 32.6852 cv
333.783 27.6146 li
345.98 27.6146 355.908 37.5417 355.908 49.7414 cv
355.908 61.9419 345.98 71.8666 333.783 71.8666 cv
321.579 71.8666 311.653 61.9419 311.653 49.7414 cv
316.725 49.7414 li
cp
.454902 .768627 .862745 rgb
f
330.634 46.7134 mo
328.813 51.9593 li
328.092 51.9593 li
329.773 47.1833 li
327.721 47.1833 li
327.721 46.5524 li
330.634 46.5524 li
330.634 46.7134 li
cp
1 1 1 rgb
f
331.721 50.3622 mo
331.721 51.0694 332.022 51.3642 332.568 51.3642 cv
333.073 51.3642 333.473 51.1192 333.473 50.2784 cv
333.473 50.0892 li
333.473 49.2906 333.29 49.0948 332.618 49.0948 cv
331.154 49.0948 li
331.154 46.5599 li
333.962 46.5599 li
333.962 47.1833 li
331.804 47.1833 li
331.804 48.4648 li
332.631 48.4648 li
333.758 48.4648 334.137 48.9197 334.137 50.0751 cv
334.137 50.2851 li
334.137 51.4903 333.486 52.0083 332.568 52.0083 cv
331.665 52.0083 331.062 51.5948 331.062 50.3622 cv
331.721 50.3622 li
cp
f
339.084 50.8952 mo
339.084 50.334 li
339.084 49.9845 338.992 49.7953 338.614 49.7953 cv
338.257 49.7953 338.152 49.9845 338.152 50.334 cv
338.152 50.8952 li
338.152 51.2447 338.257 51.448 338.614 51.448 cv
338.992 51.448 339.084 51.2447 339.084 50.8952 cv
cp
337.591 50.9225 mo
337.591 50.3208 li
337.591 49.6202 337.92 49.284 338.614 49.284 cv
339.321 49.284 339.65 49.6061 339.65 50.3208 cv
339.65 50.9225 li
339.65 51.6372 339.321 51.9593 338.614 51.9593 cv
337.92 51.9593 337.591 51.6372 337.591 50.9225 cv
cp
338.131 46.5035 mo
336.555 52.0572 li
336.037 52.0572 li
337.626 46.5035 li
338.131 46.5035 li
cp
336.121 48.1286 mo
336.121 47.5685 li
336.121 47.2181 336.029 47.0289 335.651 47.0289 cv
335.294 47.0289 335.189 47.2181 335.189 47.5685 cv
335.189 48.1286 li
335.189 48.4789 335.294 48.6814 335.651 48.6814 cv
336.029 48.6814 336.121 48.4789 336.121 48.1286 cv
cp
334.63 48.1561 mo
334.63 47.5544 li
334.63 46.8537 334.959 46.5176 335.651 46.5176 cv
336.36 46.5176 336.688 46.8396 336.688 47.5544 cv
336.688 48.1561 li
336.688 48.8708 336.36 49.1927 335.651 49.1927 cv
334.959 49.1927 334.63 48.8708 334.63 48.1561 cv
cp
f
333.783 303.788 mo
323.598 303.788 315.342 295.536 315.342 285.351 cv
315.342 275.167 323.598 266.911 333.783 266.911 cv
343.964 266.911 352.22 275.167 352.22 285.351 cv
352.22 295.536 343.964 303.788 333.783 303.788 cv
cp
333.783 264.606 mo
322.323 264.606 313.037 273.895 313.037 285.351 cv
313.037 296.807 322.323 306.094 333.783 306.094 cv
345.239 306.094 354.526 296.807 354.526 285.351 cv
354.526 273.895 345.239 264.606 333.783 264.606 cv
cp
f
350.839 285.351 mo
350.839 275.944 343.186 268.294 333.783 268.294 cv
333.783 263.224 li
345.98 263.224 355.908 273.15 355.908 285.351 cv
350.839 285.351 li
cp
.454902 .768627 .862745 rgb
f
327.756 286.503 mo
327.756 284.212 330.038 284.793 330.038 283.499 cv
330.038 282.966 329.787 282.707 329.219 282.707 cv
328.701 282.707 328.414 282.987 328.414 283.61 cv
327.748 283.61 li
327.748 282.561 328.344 282.097 329.247 282.097 cv
330.144 282.097 330.711 282.532 330.711 283.492 cv
330.711 285.446 328.435 284.584 328.435 286.497 cv
328.435 286.908 li
330.669 286.908 li
330.669 287.567 li
327.756 287.567 li
327.756 286.503 li
cp
1 1 1 rgb
f
331.944 285.971 mo
331.944 286.678 332.246 286.971 332.792 286.971 cv
333.297 286.971 333.695 286.727 333.695 285.886 cv
333.695 285.698 li
333.695 284.9 333.513 284.704 332.84 284.704 cv
331.378 284.704 li
331.378 282.167 li
334.185 282.167 li
334.185 282.792 li
332.028 282.792 li
332.028 284.073 li
332.855 284.073 li
333.982 284.073 334.361 284.528 334.361 285.683 cv
334.361 285.894 li
334.361 287.098 333.708 287.617 332.792 287.617 cv
331.889 287.617 331.286 287.204 331.286 285.971 cv
331.944 285.971 li
cp
f
339.308 286.503 mo
339.308 285.942 li
339.308 285.592 339.217 285.403 338.838 285.403 cv
338.481 285.403 338.377 285.592 338.377 285.942 cv
338.377 286.503 li
338.377 286.854 338.481 287.056 338.838 287.056 cv
339.217 287.056 339.308 286.854 339.308 286.503 cv
cp
337.815 286.531 mo
337.815 285.929 li
337.815 285.228 338.144 284.891 338.838 284.891 cv
339.545 284.891 339.874 285.215 339.874 285.929 cv
339.874 286.531 li
339.874 287.245 339.545 287.567 338.838 287.567 cv
338.144 287.567 337.815 287.245 337.815 286.531 cv
cp
338.355 282.112 mo
336.78 287.665 li
336.262 287.665 li
337.85 282.112 li
338.355 282.112 li
cp
336.345 283.736 mo
336.345 283.177 li
336.345 282.826 336.253 282.637 335.876 282.637 cv
335.518 282.637 335.413 282.826 335.413 283.177 cv
335.413 283.736 li
335.413 284.086 335.518 284.29 335.876 284.29 cv
336.253 284.29 336.345 284.086 336.345 283.736 cv
cp
334.854 283.764 mo
334.854 283.162 li
334.854 282.463 335.183 282.126 335.876 282.126 cv
336.584 282.126 336.912 282.448 336.912 283.162 cv
336.912 283.764 li
336.912 284.48 336.584 284.802 335.876 284.802 cv
335.183 284.802 334.854 284.48 334.854 283.764 cv
cp
f
134.988 174.278 mo
134.629 174.15 134.267 174.102 133.905 174.097 cv
130.955 174.037 125.958 169.544 126.765 165.082 cv
126.983 163.842 126.702 162.586 126.033 161.549 cv
123.613 157.712 127.347 149.225 130.096 148.1 cv
130.906 147.761 131.597 147.116 131.926 146.233 cv
132.552 144.562 131.663 142.714 129.945 142.105 cv
128.225 141.496 126.325 142.359 125.699 144.03 cv
125.367 144.913 125.47 145.838 125.882 146.61 cv
127.227 149.181 124.478 158.018 120.05 159.431 cv
118.582 159.915 117.353 160.978 116.768 162.63 cv
115.445 166.424 104.073 168.624 102.494 167.486 cv
102.309 167.364 102.108 167.244 101.873 167.161 cv
100.601 166.71 99.1903 167.349 98.7263 168.587 cv
98.2648 169.823 98.9221 171.192 100.197 171.643 cv
101.411 172.072 102.741 171.504 103.262 170.374 cv
104.079 168.651 115.123 165.211 118.175 167.925 cv
118.661 168.353 119.24 168.707 119.899 168.939 cv
120.62 169.193 121.359 169.272 122.076 169.217 cv
126.705 168.883 130.819 174.158 130.581 177.029 cv
130.47 178.421 131.307 179.788 132.737 180.296 cv
134.445 180.9 136.335 180.044 136.959 178.384 cv
137.58 176.721 136.7 174.882 134.988 174.278 cv
cp
f
113.433 49.7393 mo
113.433 55.5651 122.307 55.5685 122.307 49.7393 cv
122.307 43.9166 113.433 43.91 113.433 49.7393 cv
cp
128.622 60.2614 mo
128.478 58.7159 126.415 58.3674 125.788 59.8183 cv
125.426 59.7385 125.037 59.6133 124.664 59.5162 cv
125.034 57.8561 125.31 56.0416 125.479 54.1102 cv
127.39 52.7821 129.092 51.391 130.533 49.9973 cv
136.203 55.7644 136.595 60.9155 128.622 60.2614 cv
cp
123.888 59.3069 mo
122.455 58.8935 120.966 58.3599 119.435 57.7092 cv
121.166 56.8319 122.778 55.9129 124.636 54.6786 cv
124.465 56.3172 124.211 57.8685 123.888 59.3069 cv
cp
112.172 60.6276 mo
114.202 60.0307 116.35 59.1932 118.527 58.1466 cv
120.308 58.9352 122.05 59.5793 123.717 60.0573 cv
120.96 71.1547 115.121 71.6262 112.172 60.6276 cv
cp
111.04 54.0487 mo
113.384 55.6117 115.288 56.6517 117.603 57.7366 cv
115.672 58.6338 113.779 59.3518 111.981 59.8822 cv
111.551 58.1083 111.23 56.1404 111.04 54.0487 cv
cp
102.793 53.4313 mo
104.228 54.0978 105.567 52.4593 104.605 51.2134 cv
104.981 50.8058 105.391 50.3974 105.816 49.9883 cv
107.105 51.1743 108.583 52.3539 110.208 53.486 cv
110.385 55.8898 110.733 58.1184 111.216 60.1105 cv
102.939 62.329 98.225 59.9412 102.793 53.4313 cv
cp
110.149 52.4866 mo
108.775 51.4981 107.508 50.4763 106.388 49.4479 cv
107.521 48.4079 108.793 47.372 110.186 46.3709 cv
110.025 48.8104 110.045 50.5311 110.149 52.4866 cv
cp
111.347 38.8169 mo
110.836 40.7749 110.466 42.9886 110.259 45.3766 cv
108.614 46.5203 107.118 47.7091 105.816 48.9083 cv
97.8447 41.2423 99.939 35.7036 111.347 38.8169 cv
cp
112.117 39.0468 mo
113.872 39.573 115.715 40.2753 117.593 41.1477 cv
115.32 42.2159 113.31 43.329 111.102 44.7965 cv
111.319 42.7246 111.664 40.784 112.117 39.0468 cv
cp
122.172 34.934 mo
120.9 35.8413 121.643 37.7752 123.202 37.595 cv
123.33 37.9993 123.452 38.4193 123.568 38.8509 cv
121.937 39.33 120.233 39.9525 118.495 40.7276 cv
116.383 39.7133 114.3 38.8975 112.325 38.3073 cv
114.666 30.1888 118.961 28.1163 122.172 34.934 cv
cp
124.564 44.1614 mo
122.741 42.9538 121.135 42.0416 119.42 41.1725 cv
120.905 40.5376 122.357 40.0097 123.752 39.5989 cv
124.095 41.0089 124.37 42.5404 124.564 44.1614 cv
cp
124.734 53.6769 mo
122.359 55.3071 120.466 56.3396 118.512 57.2975 cv
115.874 56.1038 113.637 54.9003 110.96 53.0585 cv
110.798 50.7352 110.787 48.4344 111.003 45.804 cv
113.286 44.2379 115.713 42.8334 118.48 41.5759 cv
120.533 42.5803 122.376 43.6011 124.675 45.1716 cv
124.948 48.0094 124.972 50.7859 124.734 53.6769 cv
cp
125.51 45.7559 mo
127.18 46.9528 128.689 48.1986 129.978 49.4445 cv
128.699 50.6788 127.205 51.9156 125.553 53.1016 cv
125.711 50.7046 125.72 48.4312 125.51 45.7559 cv
cp
130.533 48.8919 mo
129.078 47.4849 127.356 46.0804 125.422 44.7409 cv
125.228 42.811 124.92 41.0106 124.523 39.3689 cv
135.014 36.5518 138.082 41.2141 130.533 48.8919 cv
cp
131.09 49.4445 mo
139.074 41.3195 135.756 35.5666 124.339 38.6218 cv
124.217 38.1637 124.087 37.7188 123.95 37.2897 cv
125.139 36.3625 124.409 34.5356 122.924 34.6553 cv
119.625 27.6473 114.297 28.5652 111.555 38.0782 cv
99.6508 34.8252 96.4794 40.9965 105.246 49.4479 cv
104.802 49.8763 104.372 50.3062 103.979 50.7335 cv
102.587 50.1758 101.353 51.6931 102.193 52.9373 cv
97.614 59.4529 101.406 63.5325 111.396 60.8566 cv
114.497 72.4587 121.518 72.2735 124.486 60.2631 cv
124.883 60.3661 125.295 60.498 125.679 60.5819 cv
125.872 62.0859 127.863 62.3921 128.493 61.0267 cv
136.417 61.7148 138.036 56.5115 131.09 49.4445 cv
cp
f
124.977 289.307 mo
110.76 289.307 li
110.059 288.679 109.496 287.995 109.096 287.243 cv
126.64 287.243 li
126.24 287.995 125.676 288.679 124.977 289.307 cv
cp
126.613 301.316 mo
109.124 301.316 li
109.534 300.564 110.107 299.881 110.817 299.254 cv
124.919 299.254 li
125.629 299.881 126.202 300.564 126.613 301.316 cv
cp
117.868 295.16 mo
119.619 295.988 121.324 296.807 122.791 297.712 cv
112.945 297.712 li
114.412 296.807 116.117 295.988 117.868 295.16 cv
cp
112.862 290.849 mo
122.873 290.849 li
121.388 291.774 119.652 292.609 117.868 293.452 cv
116.084 292.609 114.348 291.774 112.862 290.849 cv
cp
110.751 280.029 mo
124.986 280.029 li
125.684 280.656 126.246 281.339 126.645 282.092 cv
109.092 282.092 li
109.491 281.339 110.052 280.656 110.751 280.029 cv
cp
109.171 268.094 mo
126.565 268.094 li
126.137 268.847 125.539 269.529 124.809 270.157 cv
110.927 270.157 li
110.197 269.529 109.6 268.847 109.171 268.094 cv
cp
117.868 274.162 mo
116.176 273.36 114.529 272.569 113.096 271.7 cv
122.64 271.7 li
121.207 272.569 119.561 273.36 117.868 274.162 cv
cp
122.888 278.485 mo
112.847 278.485 li
114.337 277.557 116.078 276.719 117.868 275.872 cv
119.659 276.719 121.399 277.557 122.888 278.485 cv
cp
108.547 283.636 mo
127.189 283.636 li
127.33 284.391 127.33 284.943 127.187 285.701 cv
108.549 285.701 li
108.407 284.943 108.407 284.391 108.547 283.636 cv
cp
128.838 284.665 mo
128.838 279.85 124.39 277.296 119.66 275.017 cv
124.39 272.74 128.838 270.185 128.838 265.37 cv
127.294 265.37 li
127.294 265.784 127.239 266.172 127.155 266.551 cv
108.58 266.551 li
108.497 266.172 108.442 265.784 108.442 265.37 cv
106.899 265.37 li
106.899 270.185 111.347 272.74 116.076 275.017 cv
111.347 277.296 106.899 279.85 106.899 284.665 cv
106.899 289.478 111.347 292.028 116.075 294.305 cv
111.346 296.584 106.899 299.134 106.899 303.948 cv
108.442 303.948 li
108.442 303.567 108.491 303.208 108.561 302.859 cv
127.175 302.859 li
127.245 303.208 127.294 303.567 127.294 303.948 cv
128.838 303.948 li
128.838 299.134 124.391 296.584 119.661 294.305 cv
124.39 292.028 128.838 289.478 128.838 284.665 cv
cp
f
408.648 290.574 mo
415.377 294.459 li
415.715 293.873 li
408.648 289.793 li
408.648 282.89 li
407.972 282.89 li
407.971 290.77 li
401.537 294.484 li
401.875 295.07 li
407.485 291.831 li
414.584 295.93 li
414.922 295.343 li
408.162 291.441 li
408.648 291.16 li
408.648 290.574 li
389.639 280.185 mo
398.805 274.893 li
405.241 278.608 li
405.579 278.022 li
399.144 274.307 li
399.144 266.824 li
398.468 266.824 li
398.468 274.306 li
388.963 279.794 li
388.963 291.16 li
395.736 295.071 li
396.074 294.485 li
389.639 290.77 li
389.639 280.185 li
405.539 280.231 mo
398.974 276.442 li
398.636 277.028 li
405.201 280.818 li
405.539 280.231 li
391.573 289.849 mo
391.573 281.105 li
390.897 281.105 li
390.897 289.849 li
391.573 289.849 li
f
406.89 282.416 mo
406.89 277.851 li
407.533 277.851 li
408.997 280.161 li
409.335 280.695 409.599 281.177 409.816 281.644 cv
409.83 281.637 li
409.775 281.028 409.762 280.473 409.762 279.762 cv
409.762 277.851 li
410.317 277.851 li
410.317 282.416 li
409.721 282.416 li
408.272 280.1 li
407.954 279.592 407.649 279.07 407.418 278.577 cv
407.398 278.583 li
407.432 279.158 407.445 279.707 407.445 280.466 cv
407.445 282.416 li
406.89 282.416 li
f
397.094 299.397 mo
397.094 294.833 li
397.737 294.833 li
399.2 297.142 li
399.538 297.677 399.803 298.158 400.019 298.625 cv
400.033 298.618 li
399.978 298.009 399.965 297.454 399.965 296.743 cv
399.965 294.833 li
400.52 294.833 li
400.52 299.397 li
399.925 299.397 li
398.475 297.081 li
398.157 296.573 397.852 296.052 397.622 295.558 cv
397.602 295.565 li
397.636 296.14 397.649 296.688 397.649 297.447 cv
397.649 299.397 li
397.094 299.397 li
cp
f
397.703 301.239 mo
397.703 303.149 li
399.91 303.149 li
399.91 301.239 li
400.507 301.239 li
400.507 305.803 li
399.91 305.803 li
399.91 303.663 li
397.703 303.663 li
397.703 305.803 li
397.114 305.803 li
397.114 301.239 li
397.703 301.239 li
cp
f
417.16 297.142 mo
417.16 298.118 417.689 298.991 418.616 298.991 cv
419.551 298.991 420.078 298.131 420.078 297.095 cv
420.078 296.188 419.605 295.239 418.623 295.239 cv
417.648 295.239 417.16 296.14 417.16 297.142 cv
420.702 297.068 mo
420.702 298.639 419.747 299.472 418.582 299.472 cv
417.377 299.472 416.53 298.537 416.53 297.156 cv
416.53 295.706 417.431 294.758 418.65 294.758 cv
419.896 294.758 420.702 295.714 420.702 297.068 cv
f
394.887 266.079 mo
394.887 261.515 li
395.53 261.515 li
396.994 263.825 li
397.332 264.359 397.596 264.841 397.812 265.307 cv
397.826 265.3 li
397.772 264.691 397.759 264.136 397.759 263.425 cv
397.759 261.515 li
398.314 261.515 li
398.314 266.079 li
397.718 266.079 li
396.268 263.763 li
395.95 263.255 395.645 262.734 395.415 262.24 cv
395.395 262.247 li
395.429 262.822 395.442 263.37 395.442 264.13 cv
395.442 266.079 li
394.887 266.079 li
f
399.929 261.515 mo
399.929 263.425 li
402.137 263.425 li
402.137 261.515 li
402.733 261.515 li
402.733 266.079 li
402.137 266.079 li
402.137 263.94 li
399.929 263.94 li
399.929 266.079 li
399.34 266.079 li
399.34 261.515 li
399.929 261.515 li
f
403.206 267.044 mo
403.206 265.779 404.465 266.1 404.465 265.385 cv
404.465 265.091 404.326 264.948 404.012 264.948 cv
403.727 264.948 403.569 265.103 403.569 265.447 cv
403.202 265.447 li
403.202 264.867 403.531 264.612 404.029 264.612 cv
404.524 264.612 404.836 264.852 404.836 265.381 cv
404.836 266.46 403.58 265.984 403.58 267.04 cv
403.58 267.267 li
404.813 267.267 li
404.813 267.631 li
403.206 267.631 li
403.206 267.044 li
f
414.655 44.2323 mo
414.993 43.6459 li
409.503 40.4765 li
409.557 40.4765 li
409.557 31.6951 li
408.881 31.6951 li
408.881 40.1172 li
408.252 39.7542 li
407.623 40.1172 li
407.623 31.6951 li
406.947 31.6951 li
406.947 40.4775 li
406.999 40.4775 li
398.779 45.2232 li
391.585 41.069 li
391.247 41.6554 li
398.441 45.8096 li
398.441 56.7477 li
405.182 60.6394 li
405.52 60.0532 li
399.117 56.3568 li
399.117 45.8096 li
408.252 40.536 li
414.655 44.2323 li
418.063 56.0212 mo
425.358 60.2334 li
425.696 59.6472 li
418.09 55.2554 li
418.063 55.3031 li
418.063 48.5149 li
417.387 48.5149 li
417.387 56.3568 li
410.984 60.0532 li
411.322 60.6394 li
416.814 57.4682 li
416.786 57.5178 li
424.391 61.9086 li
424.729 61.3222 li
417.435 57.1104 li
418.063 56.7477 li
418.063 56.0212 li
401.051 55.4362 mo
401.051 46.7303 li
400.375 46.7303 li
400.375 55.4362 li
401.051 55.4362 li
f
390.359 41.2947 mo
390.143 41.4033 389.71 41.5119 389.154 41.5119 cv
387.867 41.5119 386.899 40.6989 386.899 39.2022 cv
386.899 37.7736 387.867 36.8048 389.283 36.8048 cv
389.851 36.8048 390.21 36.9266 390.366 37.0078 cv
390.224 37.4895 li
390.001 37.3808 389.682 37.2997 389.303 37.2997 cv
388.233 37.2997 387.522 37.9833 387.522 39.1824 cv
387.522 40.2995 388.165 41.0171 389.276 41.0171 cv
389.635 41.0171 390.001 40.9425 390.238 40.8273 cv
390.359 41.2947 li
cp
f
406.54 65.2616 mo
406.54 60.6971 li
407.183 60.6971 li
408.647 63.0067 li
408.985 63.5412 409.249 64.0228 409.465 64.4892 cv
409.479 64.4825 li
409.425 63.8736 409.411 63.3183 409.411 62.6073 cv
409.411 60.6971 li
409.967 60.6971 li
409.967 65.2616 li
409.371 65.2616 li
407.921 62.9453 li
407.603 62.4373 407.298 61.9161 407.068 61.4223 cv
407.048 61.4288 li
407.082 62.004 407.095 62.5526 407.095 63.3117 cv
407.095 65.2616 li
406.54 65.2616 li
cp
f
407.149 67.1029 mo
407.149 69.0131 li
409.357 69.0131 li
409.357 67.1029 li
409.953 67.1029 li
409.953 71.6673 li
409.357 71.6673 li
409.357 69.5276 li
407.149 69.5276 li
407.149 71.6673 li
406.56 71.6673 li
406.56 67.1029 li
407.149 67.1029 li
f
416.409 47.0508 mo
416.409 42.4863 li
417.052 42.4863 li
418.516 44.796 li
418.854 45.3304 419.118 45.8121 419.335 46.2784 cv
419.349 46.2719 li
419.294 45.6628 419.281 45.1076 419.281 44.3966 cv
419.281 42.4863 li
419.836 42.4863 li
419.836 47.0508 li
419.24 47.0508 li
417.791 44.7345 li
417.472 44.2266 417.168 43.7055 416.937 43.2115 cv
416.917 43.2182 li
416.951 43.7932 416.964 44.3418 416.964 45.101 cv
416.964 47.0508 li
416.409 47.0508 li
f
421.451 42.4863 mo
421.451 44.3966 li
423.659 44.3966 li
423.659 42.4863 li
424.255 42.4863 li
424.255 47.0508 li
423.659 47.0508 li
423.659 44.9112 li
421.451 44.9112 li
421.451 47.0508 li
420.862 47.0508 li
420.862 42.4863 li
421.451 42.4863 li
f
380.312 36.8794 mo
380.312 38.7897 li
382.519 38.7897 li
382.519 36.8794 li
383.115 36.8794 li
383.115 41.4439 li
382.519 41.4439 li
382.519 39.3042 li
380.312 39.3042 li
380.312 41.4439 li
379.722 41.4439 li
379.722 36.8794 li
380.312 36.8794 li
cp
f
384.493 42.153 mo
384.493 42.5043 384.617 42.6516 384.942 42.6516 cv
385.26 42.6516 385.429 42.5119 385.429 42.1144 cv
385.429 41.6847 385.193 41.5497 384.912 41.5497 cv
384.699 41.5497 li
384.699 41.2248 li
384.912 41.2248 li
385.127 41.2173 385.418 41.0162 385.418 40.7338 cv
385.418 40.4638 385.267 40.3052 384.972 40.3052 cv
384.71 40.3052 384.517 40.4251 384.517 40.8037 cv
384.17 40.8037 li
384.17 40.2664 384.444 39.9879 384.976 39.9803 cv
385.426 39.9803 385.773 40.224 385.773 40.7376 cv
385.773 40.9662 385.673 41.2636 385.375 41.3873 cv
385.673 41.5034 385.817 41.696 385.817 42.1105 cv
385.817 42.6667 385.522 43.0104 384.946 43.0104 cv
384.351 43.0104 384.134 42.729 384.134 42.153 cv
384.493 42.153 li
cp
f
426.4 63.0067 mo
426.4 63.9822 426.929 64.8556 427.856 64.8556 cv
428.791 64.8556 429.319 63.9953 429.319 62.9595 cv
429.319 62.0521 428.845 61.1031 427.863 61.1031 cv
426.888 61.1031 426.4 62.004 426.4 63.0067 cv
429.942 62.9321 mo
429.942 64.5033 428.987 65.3363 427.822 65.3363 cv
426.617 65.3363 425.77 64.4015 425.77 63.0199 cv
425.77 61.5705 426.671 60.6225 427.89 60.6225 cv
429.137 60.6225 429.942 61.578 429.942 62.9321 cv
f
406.794 28.198 mo
406.794 29.1735 407.323 30.0469 408.25 30.0469 cv
409.185 30.0469 409.712 29.1866 409.712 28.1508 cv
409.712 27.2434 409.238 26.2944 408.256 26.2944 cv
407.281 26.2944 406.794 27.1953 406.794 28.198 cv
410.335 28.1234 mo
410.335 29.6946 409.381 30.5276 408.216 30.5276 cv
407.011 30.5276 406.163 29.5928 406.163 28.2112 cv
406.163 26.7618 407.064 25.8138 408.284 25.8138 cv
409.53 25.8138 410.335 26.7693 410.335 28.1234 cv
f
387.533 164.797 mo
387.533 160.232 li
388.176 160.232 li
389.639 162.542 li
389.978 163.076 390.242 163.558 390.458 164.024 cv
390.472 164.018 li
390.418 163.409 390.404 162.853 390.404 162.142 cv
390.404 160.232 li
390.96 160.232 li
390.96 164.797 li
390.364 164.797 li
388.914 162.48 li
388.596 161.972 388.291 161.451 388.061 160.957 cv
388.041 160.964 li
388.075 161.539 388.088 162.088 388.088 162.847 cv
388.088 164.797 li
387.533 164.797 li
f
412.239 178.454 mo
412.239 173.89 li
412.882 173.89 li
414.346 176.199 li
414.684 176.734 414.948 177.215 415.164 177.682 cv
415.178 177.675 li
415.124 177.066 415.111 176.511 415.111 175.8 cv
415.111 173.89 li
415.666 173.89 li
415.666 178.454 li
415.07 178.454 li
413.62 176.138 li
413.302 175.63 412.997 175.109 412.767 174.615 cv
412.747 174.622 li
412.781 175.197 412.794 175.745 412.794 176.504 cv
412.794 178.454 li
412.239 178.454 li
cp
f
393.033 182.677 mo
393.033 178.112 li
393.676 178.112 li
395.14 180.422 li
395.478 180.956 395.742 181.438 395.958 181.905 cv
395.973 181.898 li
395.918 181.289 395.905 180.734 395.905 180.023 cv
395.905 178.112 li
396.46 178.112 li
396.46 182.677 li
395.864 182.677 li
394.415 180.361 li
394.096 179.853 393.791 179.331 393.561 178.838 cv
393.541 178.844 li
393.575 179.419 393.588 179.968 393.588 180.727 cv
393.588 182.677 li
393.033 182.677 li
cp
f
393.643 184.518 mo
393.643 186.428 li
395.851 186.428 li
395.851 184.518 li
396.446 184.518 li
396.446 189.083 li
395.851 189.083 li
395.851 186.943 li
393.643 186.943 li
393.643 189.083 li
393.054 189.083 li
393.054 184.518 li
393.643 184.518 li
cp
f
416.23 158.423 mo
416.23 153.858 li
416.873 153.858 li
418.337 156.168 li
418.675 156.703 418.939 157.184 419.156 157.651 cv
419.17 157.644 li
419.115 157.035 419.102 156.48 419.102 155.769 cv
419.102 153.858 li
419.657 153.858 li
419.657 158.423 li
419.061 158.423 li
417.612 156.107 li
417.294 155.599 416.989 155.078 416.758 154.584 cv
416.738 154.59 li
416.772 155.165 416.786 155.714 416.786 156.473 cv
416.786 158.423 li
416.23 158.423 li
cp
f
421.273 153.858 mo
421.273 155.769 li
423.48 155.769 li
423.48 153.858 li
424.076 153.858 li
424.076 158.423 li
423.48 158.423 li
423.48 156.283 li
421.273 156.283 li
421.273 158.423 li
420.683 158.423 li
420.683 153.858 li
421.273 153.858 li
f
402.616 145.881 mo
402.616 141.317 li
403.259 141.317 li
404.723 143.627 li
405.061 144.161 405.325 144.643 405.542 145.109 cv
405.556 145.103 li
405.501 144.493 405.488 143.938 405.488 143.227 cv
405.488 141.317 li
406.043 141.317 li
406.043 145.881 li
405.447 145.881 li
403.998 143.565 li
403.679 143.057 403.374 142.536 403.144 142.042 cv
403.124 142.049 li
403.158 142.624 403.171 143.172 403.171 143.932 cv
403.171 145.881 li
402.616 145.881 li
cp
f
396.031 141.317 mo
396.031 143.227 li
398.239 143.227 li
398.239 141.317 li
398.835 141.317 li
398.835 145.881 li
398.239 145.881 li
398.239 143.742 li
396.031 143.742 li
396.031 145.881 li
395.442 145.881 li
395.442 141.317 li
396.031 141.317 li
f
399.892 146.846 mo
399.892 145.581 401.152 145.902 401.152 145.187 cv
401.152 144.893 401.014 144.75 400.7 144.75 cv
400.413 144.75 400.257 144.905 400.257 145.249 cv
399.888 145.249 li
399.888 144.669 400.217 144.414 400.715 144.414 cv
401.21 144.414 401.524 144.654 401.524 145.183 cv
401.524 146.262 400.268 145.786 400.268 146.842 cv
400.268 147.069 li
401.501 147.069 li
401.501 147.433 li
399.892 147.433 li
399.892 146.846 li
cp
f
408.063 157.195 mo
415.038 158.68 li
415.179 158.018 li
408.204 156.534 li
408.063 157.195 li
400.507 162.952 mo
407.564 155.113 li
414.795 156.65 li
414.935 155.988 li
407.665 154.443 li
405.015 146.285 li
404.371 146.493 li
407.034 154.691 li
399.976 162.529 li
392.842 162.529 li
392.842 163.23 li
399.885 163.23 li
403.106 173.145 li
397.506 177.25 li
397.906 177.796 li
403.583 173.635 li
410.856 175.182 li
410.997 174.52 li
403.765 172.982 li
400.507 162.952 li
419.36 159.67 mo
418.716 159.879 li
421.139 167.338 li
416.194 172.832 li
416.696 173.285 li
421.904 167.501 li
419.36 159.67 li
419.087 166.729 mo
414.314 172.027 li
414.817 172.48 li
419.589 167.182 li
419.087 166.729 li
404.676 171.719 mo
405.32 171.51 li
402.629 163.23 li
401.985 163.439 li
404.676 171.719 li
388.525 166.423 mo
387.881 166.216 li
385.589 173.374 li
391.706 177.78 li
392.101 177.231 li
386.384 173.113 li
388.525 166.423 li
388.578 172.598 mo
390.383 166.963 li
389.739 166.756 li
387.934 172.391 li
388.578 172.598 li
f
56.9711 448.508 mo
50.4654 448.508 li
47.213 442.874 li
50.4654 437.241 li
56.9711 437.241 li
60.2236 442.874 li
56.9711 448.508 li
50.9144 438.017 mo
48.11 442.874 li
50.9144 447.731 li
56.5222 447.731 li
59.3267 442.874 li
56.5222 438.017 li
50.9144 438.017 li
.419608 .419608 .419608 rgb
f
21.9691 446.058 mo
13.0638 446.058 li
8.6105 438.345 li
13.0638 430.632 li
21.9691 430.632 li
26.4233 438.345 li
21.9691 446.058 li
13.6773 431.695 mo
9.83786 438.345 li
13.6773 444.995 li
21.3555 444.995 li
25.195 438.345 li
21.3555 431.695 li
13.6773 431.695 li
.447059 .447059 .447059 rgb
f
432.61 431.972 mo
424.438 431.972 li
420.353 424.895 li
424.438 417.817 li
432.61 417.817 li
436.696 424.895 li
432.61 431.972 li
425.002 418.793 mo
421.479 424.895 li
425.002 430.996 li
432.047 430.996 li
435.57 424.895 li
432.047 418.793 li
425.002 418.793 li
.396078 .396078 .396078 rgb
f
16.2268 427.428 mo
9.41721 427.428 li
6.01296 421.531 li
9.41721 415.634 li
16.2268 415.634 li
19.6312 421.531 li
16.2268 427.428 li
9.88675 416.447 mo
6.95102 421.531 li
9.88675 426.616 li
15.7574 426.616 li
18.6921 421.531 li
15.7574 416.447 li
9.88675 416.447 li
.403922 .403922 .403922 rgb
f
377.342 416.657 mo
375.205 416.657 li
374.136 414.806 li
375.205 412.955 li
377.342 412.955 li
378.411 414.806 li
377.342 416.657 li
375.352 413.21 mo
374.431 414.806 li
375.352 416.402 li
377.195 416.402 li
378.117 414.806 li
377.195 413.21 li
375.352 413.21 li
.454902 .454902 .454902 rgb
f
438.37 413.453 mo
436.049 413.453 li
434.889 411.443 li
436.049 409.433 li
438.37 409.433 li
439.53 411.443 li
438.37 413.453 li
436.209 409.71 mo
435.209 411.443 li
436.209 413.176 li
438.21 413.176 li
439.21 411.443 li
438.21 409.71 li
436.209 409.71 li
.435294 .435294 .435294 rgb
f
37.4019 409.749 mo
31.593 409.749 li
28.6876 404.717 li
31.593 399.687 li
37.4019 399.687 li
40.3073 404.717 li
37.4019 409.749 li
31.9931 400.38 mo
29.4895 404.717 li
31.9931 409.055 li
37.0019 409.055 li
39.5064 404.717 li
37.0019 400.38 li
31.9931 400.38 li
.427451 .427451 .427451 rgb
f
70.8924 404.393 mo
67.3843 404.393 li
65.6295 401.355 li
67.3843 398.317 li
70.8924 398.317 li
72.647 401.355 li
70.8924 404.393 li
67.6264 398.735 mo
66.1138 401.355 li
67.6264 403.974 li
70.6512 403.974 li
72.1628 401.355 li
70.6512 398.735 li
67.6264 398.735 li
.419608 .419608 .419608 rgb
f
417.744 399.633 mo
415.851 399.633 li
414.903 397.992 li
415.851 396.351 li
417.744 396.351 li
418.692 397.992 li
417.744 399.633 li
415.981 396.578 mo
415.164 397.992 li
415.981 399.407 li
417.614 399.407 li
418.43 397.992 li
417.614 396.578 li
415.981 396.578 li
.470588 .470588 .470588 rgb
f
391.147 397.048 mo
388.354 397.048 li
386.958 394.629 li
388.354 392.211 li
391.147 392.211 li
392.544 394.629 li
391.147 397.048 li
388.547 392.544 mo
387.343 394.629 li
388.547 396.714 li
390.955 396.714 li
392.158 394.629 li
390.955 392.544 li
388.547 392.544 li
.482353 .482353 .482353 rgb
f
408.297 393.372 mo
401.983 393.372 li
398.825 387.904 li
401.983 382.435 li
408.297 382.435 li
411.454 387.904 li
408.297 393.372 li
402.418 383.19 mo
399.696 387.904 li
402.418 392.618 li
407.862 392.618 li
410.584 387.904 li
407.862 383.19 li
402.418 383.19 li
.45098 .45098 .45098 rgb
f
384.167 380.06 mo
381.577 380.06 li
380.281 377.815 li
381.577 375.571 li
384.167 375.571 li
385.463 377.815 li
384.167 380.06 li
381.755 375.881 mo
380.638 377.815 li
381.755 379.75 li
383.989 379.75 li
385.106 377.815 li
383.989 375.881 li
381.755 375.881 li
.443137 .443137 .443137 rgb
f
14.4056 374.104 mo
10.9259 374.104 li
9.18593 371.09 li
10.9259 368.076 li
14.4056 368.076 li
16.1455 371.09 li
14.4056 374.104 li
11.1659 368.492 mo
9.66617 371.09 li
11.1659 373.688 li
14.1664 373.688 li
15.6662 371.09 li
14.1664 368.492 li
11.1659 368.492 li
.411765 .411765 .411765 rgb
f
24.4157 368.446 mo
15.8201 368.446 li
11.5217 361.001 li
15.8201 353.557 li
24.4157 353.557 li
28.715 361.001 li
24.4157 368.446 li
16.4132 354.584 mo
12.7069 361.001 li
16.4132 367.42 li
23.8237 367.42 li
27.529 361.001 li
23.8237 354.584 li
16.4132 354.584 li
.403922 .403922 .403922 rgb
f
56.2772 364.413 mo
48.455 364.413 li
44.5438 357.639 li
45.0225 356.81 li
46.1009 356.81 li
45.6221 357.639 li
48.9941 363.479 li
55.738 363.479 li
59.1101 357.639 li
55.738 351.799 li
48.9941 351.799 li
47.8388 353.799 li
47.2994 352.865 li
48.455 350.864 li
56.2772 350.864 li
60.1883 357.639 li
56.2772 364.413 li
46.3029 356.46 mo
45.2245 356.46 li
47.0977 353.215 li
47.637 354.149 li
46.3029 356.46 li
.423529 .423529 .423529 rgb
f
46.6513 356.81 mo
46.1009 356.81 li
46.3029 356.46 li
46.4493 356.46 li
47.71 354.276 li
47.637 354.149 li
47.8388 353.799 li
48.1138 354.276 li
46.6513 356.81 li
45.0225 356.81 mo
43.7253 356.81 li
42.2628 354.276 li
43.7253 351.743 li
46.6513 351.743 li
47.2994 352.865 li
47.0977 353.215 li
46.4493 352.092 li
43.9273 352.092 li
42.6657 354.276 li
43.9273 356.46 li
45.2245 356.46 li
45.0225 356.81 li
.454902 .454902 .454902 rgb
f
46.1009 356.81 mo
45.0225 356.81 li
45.2245 356.46 li
46.3029 356.46 li
46.1009 356.81 li
47.637 354.149 mo
47.0977 353.215 li
47.2994 352.865 li
47.8388 353.799 li
47.637 354.149 li
.509804 .509804 .509804 rgb
f
446.443 355.341 mo
441.332 355.341 li
438.775 350.913 li
441.332 346.486 li
446.443 346.486 li
449 350.913 li
446.443 355.341 li
441.684 347.097 mo
439.48 350.913 li
441.684 354.73 li
446.092 354.73 li
448.295 350.913 li
446.092 347.097 li
441.684 347.097 li
.462745 .462745 .462745 rgb
f
383.919 354.138 mo
376.313 354.138 li
372.51 347.55 li
376.313 340.963 li
383.919 340.963 li
387.723 347.55 li
383.919 354.138 li
376.836 341.871 mo
373.558 347.55 li
376.836 353.23 li
383.394 353.23 li
386.674 347.55 li
383.394 341.871 li
376.836 341.871 li
.411765 .411765 .411765 rgb
f
28.2112 347.562 mo
24.3149 347.562 li
22.367 344.187 li
24.3149 340.813 li
28.2112 340.813 li
30.159 344.187 li
28.2112 347.562 li
24.5834 341.279 mo
22.9043 344.187 li
24.5834 347.097 li
27.9426 347.097 li
29.6218 344.187 li
27.9426 341.279 li
24.5834 341.279 li
.439216 .439216 .439216 rgb
f
71.1778 340.178 mo
68.0418 340.178 li
66.4735 337.462 li
68.0418 334.747 li
71.1778 334.747 li
72.7461 337.462 li
71.1778 340.178 li
68.2576 335.121 mo
66.9058 337.462 li
68.2576 339.804 li
70.962 339.804 li
72.3137 337.462 li
70.962 335.121 li
68.2576 335.121 li
.47451 .47451 .47451 rgb
f
50.5184 339.339 mo
44.4683 339.339 li
41.4424 334.1 li
44.4683 328.859 li
50.5184 328.859 li
53.5443 334.1 li
50.5184 339.339 li
44.8849 329.582 mo
42.2776 334.1 li
44.8849 338.617 li
50.1018 338.617 li
52.7091 334.1 li
50.1018 329.582 li
44.8849 329.582 li
.431373 .431373 .431373 rgb
f
21.7868 333.295 mo
14.9506 333.295 li
11.5316 327.373 li
14.8267 321.667 li
14.833 321.678 li
19.9047 321.678 li
20.0349 321.453 li
21.7868 321.453 li
25.2058 327.373 li
21.7868 333.295 li
15.4212 322.269 mo
12.4746 327.373 li
15.4212 332.478 li
21.3162 332.478 li
24.2628 327.373 li
21.3162 322.269 li
15.4212 322.269 li
.470588 .470588 .470588 rgb
f
49.9126 327.436 mo
45.9573 327.436 li
43.9801 324.011 li
45.9573 320.586 li
49.9126 320.586 li
51.8907 324.011 li
49.9126 327.436 li
46.2299 321.058 mo
44.5251 324.011 li
46.2299 326.964 li
49.64 326.964 li
51.3448 324.011 li
49.64 321.058 li
46.2299 321.058 li
.454902 .454902 .454902 rgb
f
56.5889 322.362 mo
54.6098 322.362 li
53.6207 320.648 li
54.6098 318.934 li
56.5889 318.934 li
57.5779 320.648 li
56.5889 322.362 li
54.746 319.171 mo
53.8932 320.648 li
54.746 322.125 li
56.4526 322.125 li
57.3055 320.648 li
56.4526 319.171 li
54.746 319.171 li
.431373 .431373 .431373 rgb
f
14.8267 321.667 mo
12.2962 317.286 li
14.833 312.893 li
19.9047 312.893 li
22.4407 317.286 li
20.0349 321.453 li
14.9506 321.453 li
14.8267 321.667 li
15.182 313.498 mo
12.9961 317.286 li
15.182 321.072 li
19.5548 321.072 li
21.7417 317.286 li
19.5548 313.498 li
15.182 313.498 li
.462745 .462745 .462745 rgb
f
19.9047 321.678 mo
14.833 321.678 li
14.8267 321.667 li
14.9506 321.453 li
20.0349 321.453 li
19.9047 321.678 li
.552941 .552941 .552941 rgb
f
60.1143 413.178 mo
55.0426 413.178 li
52.5057 408.785 li
55.0426 404.393 li
60.1143 404.393 li
62.6502 408.785 li
60.1143 413.178 li
55.3915 404.998 mo
53.2057 408.785 li
55.3915 412.572 li
59.7643 412.572 li
61.9513 408.785 li
59.7643 404.998 li
55.3915 404.998 li
.462745 .462745 .462745 rgb
f
33.6916 317.773 mo
29.2464 317.773 li
27.0232 313.923 li
29.2464 310.072 li
33.6916 310.072 li
35.9139 313.923 li
33.6916 317.773 li
29.5522 310.603 mo
27.6358 313.923 li
29.5522 317.242 li
33.3849 317.242 li
35.3012 313.923 li
33.3849 310.603 li
29.5522 310.603 li
.435294 .435294 .435294 rgb
f
441.264 313.892 mo
437.416 313.892 li
435.491 310.56 li
435.529 310.495 li
436.061 310.495 li
436.023 310.56 li
437.681 313.434 li
440.998 313.434 li
442.657 310.56 li
440.998 307.686 li
440.736 307.686 li
441 307.228 li
441.264 307.228 li
443.188 310.56 li
441.264 313.892 li
436.323 310.04 mo
435.792 310.04 li
437.416 307.228 li
440.475 307.228 li
440.21 307.686 li
437.681 307.686 li
436.323 310.04 li
.45098 .45098 .45098 rgb
f
439.114 310.495 mo
436.061 310.495 li
436.323 310.04 li
438.852 310.04 li
440.21 307.686 li
440.736 307.686 li
439.114 310.495 li
435.529 310.495 mo
435.306 310.495 li
433.403 307.197 li
435.306 303.9 li
439.114 303.9 li
441.018 307.197 li
441 307.228 li
440.475 307.228 li
440.493 307.197 li
438.852 304.354 li
435.569 304.354 li
433.927 307.197 li
435.569 310.04 li
435.792 310.04 li
435.529 310.495 li
.415686 .415686 .415686 rgb
f
436.061 310.495 mo
435.529 310.495 li
435.792 310.04 li
436.323 310.04 li
436.061 310.495 li
440.736 307.686 mo
440.21 307.686 li
440.475 307.228 li
441 307.228 li
440.736 307.686 li
.501961 .501961 .501961 rgb
f
29.7629 309.953 mo
22.6984 309.953 li
19.1666 303.834 li
22.6984 297.716 li
28.7182 297.716 li
28.2308 298.56 li
23.1856 298.56 li
20.1401 303.834 li
23.1856 309.109 li
29.2756 309.109 li
31.3455 305.524 li
32.3192 305.524 li
29.7629 309.953 li
32.7215 304.827 mo
31.748 304.827 li
32.3213 303.834 li
29.2756 298.56 li
29.0346 298.56 li
29.5219 297.716 li
29.7629 297.716 li
33.2946 303.834 li
32.7215 304.827 li
.478431 .478431 .478431 rgb
f
35.8775 305.524 mo
32.3192 305.524 li
32.7215 304.827 li
35.4757 304.827 li
37.99 300.472 li
35.4757 296.116 li
30.4461 296.116 li
29.5219 297.716 li
28.7182 297.716 li
30.0443 295.42 li
35.8775 295.42 li
38.7947 300.472 li
35.8775 305.524 li
31.3455 305.524 mo
30.0443 305.524 li
27.1271 300.472 li
28.2308 298.56 li
29.0346 298.56 li
27.9309 300.472 li
30.4461 304.827 li
31.748 304.827 li
31.3455 305.524 li
.411765 .411765 .411765 rgb
f
32.3192 305.524 mo
31.3455 305.524 li
31.748 304.827 li
32.7215 304.827 li
32.3192 305.524 li
29.0346 298.56 mo
28.2308 298.56 li
28.7182 297.716 li
29.5219 297.716 li
29.0346 298.56 li
.52549 .52549 .52549 rgb
f
419.577 300.73 mo
415.396 300.73 li
413.888 298.118 li
414.464 298.118 li
415.684 300.231 li
419.289 300.231 li
420.084 298.854 li
420.291 298.634 420.455 298.357 420.562 298.025 cv
421.091 297.109 li
420.589 296.239 li
420.556 296.126 420.516 296.019 420.47 295.917 cv
420.725 295.475 li
421.668 297.109 li
419.577 300.73 li
413.914 297.052 mo
413.338 297.052 li
414.135 295.671 li
414.568 295.92 li
413.914 297.052 li
420.182 295.451 mo
420.141 295.401 420.097 295.353 420.051 295.307 cv
419.957 295.144 li
420.245 294.644 li
420.446 294.993 li
420.182 295.451 li
415.012 295.15 mo
414.724 294.651 li
414.97 294.224 li
415.377 294.459 li
415.715 293.873 li
415.309 293.638 li
415.396 293.488 li
419.577 293.488 li
419.63 293.578 li
419.342 294.077 li
419.289 293.987 li
415.684 293.987 li
415.012 295.15 li
.435294 .435294 .435294 rgb
f
414.568 295.92 mo
414.135 295.671 li
414.446 295.133 li
414.734 295.632 li
414.568 295.92 li
415.377 294.459 mo
414.97 294.224 li
415.309 293.638 li
415.715 293.873 li
415.377 294.459 li
.960784 .960784 .960784 rgb
f
420.084 298.854 mo
420.562 298.025 li
420.455 298.357 420.291 298.634 420.084 298.854 cv
420.589 296.239 mo
420.436 295.975 li
420.47 295.917 li
420.516 296.019 420.556 296.126 420.589 296.239 cv
420.158 295.492 mo
420.051 295.307 li
420.097 295.353 420.141 295.401 420.182 295.451 cv
420.158 295.492 li
f
419.704 297.244 mo
418.744 297.244 li
419.023 296.762 li
419.425 296.762 li
419.843 296.038 li
419.938 296.228 420.004 296.44 420.042 296.659 cv
419.704 297.244 li
420.725 295.475 mo
420.446 294.993 li
421.166 293.746 li
420.965 293.397 li
421.244 292.915 li
421.723 293.746 li
420.725 295.475 li
.427451 .427451 .427451 rgb
f
420.042 296.659 mo
420.004 296.44 419.938 296.228 419.843 296.038 cv
420.158 295.492 li
420.436 295.975 li
420.042 296.659 li
.964706 .964706 .964706 rgb
f
420.47 295.917 mo
420.392 295.745 420.296 295.589 420.182 295.451 cv
420.446 294.993 li
420.725 295.475 li
420.47 295.917 li
.498039 .498039 .498039 rgb
f
420.436 295.975 mo
420.158 295.492 li
420.182 295.451 li
420.296 295.589 420.392 295.745 420.47 295.917 cv
420.436 295.975 li
.933333 .933333 .933333 rgb
f
417.625 297.052 mo
417.161 297.052 li
417.164 296.954 417.172 296.857 417.184 296.762 cv
417.792 296.762 li
417.625 297.052 li
416.532 297.052 mo
415.553 297.052 li
414.745 295.651 li
414.922 295.343 li
414.906 295.334 li
415.012 295.15 li
415.943 296.762 li
416.553 296.762 li
416.542 296.856 416.535 296.953 416.532 297.052 cv
414.474 295.084 mo
414.39 295.036 li
413.645 293.746 li
413.769 293.531 li
414.232 293.798 li
414.724 294.651 li
414.474 295.084 li
414.525 293.186 mo
414.107 292.945 li
415.664 290.248 li
419.704 290.248 li
420.628 291.849 li
420.35 292.331 li
419.425 290.73 li
415.943 290.73 li
414.525 293.186 li
.427451 .427451 .427451 rgb
f
414.745 295.651 mo
414.734 295.632 li
414.906 295.334 li
414.922 295.343 li
414.745 295.651 li
414.446 295.133 mo
414.39 295.036 li
414.474 295.084 li
414.446 295.133 li
414.232 293.798 mo
413.769 293.531 li
414.107 292.945 li
414.525 293.186 li
414.202 293.746 li
414.232 293.798 li
.964706 .964706 .964706 rgb
f
417.161 297.052 mo
416.532 297.052 li
416.535 296.953 416.542 296.856 416.553 296.762 cv
417.184 296.762 li
417.172 296.857 417.164 296.954 417.161 297.052 cv
f
414.906 295.334 mo
414.474 295.084 li
414.724 294.651 li
415.012 295.15 li
414.906 295.334 li
.498039 .498039 .498039 rgb
f
414.734 295.632 mo
414.446 295.133 li
414.474 295.084 li
414.906 295.334 li
414.734 295.632 li
.933333 .933333 .933333 rgb
f
418.239 298.118 mo
417.359 298.118 li
417.241 297.858 417.174 297.558 417.162 297.244 cv
418.744 297.244 li
418.239 298.118 li
416.688 298.118 mo
414.464 298.118 li
413.881 297.109 li
413.914 297.052 li
415.553 297.052 li
415.664 297.244 li
416.531 297.244 li
416.54 297.563 416.594 297.856 416.688 298.118 cv
413.888 298.118 mo
409.309 298.118 li
406.131 292.613 li
407.054 292.08 li
409.925 297.052 li
413.338 297.052 li
413.305 297.109 li
413.888 298.118 li
421.244 292.915 mo
420.628 291.849 li
421.474 290.383 li
417.625 283.715 li
409.925 283.715 li
408.648 285.926 li
408.648 283.793 li
409.309 282.648 li
418.239 282.648 li
422.705 290.383 li
421.244 292.915 li
405.793 292.027 mo
404.844 290.383 li
407.972 284.965 li
407.972 287.098 li
406.075 290.383 li
406.716 291.494 li
405.793 292.027 li
.423529 .423529 .423529 rgb
f
406.131 292.613 mo
405.793 292.027 li
406.716 291.494 li
407.054 292.08 li
406.131 292.613 li
407.972 287.098 mo
407.972 284.965 li
408.648 283.793 li
408.648 285.926 li
407.972 287.098 li
.964706 .964706 .964706 rgb
f
417.359 298.118 mo
416.688 298.118 li
416.594 297.856 416.54 297.563 416.531 297.244 cv
417.162 297.244 li
417.174 297.558 417.241 297.858 417.359 298.118 cv
f
414.464 298.118 mo
413.888 298.118 li
413.305 297.109 li
413.338 297.052 li
413.914 297.052 li
413.881 297.109 li
414.464 298.118 li
.498039 .498039 .498039 rgb
f
419.023 296.762 mo
417.792 296.762 li
418.671 295.24 li
419.082 295.253 419.4 295.435 419.63 295.71 cv
419.023 296.762 li
419.927 295.195 mo
419.657 294.971 419.323 294.824 418.939 294.776 cv
419.342 294.077 li
419.957 295.144 li
419.927 295.195 li
420.245 294.644 mo
419.63 293.578 li
420.35 292.331 li
420.965 293.397 li
420.245 294.644 li
.423529 .423529 .423529 rgb
f
419.63 295.71 mo
419.4 295.435 419.082 295.253 418.671 295.24 cv
418.939 294.776 li
419.323 294.824 419.657 294.971 419.927 295.195 cv
419.63 295.71 li
.964706 .964706 .964706 rgb
f
419.957 295.144 mo
419.342 294.077 li
419.63 293.578 li
420.245 294.644 li
419.957 295.144 li
.498039 .498039 .498039 rgb
f
418.744 297.244 mo
417.162 297.244 li
417.16 297.21 417.16 297.176 417.16 297.142 cv
417.16 297.112 417.16 297.082 417.161 297.052 cv
417.625 297.052 li
417.792 296.762 li
419.023 296.762 li
418.744 297.244 li
416.531 297.244 mo
415.664 297.244 li
415.553 297.052 li
416.532 297.052 li
416.531 297.086 416.53 297.121 416.53 297.156 cv
416.53 297.185 416.53 297.215 416.531 297.244 cv
.490196 .490196 .490196 rgb
f
417.162 297.244 mo
416.531 297.244 li
416.53 297.215 416.53 297.185 416.53 297.156 cv
416.53 297.121 416.531 297.086 416.532 297.052 cv
417.161 297.052 li
417.16 297.082 417.16 297.112 417.16 297.142 cv
417.16 297.176 417.16 297.21 417.162 297.244 cv
.937255 .937255 .937255 rgb
f
420.965 293.397 mo
420.35 292.331 li
420.628 291.849 li
421.244 292.915 li
420.965 293.397 li
.490196 .490196 .490196 rgb
f
447.655 285.675 mo
445.325 285.675 li
444.161 283.658 li
445.325 281.64 li
447.655 281.64 li
448.821 283.658 li
447.655 285.675 li
445.486 281.918 mo
444.482 283.658 li
445.486 285.397 li
447.494 285.397 li
448.499 283.658 li
447.494 281.918 li
445.486 281.918 li
.478431 .478431 .478431 rgb
f
424.474 284.136 mo
420.039 284.136 li
417.821 280.295 li
420.039 276.453 li
424.474 276.453 li
426.692 280.295 li
424.474 284.136 li
420.344 276.983 mo
418.431 280.295 li
420.344 283.607 li
424.168 283.607 li
426.08 280.295 li
424.168 276.983 li
420.344 276.983 li
.4 .4 .4 rgb
f
70.3543 283.204 mo
63.1123 283.204 li
59.4914 276.933 li
63.1123 270.66 li
70.3543 270.66 li
73.9762 276.933 li
70.3543 283.204 li
63.6112 271.525 mo
60.4903 276.933 li
63.6112 282.339 li
69.8553 282.339 li
72.9774 276.933 li
69.8553 271.525 li
63.6112 271.525 li
.423529 .423529 .423529 rgb
f
381.089 268.436 mo
379.251 268.436 li
378.332 266.844 li
379.251 265.252 li
381.089 265.252 li
382.008 266.844 li
381.089 268.436 li
379.377 265.472 mo
378.585 266.844 li
379.377 268.216 li
380.962 268.216 li
381.754 266.844 li
380.962 265.472 li
379.377 265.472 li
.466667 .466667 .466667 rgb
f
398.468 270.096 mo
391.154 270.096 li
387.334 263.481 li
391.154 256.865 li
396.845 256.865 li
396.318 257.777 li
391.68 257.777 li
388.387 263.481 li
391.68 269.185 li
398.266 269.185 li
398.468 268.836 li
398.468 270.096 li
399.144 269.488 mo
399.144 267.664 li
399.936 266.291 li
400.99 266.291 li
399.144 269.488 li
.478431 .478431 .478431 rgb
f
398.792 270.096 mo
398.468 270.096 li
398.468 268.836 li
399.144 267.664 li
399.144 269.488 li
398.792 270.096 li
.941176 .941176 .941176 rgb
f
401.481 265.44 mo
400.428 265.44 li
401.294 263.94 li
402.137 263.94 li
402.137 264.305 li
401.481 265.44 li
402.137 263.425 mo
401.527 263.425 li
398.266 257.777 li
397.301 257.777 li
397.827 256.865 li
398.792 256.865 li
402.137 262.657 li
402.137 263.425 li
.478431 .478431 .478431 rgb
f
402.137 264.305 mo
402.137 263.94 li
401.294 263.94 li
401.559 263.481 li
401.527 263.425 li
402.137 263.425 li
402.137 262.657 li
402.613 263.481 li
402.137 264.305 li
.941176 .941176 .941176 rgb
f
405.658 266.291 mo
404.059 266.291 li
404.402 266.115 404.808 266.013 404.834 265.44 cv
405.167 265.44 li
408.24 260.118 li
405.167 254.796 li
399.022 254.796 li
397.827 256.865 li
396.845 256.865 li
398.531 253.945 li
405.658 253.945 li
409.222 260.118 li
405.658 266.291 li
403.452 266.291 mo
400.99 266.291 li
401.481 265.44 li
402.137 265.44 li
402.137 266.079 li
402.733 266.079 li
402.733 265.44 li
403.202 265.44 li
403.202 265.443 403.202 265.445 403.202 265.447 cv
403.569 265.447 li
403.569 265.445 403.569 265.443 403.569 265.44 cv
404.463 265.44 li
404.418 265.897 403.805 265.893 403.452 266.291 cv
.419608 .419608 .419608 rgb
f
402.733 266.079 mo
402.137 266.079 li
402.137 265.44 li
402.733 265.44 li
402.733 266.079 li
.968627 .968627 .968627 rgb
f
404.059 266.291 mo
403.452 266.291 li
403.805 265.893 404.418 265.897 404.463 265.44 cv
404.834 265.44 li
404.808 266.013 404.402 266.115 404.059 266.291 cv
403.569 265.447 mo
403.202 265.447 li
403.202 265.445 403.202 265.443 403.202 265.44 cv
403.569 265.44 li
403.569 265.443 403.569 265.445 403.569 265.447 cv
f
399.936 266.291 mo
398.531 266.291 li
398.314 265.915 li
398.314 264.214 li
399.022 265.44 li
399.34 265.44 li
399.34 266.079 li
399.929 266.079 li
399.929 265.44 li
400.428 265.44 li
399.936 266.291 li
397.805 265.034 mo
394.967 260.118 li
396.318 257.777 li
397.301 257.777 li
395.949 260.118 li
397.759 263.252 li
397.759 263.425 li
397.759 264.031 397.768 264.524 397.805 265.034 cv
.419608 .419608 .419608 rgb
f
398.314 265.915 mo
397.805 265.034 li
397.768 264.524 397.759 264.031 397.759 263.425 cv
397.759 263.252 li
398.314 264.214 li
398.314 265.915 li
.968627 .968627 .968627 rgb
f
399.929 266.079 mo
399.34 266.079 li
399.34 265.44 li
399.929 265.44 li
399.929 266.079 li
f
400.99 266.291 mo
399.936 266.291 li
400.428 265.44 li
401.481 265.44 li
400.99 266.291 li
397.301 257.777 mo
396.318 257.777 li
396.845 256.865 li
397.827 256.865 li
397.301 257.777 li
.529412 .529412 .529412 rgb
f
27.5201 262.315 mo
21.1007 262.315 li
17.8904 256.755 li
21.1007 251.196 li
27.5201 251.196 li
30.7304 256.755 li
27.5201 262.315 li
21.5426 251.962 mo
18.7755 256.755 li
21.5426 261.549 li
27.0781 261.549 li
29.8452 256.755 li
27.0781 251.962 li
21.5426 251.962 li
.458824 .458824 .458824 rgb
f
389.264 252.121 mo
386.849 252.121 li
385.642 250.03 li
386.849 247.938 li
389.264 247.938 li
390.471 250.03 li
389.264 252.121 li
387.016 248.228 mo
385.975 250.03 li
387.016 251.833 li
389.097 251.833 li
390.138 250.03 li
389.097 248.228 li
387.016 248.228 li
.435294 .435294 .435294 rgb
f
391.784 241.934 mo
389.482 241.934 li
388.332 239.942 li
389.482 237.949 li
391.784 237.949 li
392.935 239.942 li
391.784 241.934 li
389.641 238.223 mo
388.649 239.942 li
389.641 241.66 li
391.625 241.66 li
392.618 239.942 li
391.625 238.223 li
389.641 238.223 li
.443137 .443137 .443137 rgb
f
33.0167 69.0628 mo
30.7151 69.0628 li
29.5644 67.0702 li
30.7151 65.0773 li
33.0167 65.0773 li
34.1675 67.0702 li
33.0167 69.0628 li
30.874 65.3518 mo
29.8819 67.0702 li
30.874 68.7885 li
32.8579 68.7885 li
33.8509 67.0702 li
32.8579 65.3518 li
30.874 65.3518 li
f
406.614 241.005 mo
401.502 241.005 li
398.946 236.579 li
401.502 232.152 li
402.829 232.152 li
402.477 232.762 li
401.854 232.762 li
399.651 236.579 li
401.854 240.395 li
406.261 240.395 li
408.012 237.362 li
408.717 237.362 li
406.614 241.005 li
409.047 236.79 mo
408.342 236.79 li
408.465 236.579 li
406.261 232.762 li
403.136 232.762 li
403.489 232.152 li
406.614 232.152 li
409.169 236.579 li
409.047 236.79 li
.396078 .396078 .396078 rgb
f
409.395 237.362 mo
408.717 237.362 li
409.047 236.79 li
409.064 236.79 li
411.129 233.216 li
409.064 229.642 li
404.938 229.642 li
403.489 232.152 li
402.829 232.152 li
404.608 229.07 li
409.395 229.07 li
411.788 233.216 li
409.395 237.362 li
408.012 237.362 mo
404.608 237.362 li
402.215 233.216 li
402.477 232.762 li
403.136 232.762 li
402.874 233.216 li
404.938 236.79 li
408.342 236.79 li
408.012 237.362 li
.4 .4 .4 rgb
f
408.717 237.362 mo
408.012 237.362 li
408.342 236.79 li
409.047 236.79 li
408.717 237.362 li
403.136 232.762 mo
402.477 232.762 li
402.829 232.152 li
403.489 232.152 li
403.136 232.762 li
.443137 .443137 .443137 rgb
f
426.427 233.884 mo
421.774 233.884 li
419.447 229.853 li
420.882 227.368 li
421.523 227.368 li
420.088 229.853 li
422.095 233.328 li
426.107 233.328 li
428.113 229.853 li
426.678 227.368 li
427.32 227.368 li
428.755 229.853 li
426.427 233.884 li
426.714 226.32 mo
421.487 226.32 li
421.774 225.823 li
426.427 225.823 li
426.714 226.32 li
.454902 .454902 .454902 rgb
f
432.029 226.206 mo
429.758 226.206 li
430.003 225.781 li
431.784 225.781 li
433.315 223.128 li
432.426 221.586 li
432.671 221.162 li
433.805 223.128 li
432.029 226.206 li
428.548 226.206 mo
428.476 226.206 li
426.699 223.128 li
428.476 220.051 li
432.029 220.051 li
432.065 220.113 li
431.82 220.538 li
431.784 220.475 li
428.72 220.475 li
427.189 223.128 li
428.72 225.781 li
428.793 225.781 li
428.548 226.206 li
.403922 .403922 .403922 rgb
f
429.087 227.368 mo
427.32 227.368 li
426.714 226.32 li
428.482 226.32 li
428.548 226.206 li
429.758 226.206 li
429.087 227.368 li
426.678 227.368 mo
421.523 227.368 li
422.095 226.378 li
426.107 226.378 li
426.678 227.368 li
420.882 227.368 mo
420.308 227.368 li
415.918 219.765 li
420.308 212.162 li
429.087 212.162 li
433.477 219.765 li
432.671 221.162 li
432.065 220.113 li
432.266 219.765 li
428.482 213.21 li
420.913 213.21 li
417.128 219.765 li
420.913 226.32 li
421.487 226.32 li
420.882 227.368 li
430.003 225.781 mo
428.793 225.781 li
431.82 220.538 li
432.426 221.586 li
430.003 225.781 li
.427451 .427451 .427451 rgb
f
427.32 227.368 mo
426.678 227.368 li
426.107 226.378 li
422.095 226.378 li
421.523 227.368 li
420.882 227.368 li
421.487 226.32 li
426.714 226.32 li
427.32 227.368 li
.513725 .513725 .513725 rgb
f
429.758 226.206 mo
428.548 226.206 li
428.793 225.781 li
430.003 225.781 li
429.758 226.206 li
432.426 221.586 mo
431.82 220.538 li
432.065 220.113 li
432.671 221.162 li
432.426 221.586 li
.470588 .470588 .470588 rgb
f
378.429 444.579 mo
376.127 444.579 li
374.976 442.586 li
376.127 440.593 li
378.429 440.593 li
379.579 442.586 li
378.429 444.579 li
376.286 440.868 mo
375.294 442.586 li
376.286 444.304 li
378.27 444.304 li
379.263 442.586 li
378.27 440.868 li
376.286 440.868 li
.443137 .443137 .443137 rgb
f
393.259 443.649 mo
388.147 443.649 li
385.591 439.223 li
388.147 434.796 li
389.474 434.796 li
389.121 435.406 li
388.499 435.406 li
386.296 439.223 li
388.499 443.04 li
392.906 443.04 li
394.657 440.006 li
395.362 440.006 li
393.259 443.649 li
395.692 439.434 mo
394.987 439.434 li
395.109 439.223 li
392.906 435.406 li
389.781 435.406 li
390.134 434.796 li
393.259 434.796 li
395.814 439.223 li
395.692 439.434 li
.396078 .396078 .396078 rgb
f
396.039 440.006 mo
395.362 440.006 li
395.692 439.434 li
395.709 439.434 li
397.774 435.86 li
395.709 432.286 li
391.582 432.286 li
390.134 434.796 li
389.474 434.796 li
391.253 431.714 li
396.039 431.714 li
398.433 435.86 li
396.039 440.006 li
394.657 440.006 mo
391.253 440.006 li
388.859 435.86 li
389.121 435.406 li
389.781 435.406 li
389.519 435.86 li
391.582 439.434 li
394.987 439.434 li
394.657 440.006 li
.4 .4 .4 rgb
f
395.362 440.006 mo
394.657 440.006 li
394.987 439.434 li
395.692 439.434 li
395.362 440.006 li
389.781 435.406 mo
389.121 435.406 li
389.474 434.796 li
390.134 434.796 li
389.781 435.406 li
.443137 .443137 .443137 rgb
f
413.072 436.528 mo
408.419 436.528 li
406.092 432.497 li
407.527 430.012 li
408.168 430.012 li
406.733 432.497 li
408.739 435.972 li
412.752 435.972 li
414.758 432.497 li
413.323 430.012 li
413.964 430.012 li
415.4 432.497 li
413.072 436.528 li
413.359 428.965 mo
408.132 428.965 li
408.419 428.467 li
413.072 428.467 li
413.359 428.965 li
.454902 .454902 .454902 rgb
f
418.674 428.85 mo
416.403 428.85 li
416.648 428.425 li
418.429 428.425 li
419.96 425.772 li
419.07 424.23 li
419.315 423.806 li
420.45 425.772 li
418.674 428.85 li
415.193 428.85 mo
415.121 428.85 li
413.344 425.772 li
415.121 422.695 li
418.674 422.695 li
418.71 422.758 li
418.465 423.182 li
418.429 423.119 li
415.365 423.119 li
413.834 425.772 li
415.365 428.425 li
415.438 428.425 li
415.193 428.85 li
.403922 .403922 .403922 rgb
f
415.731 430.012 mo
413.964 430.012 li
413.359 428.965 li
415.127 428.965 li
415.193 428.85 li
416.403 428.85 li
415.731 430.012 li
413.323 430.012 mo
408.168 430.012 li
408.739 429.022 li
412.752 429.022 li
413.323 430.012 li
407.527 430.012 mo
406.952 430.012 li
402.563 422.409 li
406.952 414.806 li
415.731 414.806 li
420.122 422.409 li
419.315 423.806 li
418.71 422.758 li
418.911 422.409 li
415.127 415.854 li
407.558 415.854 li
403.773 422.409 li
407.558 428.965 li
408.132 428.965 li
407.527 430.012 li
416.648 428.425 mo
415.438 428.425 li
418.465 423.182 li
419.07 424.23 li
416.648 428.425 li
.427451 .427451 .427451 rgb
f
413.964 430.012 mo
413.323 430.012 li
412.752 429.022 li
408.739 429.022 li
408.168 430.012 li
407.527 430.012 li
408.132 428.965 li
413.359 428.965 li
413.964 430.012 li
.513725 .513725 .513725 rgb
f
416.403 428.85 mo
415.193 428.85 li
415.438 428.425 li
416.648 428.425 li
416.403 428.85 li
419.07 424.23 mo
418.465 423.182 li
418.71 422.758 li
419.315 423.806 li
419.07 424.23 li
.470588 .470588 .470588 rgb
f
57.9808 219.275 mo
50.7802 219.275 li
47.1796 213.039 li
50.7802 206.803 li
57.9808 206.803 li
61.5812 213.039 li
57.9808 219.275 li
51.2761 207.663 mo
48.1727 213.039 li
51.2761 218.416 li
57.4849 218.416 li
60.5882 213.039 li
57.4849 207.663 li
51.2761 207.663 li
f
402.414 214.63 mo
396.695 214.63 li
393.836 209.677 li
396.695 204.724 li
402.414 204.724 li
405.274 209.677 li
402.414 214.63 li
397.089 205.407 mo
394.624 209.677 li
397.089 213.947 li
402.02 213.947 li
404.485 209.677 li
402.02 205.407 li
397.089 205.407 li
.462745 .462745 .462745 rgb
f
18.3923 211.511 mo
12.3911 211.511 li
9.38984 206.314 li
12.3911 201.116 li
18.3923 201.116 li
21.3937 206.314 li
18.3923 211.511 li
12.805 201.833 mo
10.2181 206.314 li
12.805 210.795 li
17.9786 210.795 li
20.5663 206.314 li
17.9786 201.833 li
12.805 201.833 li
.443137 .443137 .443137 rgb
f
395.718 203.046 mo
391.726 203.046 li
389.729 199.588 li
391.726 196.131 li
395.718 196.131 li
397.713 199.588 li
395.718 203.046 li
392 196.608 mo
390.28 199.588 li
392 202.569 li
395.442 202.569 li
397.163 199.588 li
395.442 196.608 li
392 196.608 li
.45098 .45098 .45098 rgb
f
395.383 28.8048 mo
389.665 28.8048 li
386.805 23.8518 li
389.665 18.8985 li
395.383 18.8985 li
398.244 23.8518 li
395.383 28.8048 li
390.059 19.5813 mo
387.593 23.8518 li
390.059 28.1215 li
394.989 28.1215 li
397.454 23.8518 li
394.989 19.5813 li
390.059 19.5813 li
.462745 .462745 .462745 rgb
f
388.687 17.2206 mo
384.696 17.2206 li
382.699 13.7631 li
384.696 10.3059 li
388.687 10.3059 li
390.683 13.7631 li
388.687 17.2206 li
384.97 10.7823 mo
383.25 13.7631 li
384.97 16.7436 li
388.412 16.7436 li
390.133 13.7631 li
388.412 10.7823 li
384.97 10.7823 li
.45098 .45098 .45098 rgb
f
418.634 199.409 mo
411.076 199.409 li
407.296 192.863 li
411.076 186.317 li
418.634 186.317 li
422.414 192.863 li
418.634 199.409 li
411.597 187.219 mo
408.339 192.863 li
411.597 198.506 li
418.114 198.506 li
421.372 192.863 li
418.114 187.219 li
411.597 187.219 li
.482353 .482353 .482353 rgb
f
14.0704 196.991 mo
5.42085 196.991 li
1.0951 189.5 li
5.42085 182.008 li
14.0704 182.008 li
18.3952 189.5 li
14.0704 196.991 li
6.0169 183.041 mo
2.28798 189.5 li
6.0169 195.959 li
13.4744 195.959 li
17.2032 189.5 li
13.4744 183.041 li
6.0169 183.041 li
.478431 .478431 .478431 rgb
f
439.445 189.265 mo
435.833 189.265 li
434.028 186.137 li
435.833 183.01 li
439.445 183.01 li
441.25 186.137 li
439.445 189.265 li
436.082 183.441 mo
434.526 186.137 li
436.082 188.833 li
439.196 188.833 li
440.752 186.137 li
439.196 183.441 li
436.082 183.441 li
.423529 .423529 .423529 rgb
f
384.435 184.543 mo
378.511 184.543 li
375.547 179.411 li
376.851 177.154 li
377.667 177.154 li
376.364 179.411 li
378.918 183.836 li
384.027 183.836 li
386.582 179.411 li
384.027 174.988 li
382.522 174.988 li
382.931 174.28 li
384.435 174.28 li
387.398 179.411 li
384.435 184.543 li
378.023 176.538 mo
377.206 176.538 li
378.511 174.28 li
382.22 174.28 li
381.811 174.988 li
378.918 174.988 li
378.023 176.538 li
.4 .4 .4 rgb
f
408.795 177.734 mo
406.85 177.734 li
405.877 176.049 li
406.85 174.364 li
407.011 174.364 li
408.104 174.597 li
406.983 174.597 li
406.145 176.049 li
406.983 177.501 li
408.661 177.501 li
409.5 176.049 li
408.738 174.731 li
409.044 174.796 li
409.767 176.049 li
408.795 177.734 li
.443137 .443137 .443137 rgb
f
409.044 174.796 mo
408.738 174.731 li
408.661 174.597 li
408.104 174.597 li
407.011 174.364 li
408.795 174.364 li
409.044 174.796 li
.956863 .956863 .956863 rgb
f
381.272 177.154 mo
377.667 177.154 li
378.023 176.538 li
380.916 176.538 li
381.811 174.988 li
382.522 174.988 li
381.272 177.154 li
376.851 177.154 mo
376.113 177.154 li
373.534 172.686 li
376.113 168.219 li
381.272 168.219 li
383.851 172.686 li
382.931 174.28 li
382.22 174.28 li
383.14 172.686 li
380.916 168.835 li
376.469 168.835 li
374.245 172.686 li
376.469 176.538 li
377.206 176.538 li
376.851 177.154 li
.462745 .462745 .462745 rgb
f
377.667 177.154 mo
376.851 177.154 li
377.206 176.538 li
378.023 176.538 li
377.667 177.154 li
382.522 174.988 mo
381.811 174.988 li
382.22 174.28 li
382.931 174.28 li
382.522 174.988 li
.501961 .501961 .501961 rgb
f
398.556 176.48 mo
391.059 176.48 li
390.397 176.003 li
388.397 172.54 li
388.578 172.598 li
388.932 171.493 li
391.242 175.493 li
398.366 175.493 li
401.888 169.395 li
402.298 170.658 li
399.214 175.998 li
398.556 176.48 li
388.069 171.971 mo
387.22 170.501 li
388.525 166.423 li
388.263 166.339 li
389.734 163.791 li
390.327 164.738 li
387.68 169.323 li
388.475 170.701 li
388.069 171.971 li
402.754 169.868 mo
401.944 167.376 li
403.068 169.323 li
402.754 169.868 li
386.762 169.709 mo
386.54 169.323 li
387.317 167.977 li
386.762 169.709 li
401.781 169.067 mo
398.411 163.23 li
399.55 163.23 li
400.315 164.555 li
401.781 169.067 li
390.458 164.024 mo
390.339 163.768 390.206 163.508 390.054 163.236 cv
390.407 162.626 li
390.413 163.12 390.431 163.553 390.472 164.018 cv
390.458 164.024 li
390.96 163.642 mo
390.96 162.166 li
398.936 162.166 li
399.145 162.529 li
392.842 162.529 li
392.842 163.153 li
391.242 163.153 li
390.96 163.642 li
.470588 .470588 .470588 rgb
f
390.327 164.738 mo
389.734 163.791 li
390.054 163.236 li
390.206 163.508 390.339 163.768 390.458 164.024 cv
390.472 164.018 li
390.431 163.553 390.413 163.12 390.407 162.626 cv
390.672 162.166 li
390.96 162.166 li
390.96 163.642 li
390.327 164.738 li
.945098 .945098 .945098 rgb
f
398.936 176.48 mo
398.556 176.48 li
399.214 175.998 li
398.936 176.48 li
391.059 176.48 mo
390.672 176.48 li
390.397 176.003 li
391.059 176.48 li
388.578 172.598 mo
388.397 172.54 li
388.069 171.971 li
388.475 170.701 li
388.932 171.493 li
388.578 172.598 li
402.298 170.658 mo
401.888 169.395 li
401.929 169.323 li
401.781 169.067 li
400.315 164.555 li
401.944 167.376 li
402.754 169.868 li
402.298 170.658 li
387.22 170.501 mo
386.762 169.709 li
387.317 167.977 li
388.263 166.339 li
388.525 166.423 li
387.22 170.501 li
399.55 163.23 mo
398.411 163.23 li
398.366 163.153 li
392.842 163.153 li
392.842 162.529 li
399.145 162.529 li
399.55 163.23 li
f
421.047 376.925 mo
415.329 376.925 li
412.469 371.972 li
415.329 367.019 li
421.047 367.019 li
423.908 371.972 li
421.047 376.925 li
415.723 367.701 mo
413.257 371.972 li
415.723 376.242 li
420.653 376.242 li
423.118 371.972 li
420.653 367.701 li
415.723 367.701 li
.462745 .462745 .462745 rgb
f
414.351 365.341 mo
410.36 365.341 li
408.363 361.883 li
410.36 358.426 li
414.351 358.426 li
416.347 361.883 li
414.351 365.341 li
410.634 358.902 mo
408.914 361.883 li
410.634 364.864 li
414.076 364.864 li
415.797 361.883 li
414.076 358.902 li
410.634 358.902 li
.45098 .45098 .45098 rgb
f
408.676 350.547 mo
402.752 350.547 li
399.788 345.415 li
400.685 343.862 li
401.094 344.569 li
400.605 345.415 li
403.159 349.84 li
408.268 349.84 li
410.823 345.415 li
410.334 344.569 li
410.742 343.862 li
411.639 345.415 li
408.676 350.547 li
409.765 343.582 mo
408.268 340.991 li
403.159 340.991 li
401.663 343.582 li
401.255 342.875 li
402.752 340.284 li
408.676 340.284 li
410.173 342.876 li
409.765 343.582 li
.4 .4 .4 rgb
f
440.482 396.678 mo
435.323 396.678 li
432.744 392.211 li
435.323 387.743 li
440.482 387.743 li
443.061 392.211 li
440.482 396.678 li
435.679 388.359 mo
433.455 392.211 li
435.679 396.063 li
440.126 396.063 li
442.351 392.211 li
440.126 388.359 li
435.679 388.359 li
.462745 .462745 .462745 rgb
f
409.846 345.415 mo
401.582 345.415 li
401.094 344.569 li
401.663 343.582 li
402.152 344.428 li
409.276 344.428 li
409.765 343.582 li
410.334 344.569 li
409.846 345.415 li
410.742 343.862 mo
410.173 342.876 li
412.839 338.258 li
409.276 332.088 li
402.152 332.088 li
398.59 338.258 li
401.255 342.875 li
400.685 343.862 li
397.45 338.258 li
401.582 331.101 li
409.846 331.101 li
413.978 338.258 li
410.742 343.862 li
.470588 .470588 .470588 rgb
f
401.094 344.569 mo
400.685 343.862 li
401.255 342.875 li
401.663 343.582 li
401.094 344.569 li
410.334 344.569 mo
409.765 343.582 li
410.173 342.876 li
410.742 343.862 li
410.334 344.569 li
.505882 .505882 .505882 rgb
f
430.794 173.638 mo
421.929 173.638 li
419.76 169.882 li
420.505 169.054 li
422.541 172.58 li
430.183 172.58 li
434.005 165.961 li
430.183 159.341 li
422.541 159.341 li
420.437 162.985 li
419.997 161.63 li
421.929 158.283 li
423.48 158.283 li
423.48 158.423 li
424.076 158.423 li
424.076 158.283 li
427.779 158.283 li
427.893 158.48 li
430.908 158.48 li
435.227 165.961 li
430.794 173.638 li
419.404 169.265 mo
418.743 168.121 li
419.489 167.294 li
420.149 168.438 li
419.404 169.265 li
418.388 167.505 mo
417.496 165.961 li
419.541 162.419 li
419.981 163.774 li
418.719 165.961 li
419.245 166.872 li
419.087 166.729 li
418.388 167.505 li
.47451 .47451 .47451 rgb
f
424.076 158.423 mo
423.48 158.423 li
423.48 158.283 li
424.076 158.283 li
424.076 158.423 li
.945098 .945098 .945098 rgb
f
419.76 169.882 mo
419.404 169.265 li
420.149 168.438 li
420.505 169.054 li
419.76 169.882 li
418.743 168.121 mo
418.388 167.505 li
419.087 166.729 li
419.245 166.872 li
419.489 167.294 li
418.743 168.121 li
419.981 163.774 mo
419.541 162.419 li
419.997 161.63 li
420.437 162.985 li
419.981 163.774 li
f
43.4656 165.671 mo
39.9171 165.671 li
38.1419 162.598 li
39.9171 159.525 li
43.4656 159.525 li
45.2408 162.598 li
43.4656 165.671 li
40.1612 159.948 mo
38.632 162.598 li
40.1612 165.247 li
43.2215 165.247 li
44.7506 162.598 li
43.2215 159.948 li
40.1612 159.948 li
.435294 .435294 .435294 rgb
f
63.5741 60.3011 mo
60.0257 60.3011 li
58.2504 57.2276 li
60.0257 54.1541 li
63.5741 54.1541 li
65.3492 57.2276 li
63.5741 60.3011 li
60.2698 54.5775 mo
58.7405 57.2276 li
60.2698 59.8771 li
63.3299 59.8771 li
64.8592 57.2276 li
63.3299 54.5775 li
60.2698 54.5775 li
f
53.4414 161.014 mo
51.3878 161.014 li
50.3604 159.235 li
51.3878 157.456 li
53.4414 157.456 li
54.4686 159.235 li
53.4414 161.014 li
51.529 157.701 mo
50.6437 159.235 li
51.529 160.769 li
53.2992 160.769 li
54.1853 159.235 li
53.2992 157.701 li
51.529 157.701 li
f
434.787 158.48 mo
430.908 158.48 li
430.794 158.283 li
427.779 158.283 li
424.445 152.509 li
427.893 146.538 li
434.787 146.538 li
438.234 152.509 li
434.787 158.48 li
428.367 147.362 mo
425.396 152.509 li
428.367 157.657 li
434.311 157.657 li
437.283 152.509 li
434.311 147.362 li
428.367 147.362 li
.415686 .415686 .415686 rgb
f
430.908 158.48 mo
427.893 158.48 li
427.779 158.283 li
430.794 158.283 li
430.908 158.48 li
.521569 .521569 .521569 rgb
f
25.6773 150.849 mo
23.7121 150.849 li
22.7287 149.147 li
23.7121 147.444 li
25.6773 147.444 li
26.6605 149.147 li
25.6773 150.849 li
23.8471 147.679 mo
23.0003 149.147 li
23.8471 150.615 li
25.542 150.615 li
26.3899 149.147 li
25.542 147.679 li
23.8471 147.679 li
.403922 .403922 .403922 rgb
f
66.896 153.282 mo
58.2377 153.282 li
53.909 145.784 li
58.2377 138.286 li
66.896 138.286 li
71.2247 145.784 li
66.896 153.282 li
58.8356 139.32 mo
55.1029 145.784 li
58.8356 152.248 li
66.299 152.248 li
70.0319 145.784 li
66.299 139.32 li
58.8356 139.32 li
.396078 .396078 .396078 rgb
f
436.125 144.412 mo
433.826 144.412 li
432.676 142.421 li
433.826 140.431 li
436.125 140.431 li
437.274 142.421 li
436.125 144.412 li
433.985 140.705 mo
432.994 142.421 li
433.985 144.137 li
435.966 144.137 li
436.957 142.421 li
435.966 140.705 li
433.985 140.705 li
.458824 .458824 .458824 rgb
f
401.1 142.284 mo
398.835 142.284 li
398.835 141.839 li
400.844 141.839 li
402.449 139.058 li
400.844 136.278 li
397.633 136.278 li
396.027 139.058 li
397.633 141.839 li
398.239 141.839 li
398.239 142.284 li
397.376 142.284 li
395.515 139.058 li
397.376 135.833 li
401.1 135.833 li
402.962 139.058 li
401.1 142.284 li
.431373 .431373 .431373 rgb
f
398.835 142.284 mo
398.239 142.284 li
398.239 141.839 li
398.835 141.839 li
398.835 142.284 li
.964706 .964706 .964706 rgb
f
14.988 135.592 mo
7.34215 135.592 li
3.51916 128.97 li
7.34215 122.348 li
12.7267 122.348 li
13.2537 123.261 li
7.86947 123.261 li
4.57393 128.97 li
7.86947 134.679 li
14.4615 134.679 li
17.757 128.97 li
16.3747 126.576 li
17.429 126.576 li
18.8117 128.97 li
14.988 135.592 li
17.0842 125.979 mo
16.03 125.979 li
14.4615 123.261 li
13.9428 123.261 li
13.4157 122.348 li
14.988 122.348 li
17.0842 125.979 li
.458824 .458824 .458824 rgb
f
39.731 133.131 mo
31.0432 133.131 li
26.6997 125.608 li
31.0432 118.083 li
39.731 118.083 li
44.0753 125.608 li
39.731 133.131 li
31.642 119.12 mo
27.8976 125.608 li
31.642 132.094 li
39.132 132.094 li
42.8775 125.608 li
39.132 119.12 li
31.642 119.12 li
.439216 .439216 .439216 rgb
f
20.1674 126.576 mo
17.429 126.576 li
17.0842 125.979 li
19.8224 125.979 li
21.9789 122.244 li
19.8224 118.511 li
15.5113 118.511 li
13.3558 122.244 li
13.4157 122.348 li
12.7267 122.348 li
12.6668 122.244 li
15.1663 117.914 li
20.1674 117.914 li
22.668 122.244 li
20.1674 126.576 li
16.3747 126.576 mo
15.1663 126.576 li
13.2537 123.261 li
13.9428 123.261 li
15.5113 125.979 li
16.03 125.979 li
16.3747 126.576 li
.419608 .419608 .419608 rgb
f
17.429 126.576 mo
16.3747 126.576 li
16.03 125.979 li
17.0842 125.979 li
17.429 126.576 li
13.9428 123.261 mo
13.2537 123.261 li
12.7267 122.348 li
13.4157 122.348 li
13.9428 123.261 li
.509804 .509804 .509804 rgb
f
418.631 122.951 mo
413.933 122.951 li
411.584 118.882 li
413.933 114.812 li
418.631 114.812 li
420.981 118.882 li
418.631 122.951 li
414.258 115.374 mo
412.232 118.882 li
414.258 122.39 li
418.308 122.39 li
420.333 118.882 li
418.308 115.374 li
414.258 115.374 li
.431373 .431373 .431373 rgb
f
24.6952 117.897 mo
18.0667 117.897 li
14.7527 112.156 li
18.0667 106.416 li
24.6952 106.416 li
28.0093 112.156 li
24.6952 117.897 li
18.5236 107.208 mo
15.6662 112.156 li
18.5236 117.105 li
24.2384 117.105 li
27.0957 112.156 li
24.2384 107.208 li
18.5236 107.208 li
.419608 .419608 .419608 rgb
f
441.957 111.134 mo
439.255 111.134 li
437.903 108.794 li
439.255 106.453 li
441.957 106.453 li
443.308 108.794 li
441.957 111.134 li
439.441 106.776 mo
438.275 108.794 li
439.441 110.811 li
441.771 110.811 li
442.935 108.794 li
441.771 106.776 li
439.441 106.776 li
.403922 .403922 .403922 rgb
f
425.062 109.059 mo
416.99 109.059 li
413.225 102.538 li
417.379 95.3434 li
418.543 95.3434 li
418.697 95.0772 li
425.062 95.0772 li
429.098 102.068 li
425.062 109.059 li
417.546 96.0409 mo
414.066 102.068 li
417.546 108.096 li
424.506 108.096 li
427.986 102.068 li
424.506 96.0409 li
417.546 96.0409 li
.427451 .427451 .427451 rgb
f
412.95 103.015 mo
404.091 103.015 li
399.662 95.3425 li
403.564 88.5833 li
404.171 88.5833 li
404.698 87.6701 li
407.44 87.6701 li
406.893 88.6165 li
406.957 88.7278 li
404.702 88.7278 li
400.883 95.3425 li
404.702 101.957 li
412.339 101.957 li
416.158 95.3434 li
416.837 95.3434 li
412.954 102.068 li
413.225 102.538 li
412.95 103.015 li
416.845 94.4161 mo
415.624 94.4161 li
412.339 88.7278 li
408.029 88.7278 li
407.964 88.6165 li
408.511 87.6701 li
412.95 87.6701 li
416.845 94.4161 li
.419608 .419608 .419608 rgb
f
413.225 102.538 mo
412.954 102.068 li
416.837 95.3434 li
417.379 95.3434 li
413.225 102.538 li
.486274 .486274 .486274 rgb
f
37.1461 98.5482 mo
29.561 98.5482 li
25.7685 91.9798 li
29.561 85.4102 li
37.1461 85.4102 li
40.9386 91.9798 li
37.1461 98.5482 li
30.0834 86.3159 mo
26.8144 91.9798 li
30.0834 97.6425 li
36.6235 97.6425 li
39.8936 91.9798 li
36.6235 86.3159 li
30.0834 86.3159 li
.403922 .403922 .403922 rgb
f
416.158 95.3434 mo
410.777 95.3434 li
406.957 88.7278 li
408.029 88.7278 li
411.312 94.4161 li
415.624 94.4161 li
416.158 95.3425 li
416.158 95.3434 li
418.697 95.0772 mo
417.226 95.0772 li
416.845 94.4161 li
418.008 94.4161 li
421.356 88.6165 li
418.008 82.8174 li
411.312 82.8174 li
408.511 87.6701 li
407.44 87.6701 li
410.777 81.8901 li
418.543 81.8901 li
422.428 88.6165 li
418.697 95.0772 li
.423529 .423529 .423529 rgb
f
418.543 95.3434 mo
417.379 95.3434 li
417.38 95.3425 li
417.226 95.0772 li
418.697 95.0772 li
418.543 95.3434 li
.490196 .490196 .490196 rgb
f
416.837 95.3434 mo
416.158 95.3434 li
416.158 95.3425 li
415.624 94.4161 li
416.845 94.4161 li
417.226 95.0772 li
416.99 95.0772 li
416.837 95.3434 li
408.029 88.7278 mo
406.957 88.7278 li
406.893 88.6165 li
407.44 87.6701 li
408.511 87.6701 li
407.964 88.6165 li
408.029 88.7278 li
.482353 .482353 .482353 rgb
f
417.379 95.3434 mo
416.837 95.3434 li
416.99 95.0772 li
417.226 95.0772 li
417.38 95.3425 li
417.379 95.3434 li
.537255 .537255 .537255 rgb
f
442.615 87.2775 mo
440.278 87.2775 li
439.109 85.2539 li
440.278 83.2303 li
442.615 83.2303 li
443.783 85.2539 li
442.615 87.2775 li
440.439 83.5095 mo
439.432 85.2539 li
440.439 86.9987 li
442.453 86.9987 li
443.461 85.2539 li
442.453 83.5095 li
440.439 83.5095 li
.411765 .411765 .411765 rgb
f
403.564 88.5833 mo
396.445 88.5833 li
392.581 81.8912 li
396.445 75.1991 li
404.171 75.1991 li
408.035 81.8912 li
404.698 87.6701 li
404.091 87.6701 li
403.564 88.5833 li
396.977 76.1215 mo
393.646 81.8912 li
396.977 87.6603 li
403.639 87.6603 li
406.97 81.8912 li
403.639 76.1215 li
396.977 76.1215 li
.403922 .403922 .403922 rgb
f
404.171 88.5833 mo
403.564 88.5833 li
404.091 87.6701 li
404.698 87.6701 li
404.171 88.5833 li
.462745 .462745 .462745 rgb
f
46.1297 78.5286 mo
42.0213 78.5286 li
39.9665 74.9703 li
42.0213 71.412 li
46.1297 71.412 li
48.184 74.9703 li
46.1297 78.5286 li
42.3044 71.9026 mo
40.5332 74.9703 li
42.3044 78.038 li
45.8468 78.038 li
47.6174 74.9703 li
45.8468 71.9026 li
42.3044 71.9026 li
.415686 .415686 .415686 rgb
f
54.4947 394.195 mo
46.2274 394.195 li
42.0927 387.035 li
46.2274 379.875 li
54.4947 379.875 li
58.6283 387.035 li
54.4947 394.195 li
46.797 380.862 mo
43.2328 387.035 li
46.797 393.207 li
53.9251 393.207 li
57.4883 387.035 li
53.9251 380.862 li
46.797 380.862 li
f
413.995 80.7938 mo
407.497 80.7938 li
404.247 75.1658 li
406.56 71.1608 li
406.56 71.6673 li
407.149 71.6673 li
407.149 70.1403 li
407.497 69.5374 li
409.357 69.5374 li
409.357 70.3126 li
407.945 70.3126 li
405.143 75.1658 li
407.945 80.018 li
413.548 80.018 li
416.35 75.1658 li
415.529 73.745 li
416.425 73.745 li
417.245 75.1658 li
413.995 80.7938 li
414.151 71.3566 mo
413.548 70.3126 li
409.953 70.3126 li
409.953 69.5374 li
413.995 69.5374 li
414.598 70.5817 li
414.151 71.3566 li
.454902 .454902 .454902 rgb
f
407.149 71.6673 mo
406.56 71.6673 li
406.56 71.1608 li
407.149 70.1403 li
407.149 71.6673 li
409.953 70.3126 mo
409.357 70.3126 li
409.357 69.5374 li
409.953 69.5374 li
409.953 70.3126 li
.952941 .952941 .952941 rgb
f
416.27 73.477 mo
415.375 73.477 li
414.305 71.6239 li
414.752 70.8489 li
416.27 73.477 li
.454902 .454902 .454902 rgb
f
417.256 73.745 mo
416.425 73.745 li
416.27 73.477 li
417.102 73.477 li
418.069 71.8026 li
417.102 70.1284 li
415.168 70.1284 li
414.752 70.8489 li
414.598 70.5817 li
415.014 69.8608 li
417.256 69.8608 li
418.378 71.8026 li
417.256 73.745 li
415.529 73.745 mo
415.014 73.745 li
413.893 71.8026 li
414.151 71.3566 li
414.305 71.6239 li
414.202 71.8026 li
415.168 73.477 li
415.375 73.477 li
415.529 73.745 li
.443137 .443137 .443137 rgb
f
416.425 73.745 mo
415.529 73.745 li
415.375 73.477 li
416.27 73.477 li
416.425 73.745 li
414.305 71.6239 mo
414.151 71.3566 li
414.598 70.5817 li
414.752 70.8489 li
414.305 71.6239 li
.529412 .529412 .529412 rgb
f
429.761 72.9339 mo
424.573 72.9339 li
421.978 68.44 li
424.573 63.9461 li
425.915 63.9461 li
425.994 64.1776 426.103 64.3854 426.238 64.5656 cv
424.93 64.5656 li
422.694 68.44 li
424.93 72.3143 li
429.403 72.3143 li
431.64 68.44 li
429.425 64.6028 li
429.569 64.4238 429.688 64.2127 429.775 63.9703 cv
432.356 68.44 li
429.761 72.9339 li
428.687 64.5656 mo
427.032 64.5656 li
426.84 64.4077 426.689 64.1939 426.583 63.9461 cv
429.133 63.9461 li
429.027 64.1962 428.877 64.4089 428.687 64.5656 cv
.396078 .396078 .396078 rgb
f
429.425 64.6028 mo
429.403 64.5656 li
428.687 64.5656 li
428.877 64.4089 429.027 64.1962 429.133 63.9461 cv
429.761 63.9461 li
429.775 63.9703 li
429.688 64.2127 429.569 64.4238 429.425 64.6028 cv
427.032 64.5656 mo
426.238 64.5656 li
426.103 64.3854 425.994 64.1776 425.915 63.9461 cv
426.583 63.9461 li
426.689 64.1939 426.84 64.4077 427.032 64.5656 cv
.980392 .980392 .980392 rgb
f
13.1274 70.6273 mo
6.71974 70.6273 li
3.51533 65.0773 li
6.71974 59.5272 li
13.1274 59.5272 li
16.3327 65.0773 li
13.1274 70.6273 li
7.16078 60.2922 mo
4.39853 65.0773 li
7.16078 69.8629 li
12.6864 69.8629 li
15.4485 65.0773 li
12.6864 60.2922 li
7.16078 60.2922 li
.454902 .454902 .454902 rgb
f
20.3889 60.3011 mo
18.1374 60.3011 li
17.012 58.3519 li
18.1374 56.4022 li
20.3889 56.4022 li
21.5143 58.3519 li
20.3889 60.3011 li
18.2932 56.6713 mo
17.3227 58.3519 li
18.2932 60.0325 li
20.233 60.0325 li
21.2035 58.3519 li
20.233 56.6713 li
18.2932 56.6713 li
.423529 .423529 .423529 rgb
f
414.869 57.3471 mo
412.146 57.3471 li
410.785 54.9888 li
412.146 52.6314 li
414.869 52.6314 li
416.23 54.9888 li
414.869 57.3471 li
412.334 52.9563 mo
411.16 54.9888 li
412.334 57.0217 li
414.681 57.0217 li
415.854 54.9888 li
414.681 52.9563 li
412.334 52.9563 li
.447059 .447059 .447059 rgb
f
44.7604 58.5676 mo
36.746 58.5676 li
32.738 51.626 li
36.746 44.6845 li
44.7604 44.6845 li
48.7686 51.626 li
44.7604 58.5676 li
37.2979 45.6413 mo
33.8436 51.626 li
37.2979 57.6108 li
44.2086 57.6108 li
47.6629 51.626 li
44.2086 45.6413 li
37.2979 45.6413 li
.454902 .454902 .454902 rgb
f
46.27 251.63 mo
38.2555 251.63 li
34.2475 244.689 li
38.2555 237.747 li
46.27 237.747 li
50.2782 244.689 li
46.27 251.63 li
38.8074 238.704 mo
35.3531 244.689 li
38.8074 250.673 li
45.718 250.673 li
49.1724 244.689 li
45.718 238.704 li
38.8074 238.704 li
f
426.781 54.5605 mo
419.51 54.5605 li
418.063 52.0538 li
418.063 50.3167 li
420.012 53.6918 li
426.279 53.6918 li
429.414 48.2634 li
426.279 42.8349 li
424.255 42.8349 li
424.255 42.4863 li
423.659 42.4863 li
423.659 42.8349 li
421.451 42.8349 li
421.451 42.4863 li
420.862 42.4863 li
420.862 42.8349 li
420.012 42.8349 li
419.836 43.1392 li
419.836 42.4863 li
419.281 42.4863 li
419.281 44.1007 li
418.704 45.0999 li
418.644 45.0004 418.581 44.8992 418.516 44.796 cv
418.181 44.2677 li
419.51 41.9664 li
426.781 41.9664 li
430.417 48.2634 li
426.781 54.5605 li
417.387 50.883 mo
415.874 48.2634 li
416.574 47.0508 li
416.964 47.0508 li
416.964 46.3749 li
417.853 44.8351 li
418.375 45.6687 li
416.877 48.2634 li
417.387 49.1461 li
417.387 50.883 li
.47451 .47451 .47451 rgb
f
418.063 52.0538 mo
417.387 50.883 li
417.387 49.1461 li
418.063 50.3167 li
418.063 52.0538 li
.945098 .945098 .945098 rgb
f
416.964 47.0508 mo
416.574 47.0508 li
416.964 46.3749 li
416.964 47.0508 li
418.375 45.6687 mo
417.853 44.8351 li
418.181 44.2677 li
418.516 44.796 li
418.581 44.8992 418.644 45.0004 418.704 45.0999 cv
418.375 45.6687 li
419.281 44.1007 mo
419.281 42.4863 li
419.836 42.4863 li
419.836 43.1392 li
419.281 44.1007 li
f
424.255 42.8349 mo
423.659 42.8349 li
423.659 42.4863 li
424.255 42.4863 li
424.255 42.8349 li
421.451 42.8349 mo
420.862 42.8349 li
420.862 42.4863 li
421.451 42.4863 li
421.451 42.8349 li
f
19.1716 47.7674 mo
11.9786 47.7674 li
8.38114 41.538 li
11.9786 35.3087 li
19.1716 35.3087 li
22.7679 41.538 li
19.1716 47.7674 li
12.4746 36.1673 mo
9.37316 41.538 li
12.4746 46.9082 li
18.6756 46.9082 li
21.776 41.538 li
18.6756 36.1673 li
12.4746 36.1673 li
.45098 .45098 .45098 rgb
f
434.86 37.0922 mo
432.228 37.0922 li
430.912 34.8122 li
432.228 32.5322 li
434.86 32.5322 li
436.178 34.8122 li
434.86 37.0922 li
432.41 32.8463 mo
431.274 34.8122 li
432.41 36.778 li
434.68 36.778 li
435.814 34.8122 li
434.68 32.8463 li
432.41 32.8463 li
.396078 .396078 .396078 rgb
f
406.947 35.6782 mo
402.457 35.6782 li
400.015 31.4495 li
402.457 27.2209 li
406.325 27.2209 li
406.26 27.4012 406.214 27.5961 406.188 27.8039 cv
402.793 27.8039 li
400.688 31.4495 li
402.793 35.095 li
406.947 35.095 li
406.947 35.6782 li
407.623 35.1867 mo
407.623 34.0209 li
408.881 31.8423 li
408.881 33.0084 li
407.623 35.1867 li
409.557 31.8376 mo
409.557 31.6951 li
408.966 31.6951 li
409.108 31.4495 li
408.561 30.5023 li
408.763 30.4721 408.956 30.4147 409.135 30.3308 cv
409.781 31.4495 li
409.557 31.8376 li
408.297 30.0461 mo
407.003 27.8039 li
406.82 27.8039 li
406.848 27.5973 406.898 27.4003 406.971 27.2209 cv
407.339 27.2209 li
408.881 29.8916 li
408.711 29.9847 408.516 30.0392 408.297 30.0461 cv
.407843 .407843 .407843 rgb
f
407.339 35.6782 mo
406.947 35.6782 li
406.947 35.095 li
407.003 35.095 li
407.623 34.0209 li
407.623 35.1867 li
407.339 35.6782 li
408.881 33.0084 mo
408.881 31.8423 li
408.966 31.6951 li
409.557 31.6951 li
409.557 31.8376 li
408.881 33.0084 li
.972549 .972549 .972549 rgb
f
408.561 30.5023 mo
408.297 30.0461 li
408.516 30.0392 408.711 29.9847 408.881 29.8916 cv
409.135 30.3308 li
408.956 30.4147 408.763 30.4721 408.561 30.5023 cv
406.82 27.8039 mo
406.188 27.8039 li
406.214 27.5961 406.26 27.4012 406.325 27.2209 cv
406.971 27.2209 li
406.898 27.4003 406.848 27.5973 406.82 27.8039 cv
f
443.017 26.8302 mo
434.617 26.8302 li
430.417 19.5553 li
434.617 12.2805 li
443.017 12.2805 li
447.218 19.5553 li
443.017 26.8302 li
435.196 13.2833 mo
431.574 19.5553 li
435.196 25.8275 li
442.438 25.8275 li
446.059 19.5553 li
442.438 13.2833 li
435.196 13.2833 li
.47451 .47451 .47451 rgb
f
51.2946 30.1061 mo
45.08 30.1061 li
41.9726 24.7241 li
45.08 19.3417 li
51.2946 19.3417 li
54.4021 24.7241 li
51.2946 30.1061 li
45.5084 20.0836 mo
42.8294 24.7241 li
45.5084 29.3641 li
50.8662 29.3641 li
53.5452 24.7241 li
50.8662 20.0836 li
45.5084 20.0836 li
.439216 .439216 .439216 rgb
f
70.817 23.9253 mo
67.8556 23.9253 li
66.7724 22.0485 li
67.1801 22.0485 li
68.0595 23.5718 li
70.6131 23.5718 li
71.8893 21.361 li
70.7975 19.4697 li
71.0016 19.1162 li
72.2981 21.361 li
70.817 23.9253 li
66.8578 21.4903 mo
66.4502 21.4903 li
66.3756 21.361 li
67.8556 18.7967 li
70.5415 18.7967 li
70.3373 19.1504 li
68.0595 19.1504 li
66.7832 21.361 li
66.8578 21.4903 li
f
69.3083 22.0485 mo
67.1801 22.0485 li
66.8578 21.4903 li
68.9868 21.4903 li
70.3373 19.1504 li
70.6131 19.1504 li
70.7975 19.4697 li
69.3083 22.0485 li
66.7724 22.0485 mo
64.6326 22.0485 li
62.2938 17.9983 li
64.6326 13.9474 li
69.3083 13.9474 li
71.6472 17.9983 li
71.0016 19.1162 li
70.817 18.7967 li
70.5415 18.7967 li
71.0022 17.9983 li
68.9868 14.5062 li
64.9542 14.5062 li
62.9388 17.9983 li
64.9542 21.4903 li
66.4502 21.4903 li
66.7724 22.0485 li
.427451 .427451 .427451 rgb
f
67.1801 22.0485 mo
66.7724 22.0485 li
66.4502 21.4903 li
66.8578 21.4903 li
67.1801 22.0485 li
70.7975 19.4697 mo
70.6131 19.1504 li
70.3373 19.1504 li
70.5415 18.7967 li
70.817 18.7967 li
71.0016 19.1162 li
70.7975 19.4697 li
.501961 .501961 .501961 rgb
f
54.9921 18.7938 mo
50.1909 18.7938 li
47.7895 14.6356 li
50.1909 10.4775 li
54.9921 10.4775 li
57.3927 14.6356 li
54.9921 18.7938 li
50.5213 11.0509 mo
48.452 14.6356 li
50.5213 18.2202 li
54.6608 18.2202 li
56.731 14.6356 li
54.6608 11.0509 li
50.5213 11.0509 li
.431373 .431373 .431373 rgb
f
40.5014 17.0881 mo
33.7868 17.0881 li
30.4285 11.2729 li
33.7868 5.45769 li
40.5014 5.45769 li
43.8587 11.2729 li
40.5014 17.0881 li
34.2494 6.25944 mo
31.3548 11.2729 li
34.2494 16.2863 li
40.0386 16.2863 li
42.9323 11.2729 li
40.0386 6.25944 li
34.2494 6.25944 li
.427451 .427451 .427451 rgb
f
43.7084 278.134 mo
40.2372 278.134 li
38.5012 275.127 li
40.2372 272.121 li
43.7084 272.121 li
45.444 275.127 li
43.7084 278.134 li
40.4765 272.536 mo
38.98 275.127 li
40.4765 277.719 li
43.4692 277.719 li
44.9653 275.127 li
43.4692 272.536 li
40.4765 272.536 li
f
65.3757 6.61193 mo
62.9917 6.61193 li
61.7999 4.547 li
62.9917 2.48264 li
65.3757 2.48264 li
66.5677 4.547 li
65.3757 6.61193 li
63.1564 2.76698 mo
62.1281 4.547 li
63.1564 6.32714 li
65.211 6.32714 li
66.2392 4.547 li
65.211 2.76698 li
63.1564 2.76698 li
.415686 .415686 .415686 rgb
f
424.211 9.98937 mo
419.746 9.98937 li
417.513 6.12223 li
419.746 2.25531 li
424.211 2.25531 li
426.443 6.12223 li
424.211 9.98937 li
420.054 2.78849 mo
418.129 6.12223 li
420.054 9.45596 li
423.903 9.45596 li
425.827 6.12223 li
423.903 2.78849 li
420.054 2.78849 li
.439216 .439216 .439216 rgb
f
1 1 1 rgb
%ADOBeginSubsetFont: OpenSans-Light Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OpenSans-Light def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
def
/FontBBox {-521 -269 1140 1048} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
34 dict dup begin
/.notdef <1C60D8A8C9B7C3C9FC576B1290B2359FA25C1CF1F5B8B26FAFF44E
70D097A769660D> |-
/space <1C60D8A8C9B8666C32> |-
/comma <1C60D8A8C9B8954AC8A785614F4B31C35C963BB899D0C52995237A1D
885C4ED1C2> |-
/hyphen <1C60D8A8C9B8286E84F153CFCCD7027B04F037FA61C8> |-
/period <1C60D8A8C9B87C134A96E5F579E9906C865EC88022C497D49D0468C
FDB5B27406AA4> |-
/I <1C60D8A8C9B86ED9046EFA90B32DCB56A603866EC2> |-
/L <1C60D8A8C9B7BA8F1A98658A857E3351DA58F5828C4B90955BF3> |-
/M <1C60D8A8C9B692AAB3C77082CBD6E03EB716FFF336BBCA25004E23AAC5AC
DF73F0C954504EF98080AF6680B55A82E2976E36EBA20E0D6876A31135E7CD76
197BBE0C6AD082CEC0BE9A> |-
/N <1C60D8A8C9B6042A971FCC4F1F62C42E0A09AFA92C8C6324CAEE271FF79E
9598B1CB66E002FAA1AA6A83E08801EFFB468202963509249FC4475B0E69> |-
/Q <1C60D8A8C9B6F14C34FDCD8AD635422CEA13EE08AFAAD01828769D956748
BE643827AA85D54713947D4731F951D41E1FEDBCCBB3C9E837D73AFABEBF503F
5524867B8A6C28CA989D852B19C4C57E663BA73B14BBF87FD82DF609CA4891A9
8D14B9794368C779FF58389CEC148307BBE1FA2AB4E713E1A4212D5CF6ECBB87
52DCB5946F885EC45DA992E7CD6D1363FB8D958F9CB7CF0570D3> |-
/S <1C60D8A8C9B79AB85D62DFAC1D17C06455F1F14B9982BC05FF2D8B986BEA
B86ED675A6F94568E8B0FE06B1E006E40C7C11C48231ABA1A591B90C8BEFBB92
CD7E3BF1D67C649281D326546E6EF59092FCC23843829E5952B0B7BA066B563C
F8BC9D2FB87FE92C4F829E0240586ADE2E271195CCFA812717E064773997F91C
542D08F699695B241396D122386368591C9EAE9DE8303F9A88F98162BACFF5A9
CC859E502BD7293D176646AEE3FE5247C0FA2BCD5F9674> |-
/T <1C60D8A8C9B78FDBCCA0087DCC4801CED3472B6E8AE5E5A0F9A1403E2DFB
AD38B2> |-
/U <1C60D8A8C9B60287CF31762A613B8193D36179D415E8F5B50C46F2F122F7
19BA2FEB6F3F3C40CF7AA3A784DD0907F76F48FFBD67685D3C0EC8D2D300C202
98561531915C417BC1D5F35E3B61D3E2FDDDD70EBEB088> |-
/a <1C60D8A8C9B7890D792AF190A0C65161B39A4F11B4C914BB8BF4CD02C519
C4CDB5E03304FC8E25FD08F0F5FD1F67253230E59E382CDF1326A3BA7FC41C25
8D76A46B721D945B4BDB7034379D21AA0D5291EB31DC7088A9779BFFD4933637
61533EAEFBE36FE6345B0CAF4F5903843978A45522CC98E02AEAE644DE07A0CF
EFCB3C1E8F4025B758979B66A2AB96EFBA1A7CE1565A53D3248C2CCDAAFDD9E5
5C36E55E644F6B> |-
/b <1C60D8A8C9B7C8C152EFD73958712E4B223297951545F2F57818040B12F1
C44E610C1D35685C2A33456FC8EAD57698385CC1574E4E630F1C5A26920BE8CE
BF8B9F27BDFE668614ADFDFC1EC6A9D2A7A6A23CCECE38C48F25980F210FCC07
9BBB52F8B31D27F86E193E70374DF5C0668F9CDD773FDDBB699DE94A3BEFCCB4
C05F9A258B715EE0F313BF404942F94D2CB484F1CD41FA14CBFC4AE0E8> |-
/c <1C60D8A8C9B7402F1BA69C3100D70E32B4D9F19ABA1975740CF2501D4D6E
69E42BBDE61FABB17D4E2101E8E5404FE041DF0F7137F9698108F186ECBE958F
B315FB1903D328D819B89A3B37A388A9E0B9401EFE26BA1ABE969D107B14A8FD
B2306789AC65F245FA> |-
/d <1C60D8A8C9B7C8C152818542162C1F1A96F84FB22484E6BBA74A60FF08B6
9349C06BC85B848F6838A56DEF152045D9E7C692435C42D49D3E7513691569E8
9B8307E46564581EF9158F1C2E8C0D8578BD00D53955F5B0361D2DDA0AA2A91D
3E460AAFC20A1BFE3C5457F100B6817D1A79566ACD9ED1872784689BABF32245
E090931B2C6B26D5F02E8F0A80F1F5497855> |-
/e <1C60D8A8C9B79676FBA05935C4764471CF4F6D6C4D7E65142560F44D5D3B
93605F0F4C25455911D60290C56658BC10D5381E9DE1385F7873AE7FDC2B16DE
0884EFA64B983D1E9EABF8D03F7742AA8C024C45E385D544A1B9461711187BA9
58D8EB0B429CFE08480CB222C2F4C9C91210E6A101F34A1108E8B35ADA0997CA
E4D5623F3E51E20F1AB095316D095B> |-
/f <1C60D8A8C9B83E2DB9AA257D3E73AA3F7C2E3919B530B21AA307ABA26E2C
C9A9FEECA599DE0661A0488BBCBFB2421BEEB51E4E5EC53D90AD8F201527D154
44B83AD94589678D7654A8F2F722B3425E9B7CBED4E4C4> |-
/g <1C60D8A8C9B7B07F04C54D5896BC830B8A8E40E5CF8DB32DB20B0B4057B4
0FC7C61C1855DBE4DCC34CE67EAE073EDE247EC25166318C26493EB6372B343D
B04CCD7E54635541E01A19B33C2D90F0CF9AC0422BC0645617ED494F11B993DE
0ECC4B4F4A56B6945FBEE0F0B9603F9135E9B76E5FABFF8A80B02A0E3A3CF796
5B856EDCD5C9302460A72518B4482EAF9D67C4DB68D6E85A8A10D8706305F077
035CD7BC61C7E95374EF9431971DB05F4A0D6A108BF0BB9BDF33AEE7E5FF99E1
C880F840CC0AE622A27B0DA4A9E5E863C0B6CBD7BE7E8B3217DD2F78A25FA81A
2C86B0671141A1E33973F58E02056ECE60F491D088704D79F78C22FF9BD95540
9FAFC9EF7CBFB56DE2DAC69D3782C3834236E841B8CC9F2357D2CC82B3288719
1BB3A94EFC> |-
/h <1C60D8A8C9B7CDD8CD49638015380583F835D666080474C2CAC890A6215E
F004D43BE770E2CC15240308D6D36415C9A655B18C2D90D070CFA98A97B4D6D9
F714F4E4834944FDD8A73759E8FE9F9B890116648667BD7F> |-
/i <1C60D8A8C9B888C1BFA22389FC4EA02A09ADB94597D153CF03528A5ADE81
F62066D5790A002B7684DC7AD900EC67FFDDC55C74BB2268DAF36F2FCF1B754F
E25A97> |-
/l <1C60D8A8C9B888C1BFA222D3EE6AD38725FBDB76212C> |-
/m <1C60D8A8C9B59575D81DD03A15B08086ADB3CA1D020C61EDC079868D1E16
355B90698753787E2BE9B192CE7CE6D8A52CE3002CEC3C6857439BAEB0EA392C
82D13B9E89566E5697F0CC793EE21DFCDEA62F8674071240E49DAFB798755CFD
7BFDFBCA42D67477B0E59C4C6F6FCF3F2B7F1921790D136E6D96F6DB1B4D4CAB
4096E64CA3321C34D526C8A64DE1> |-
/n <1C60D8A8C9B7CDD8CD49638015380583F835D6660869FB2579AEB6C6F71C
D7D74F740EB799514CA86209DFBD0EC9DC42835BD24CB5FE1F429EA366E53123
F717BBBFDA637025B029E9969AE5> |-
/o <1C60D8A8C9B7F1D1BFABC6A25E6F4793E38C07BD5D174FC33B6350751084
14476E1A8A7B0A68FC7B30E03F4264E44049AEDAF3DB00FC1CEB3DA81FDEE07E
0EA9555217A446494E832D61E6EAE7250DDBBF4F8EB3A01A980682F2C8388BFA
A9B409F50784A19B46A7E27B0FB7A068ED7F9936AEFB68CA5CE9E568050310EC
226C22BFF8736614AA8B863C7D> |-
/p <1C60D8A8C9B7C8C15D1AD88643042E919807F624C56E01005E59BF65F573
FBAD3B023754A97C77C73FDE97FE35BC467E42536784066B7D81A80EA9424ED3
A605191BF676EC408C37F9E21A6F13FF2707CB9222AE900B64288C370F546EB1
CFFBE07A8C0728EB122CFF690444A9174F3927A78899700B3B78A0C407B32A92
3595754CDE22C73AD5FE3EE7AD> |-
/q <1C60D8A8C9B7C8C15D367B6C0853EB05E1616A964DFA1F1585C31ECC3635
55860839DD8921A34B95EC312D42A7B168D9B721FCAA577BAB676A2472A73B79
3B1B760A4B02CF0AA74660746175E92F000C3999B3A7F12608CB60ACFCD0ED04
A1EF65E97702FC1E932B2505DED75E9CD09DF51054D95BF65F126169EDAE3D74
8C634D1559A99FF33A34EF981F3C45C819> |-
/r <1C60D8A8C9B7361F02D5ED845C3FFC91ABB9724BF7E56016C7E3312D6BDB
8CA35EBE1B7E6D00C2F812D530EB31419E593123199DCE18FF6F79DEEFD48409
468362D3140EB03EF0E6CBED1F> |-
/s <1C60D8A8C9B74969EE041533B8DB118699A1363779E1C721832FC7690E92
0E47A0BE047CE19DC6593C284680AE140CAC6473B1A337D935AD8C230E586592
9A0EAA9D61601FA80306F0883B48CD98DC6E60EC08242330BA61E9A6EDAD5B96
98C539B998901CD0A9B6B0163BE98CCDD75DD130A159EC408D6F911CEFAE3BD9
EBA90014F5980CE49AB9693ECFA7033497988156900805379C4821D123F933E7
BD4A3E999EFB3E1851D0D71FB4506230> |-
/t <1C60D8A8C9B81D8961FB4150906FE5D8A69BC6BF5B065B740BA562FCCD01
8DCAA5EE55534C175C6B80B01BC6053619EEF251ECC74FCBFA0B79D6169761C9
0715957016ECF1D470A4163AA39D3DDC6E707AEB7050CC414140> |-
/u <1C60D8A8C9B7CDD8EB0F6F53EA8EF839EA5CF4D131338518CA9A10191701
DD5F02A66D3F802C7DDADD95D31EC60841432E5C1912B5380416D85FC5CF7C73
B37992E27F7A3620FB90C4C2A56A1D> |-
/v <1C60D8A8C9B770DA4D259FFF7D02DDB35B253B7582286697D49521F198E2
C4488F8191026A28344F4AEE04CE9E367C830DED2132A1> |-
/x <1C60D8A8C9B7A9C0825FA6EE07BB37CF602F097F15EF7AB91E9386D80A6D
CB3173F8A9E89F04133C21C75D08ECF1A27DCD6CDF9A5FBB84> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WRBIPH+OpenSans-Light /OpenSans-Light findfont ct_VMDictPut
/WRBIPH+OpenSans-Light*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 26{/.notdef}rp /I 
2{/.notdef}rp /L /M /N 2{/.notdef}rp /Q /.notdef /S 
/T /U 11{/.notdef}rp /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /q /r /s /t /u /v 
/.notdef /x 135{/.notdef}rp]
WRBIPH+OpenSans-Light nf
WRBIPH+OpenSans-Light*1 [9.66908 0 0 -9.66908 0 0 ]msf
30.7036 85.3564 mo
(Sed ut perspiciatis, unde )sh
28.8198 96.959 mo
(omnis iste natus error sit )sh
30.4487 108.562 mo
(voluptatem accusantium )sh
29.4478 120.165 mo
(doloremque laudantium. )sh
21.4028 201.385 mo
(Totam rem aperiam eaque )sh
21.1665 212.988 mo
(ipsa, quae ab illo inventore )sh
20.4111 224.591 mo
(veritatis et quasi architecto )sh
37.356 236.194 mo
(beatae vitae dicta sunt, )sh
93.4722 247.797 mo
(explicabo. )
[5.30664 4.81543 5.75537 2.18604 2.18604 4.59375 5.12256 5.75537 5.66553 2.29932 0 ]xsh
28.4468 329.018 mo
(Nemo enim ipsam volup)sh
134.047 329.018 mo
(-)sh
34.7168 340.62 mo
(tatem, quia voluptas sit, )sh
12.9941 352.223 mo
(aspernatur aut odit aut fug)sh
129.656 352.223 mo
(it, )sh
34.1597 363.826 mo
(sed quia consequuntur.)sh
312.274 85.3564 mo
(Magni dolores eos, qui )
[8.34277 5.12207 5.05664 5.70313 2.18555 2.51172 5.75488 5.66504 2.18555 5.66504 3.7627 5.30664 
4.50391 2.51172 5.30664 5.66504 4.50391 2.07715 2.51172 5.75488 5.70313 2.18555 0 ]xsh
312.274 96.959 mo
(ratione voluptatem sequi )
[3.7627 5.12207 3.23828 2.18555 5.66504 5.70313 5.30664 2.51172 4.4375 5.66504 2.18555 5.70313 
5.75488 3.23828 5.12207 3.23828 5.30664 8.53613 2.51172 4.50391 5.30664 5.75488 5.70313 2.18555 
0 ]xsh
312.274 108.562 mo
(nesci)sh
334.567 108.562 mo
(unt)sh
349.212 108.562 mo
(, neq)sh
370.565 108.562 mo
(ue p)sh
389.842 108.562 mo
(orro )
[5.66504 3.7627 3.7627 5.66504 0 ]xsh
312.274 120.165 mo
(quisquam est, qui dolorem.)
[5.75488 5.70313 2.18555 4.50391 5.75488 5.70313 5.12207 8.53613 2.51172 5.30664 4.50391 3.23828 
2.07715 2.51172 5.75488 5.70313 2.18555 2.51172 5.75488 5.66504 2.18555 5.66504 3.7627 5.30664 
8.53613 0 ]xsh
312.274 212.988 mo
(Ipsum, quia dolor sit, amet, )
[2.43652 5.75488 4.50391 5.70313 8.53613 2.07715 2.51172 5.75488 5.70313 2.18555 5.12207 2.51172 
5.75488 5.66504 2.18555 5.66504 3.7627 2.51172 4.50391 2.18555 3.23828 2.07715 2.51172 5.12207 
8.53613 5.30664 3.23828 2.07715 0 ]xsh
312.274 224.591 mo
(consectetur, adipisci velit, )
[4.59375 5.66504 5.70313 4.50391 5.30664 4.59375 3.23828 5.30664 3.23828 5.70313 3.7627 2.07715 
2.51172 5.12207 5.75488 2.18555 5.75488 2.18555 4.50391 4.59375 2.18555 2.51172 4.4375 5.30664 
2.18555 2.18555 3.23828 2.07715 0 ]xsh
312.274 236.194 mo
(sed)sh
327.84 236.194 mo
( quia non numquam eius )
[2.51172 5.75488 5.70313 2.18555 5.12207 2.51172 5.70313 5.66504 5.70313 2.51172 5.70313 5.70313 
8.53613 5.75488 5.70313 5.12207 8.53613 2.51172 5.30664 2.18555 5.70313 4.50391 0 ]xsh
312.274 247.797 mo
(modi tempora incidunt)
[8.53613 5.66504 5.75488 2.18555 2.51172 3.23828 5.30664 8.53613 5.75488 5.66504 3.7627 5.12207 
2.51172 2.18555 5.70313 4.59375 2.18555 5.75488 5.70313 5.70313 0 ]xsh
312.274 329.018 mo
(Labore et dolore magnam )
[4.96191 5.12207 5.75488 5.66504 3.7627 5.30664 2.51172 5.30664 3.23828 2.51172 5.75488 5.66504 
2.18555 5.66504 3.7627 5.30664 2.51172 8.53613 5.12207 5.05664 5.70313 5.12207 8.53613 0 
]xsh
312.274 340.62 mo
(aliquam quaerat volup)
[5.12207 2.18555 2.18555 5.75488 5.70313 5.12207 8.53613 2.51172 5.75488 5.70313 5.12207 5.30664 
3.7627 5.12207 3.23828 2.51172 4.4375 5.66504 2.18555 5.70313 0 ]xsh
409.663 340.62 mo
(-)sh
312.274 352.223 mo
(tatem. Ut enim ad minima )
[3.23828 5.12207 3.23828 5.30664 8.53613 2.29883 2.51172 6.9541 3.23828 2.51172 5.30664 5.70313 
2.18555 8.53613 2.51172 5.12207 5.75488 2.51172 8.53613 2.18555 5.70313 2.18555 8.53613 5.12207 
0 ]xsh
312.274 363.826 mo
(veniam quis nostrum)
[4.4375 5.30664 5.70313 2.18555 5.12207 8.53613 2.51172 5.75488 5.70313 2.18555 4.50391 2.51172 
5.70313 5.66504 4.50391 3.23828 3.7627 5.70313 0 ]xsh
WRBIPH+OpenSans-Light*1 [6 0 0 -6 0 0 ]msf
13.2939 391.097 mo
(Quia dolor sit, amet, )sh
13.2939 398.297 mo
(consectetur, adipisci velit, )sh
13.2939 405.497 mo
(sed quia non numquam eius )sh
13.2939 412.697 mo
(modi tempora incidunt)sh
401.876 396.687 mo
382.718 396.687 li
383.42 396.687 383.988 397.586 383.988 398.692 cv
383.988 399.8 383.42 400.696 382.718 400.696 cv
401.876 400.696 li
402.576 400.696 403.146 399.8 403.146 398.692 cv
403.146 397.586 402.576 396.687 401.876 396.687 cv
cp
.2 .831373 1 rgb
f
401.876 400.117 mo
383.611 400.117 li
383.381 400.475 383.066 400.696 382.718 400.696 cv
401.876 400.696 li
402.576 400.696 403.146 399.8 403.146 398.692 cv
403.146 398.592 403.137 398.497 403.127 398.403 cv
403.038 399.371 402.514 400.117 401.876 400.117 cv
cp
.14902 .623529 .74902 rgb
f
401.52 397.23 mo
383.582 397.23 li
383.796 397.545 383.938 397.976 383.974 398.46 cv
401.52 398.46 li
401.735 398.46 401.91 398.184 401.91 397.845 cv
401.91 397.504 401.735 397.23 401.52 397.23 cv
cp
.521569 .898039 1 rgb
f
383.988 398.692 mo
383.988 397.586 383.42 396.687 382.718 396.687 cv
364.831 396.687 li
364.129 396.687 363.56 397.586 363.56 398.692 cv
363.56 399.8 364.129 400.696 364.831 400.696 cv
382.718 400.696 li
383.42 400.696 383.988 399.8 383.988 398.692 cv
cp
.815686 .580392 .784314 rgb
f
364.831 400.117 mo
364.192 400.117 363.668 399.371 363.579 398.403 cv
363.57 398.497 363.56 398.592 363.56 398.692 cv
363.56 399.8 364.129 400.696 364.831 400.696 cv
382.718 400.696 li
383.066 400.696 383.381 400.475 383.611 400.117 cv
364.831 400.117 li
cp
.611765 .435294 .588235 rgb
f
364.797 397.845 mo
364.797 398.184 364.971 398.46 365.187 398.46 cv
383.974 398.46 li
383.938 397.976 383.796 397.545 383.582 397.23 cv
365.187 397.23 li
364.971 397.23 364.797 397.504 364.797 397.845 cv
cp
.890196 .74902 .870588 rgb
f
390.242 384.39 mo
376.982 384.39 li
375.711 386.395 li
376.982 388.399 li
390.242 388.399 li
390.944 388.399 391.513 387.503 391.513 386.395 cv
391.513 385.287 390.944 384.39 390.242 384.39 cv
cp
.368627 .733333 .0823529 rgb
f
390.242 387.82 mo
376.615 387.82 li
376.982 388.399 li
390.242 388.399 li
390.944 388.399 391.513 387.503 391.513 386.395 cv
391.513 386.296 391.503 386.201 391.494 386.106 cv
391.405 387.075 390.881 387.82 390.242 387.82 cv
cp
.278431 .54902 .0627451 rgb
f
389.648 384.781 mo
376.735 384.781 li
375.955 386.011 li
389.648 386.011 li
389.863 386.011 390.038 385.736 390.038 385.396 cv
390.038 385.057 389.863 384.781 389.648 384.781 cv
cp
.619608 .839216 .45098 rgb
f
376.982 384.39 mo
364.831 384.39 li
364.129 384.39 363.56 385.287 363.56 386.395 cv
363.56 387.503 364.129 388.399 364.831 388.399 cv
376.982 388.399 li
375.711 386.395 li
376.982 384.39 li
cp
1 .85098 .309804 rgb
f
364.831 387.82 mo
364.192 387.82 363.668 387.075 363.579 386.106 cv
363.57 386.201 363.56 386.296 363.56 386.395 cv
363.56 387.503 364.129 388.399 364.831 388.399 cv
376.982 388.399 li
376.615 387.82 li
364.831 387.82 li
cp
.74902 .639216 .231373 rgb
f
365.425 384.781 mo
365.21 384.781 365.036 385.057 365.036 385.396 cv
365.036 385.736 365.21 386.011 365.425 386.011 cv
375.955 386.011 li
376.735 384.781 li
365.425 384.781 li
cp
1 .909804 .584314 rgb
f
401.879 408.984 mo
382.8 408.984 li
381.533 410.989 li
382.8 412.992 li
401.879 412.992 li
402.578 412.992 403.146 412.097 403.146 410.989 cv
403.146 409.881 402.578 408.984 401.879 408.984 cv
cp
.368627 .733333 .0823529 rgb
f
401.879 412.414 mo
382.434 412.414 li
382.8 412.992 li
401.879 412.992 li
402.578 412.992 403.146 412.097 403.146 410.989 cv
403.146 410.889 403.137 410.794 403.127 410.699 cv
403.038 411.668 402.516 412.414 401.879 412.414 cv
cp
.278431 .54902 .0627451 rgb
f
401.286 409.374 mo
382.553 409.374 li
381.776 410.604 li
401.286 410.604 li
401.501 410.604 401.675 410.329 401.675 409.989 cv
401.675 409.65 401.501 409.374 401.286 409.374 cv
cp
.619608 .839216 .45098 rgb
f
382.8 408.984 mo
364.828 408.984 li
364.127 408.984 363.56 409.881 363.56 410.989 cv
363.56 412.097 364.127 412.992 364.828 412.992 cv
382.8 412.992 li
381.533 410.989 li
382.8 408.984 li
cp
1 .85098 .309804 rgb
f
364.828 412.414 mo
364.19 412.414 363.668 411.668 363.579 410.699 cv
363.57 410.794 363.56 410.889 363.56 410.989 cv
363.56 412.097 364.127 412.992 364.828 412.992 cv
382.8 412.992 li
382.434 412.414 li
364.828 412.414 li
cp
.74902 .639216 .231373 rgb
f
365.421 409.374 mo
365.206 409.374 365.032 409.65 365.032 409.989 cv
365.032 410.329 365.206 410.604 365.421 410.604 cv
381.776 410.604 li
382.553 409.374 li
365.421 409.374 li
cp
1 .909804 .584314 rgb
f
412.664 408.421 mo
410.843 413.667 li
410.122 413.667 li
411.803 408.891 li
409.751 408.891 li
409.751 408.26 li
412.664 408.26 li
412.664 408.421 li
cp
1 1 1 rgb
f
413.751 412.07 mo
413.751 412.777 414.052 413.072 414.598 413.072 cv
415.103 413.072 415.503 412.827 415.503 411.986 cv
415.503 411.797 li
415.503 410.998 415.32 410.802 414.648 410.802 cv
413.184 410.802 li
413.184 408.268 li
415.992 408.268 li
415.992 408.891 li
413.834 408.891 li
413.834 410.172 li
414.661 410.172 li
415.788 410.172 416.167 410.627 416.167 411.783 cv
416.167 411.993 li
416.167 413.198 415.516 413.716 414.598 413.716 cv
413.695 413.716 413.092 413.302 413.092 412.07 cv
413.751 412.07 li
cp
f
421.114 412.603 mo
421.114 412.042 li
421.114 411.692 421.022 411.503 420.644 411.503 cv
420.287 411.503 420.182 411.692 420.182 412.042 cv
420.182 412.603 li
420.182 412.952 420.287 413.156 420.644 413.156 cv
421.022 413.156 421.114 412.952 421.114 412.603 cv
cp
419.621 412.63 mo
419.621 412.028 li
419.621 411.328 419.95 410.992 420.644 410.992 cv
421.351 410.992 421.68 411.314 421.68 412.028 cv
421.68 412.63 li
421.68 413.345 421.351 413.667 420.644 413.667 cv
419.95 413.667 419.621 413.345 419.621 412.63 cv
cp
420.161 408.211 mo
418.585 413.765 li
418.067 413.765 li
419.656 408.211 li
420.161 408.211 li
cp
418.151 409.836 mo
418.151 409.276 li
418.151 408.926 418.059 408.737 417.681 408.737 cv
417.324 408.737 417.219 408.926 417.219 409.276 cv
417.219 409.836 li
417.219 410.187 417.324 410.389 417.681 410.389 cv
418.059 410.389 418.151 410.187 418.151 409.836 cv
cp
416.66 409.864 mo
416.66 409.262 li
416.66 408.561 416.989 408.225 417.681 408.225 cv
418.39 408.225 418.718 408.547 418.718 409.262 cv
418.718 409.864 li
418.718 410.578 418.39 410.9 417.681 410.9 cv
416.989 410.9 416.66 410.578 416.66 409.864 cv
cp
f
412.664 396.124 mo
410.843 401.37 li
410.122 401.37 li
411.803 396.594 li
409.751 396.594 li
409.751 395.963 li
412.664 395.963 li
412.664 396.124 li
cp
f
413.751 399.773 mo
413.751 400.48 414.052 400.775 414.598 400.775 cv
415.103 400.775 415.503 400.53 415.503 399.689 cv
415.503 399.5 li
415.503 398.702 415.32 398.506 414.648 398.506 cv
413.184 398.506 li
413.184 395.971 li
415.992 395.971 li
415.992 396.594 li
413.834 396.594 li
413.834 397.876 li
414.661 397.876 li
415.788 397.876 416.167 398.331 416.167 399.486 cv
416.167 399.696 li
416.167 400.901 415.516 401.419 414.598 401.419 cv
413.695 401.419 413.092 401.006 413.092 399.773 cv
413.751 399.773 li
cp
f
421.114 400.306 mo
421.114 399.745 li
421.114 399.396 421.022 399.206 420.644 399.206 cv
420.287 399.206 420.182 399.396 420.182 399.745 cv
420.182 400.306 li
420.182 400.656 420.287 400.859 420.644 400.859 cv
421.022 400.859 421.114 400.656 421.114 400.306 cv
cp
419.621 400.333 mo
419.621 399.732 li
419.621 399.031 419.95 398.695 420.644 398.695 cv
421.351 398.695 421.68 399.017 421.68 399.732 cv
421.68 400.333 li
421.68 401.048 421.351 401.37 420.644 401.37 cv
419.95 401.37 419.621 401.048 419.621 400.333 cv
cp
420.161 395.914 mo
418.585 401.468 li
418.067 401.468 li
419.656 395.914 li
420.161 395.914 li
cp
418.151 397.54 mo
418.151 396.979 li
418.151 396.629 418.059 396.44 417.681 396.44 cv
417.324 396.44 417.219 396.629 417.219 396.979 cv
417.219 397.54 li
417.219 397.89 417.324 398.092 417.681 398.092 cv
418.059 398.092 418.151 397.89 418.151 397.54 cv
cp
416.66 397.567 mo
416.66 396.965 li
416.66 396.265 416.989 395.929 417.681 395.929 cv
418.39 395.929 418.718 396.251 418.718 396.965 cv
418.718 397.567 li
418.718 398.282 418.39 398.604 417.681 398.604 cv
416.989 398.604 416.66 398.282 416.66 397.567 cv
cp
f
410.136 387.477 mo
410.136 388.184 410.436 388.478 410.983 388.478 cv
411.487 388.478 411.886 388.234 411.886 387.393 cv
411.886 387.203 li
411.886 386.405 411.704 386.209 411.032 386.209 cv
409.568 386.209 li
409.568 383.674 li
412.377 383.674 li
412.377 384.298 li
410.22 384.298 li
410.22 385.579 li
411.045 385.579 li
412.173 385.579 412.552 386.034 412.552 387.189 cv
412.552 387.399 li
412.552 388.605 411.9 389.122 410.983 389.122 cv
410.079 389.122 409.477 388.709 409.477 387.477 cv
410.136 387.477 li
cp
f
415.446 387.582 mo
415.446 385.138 li
415.446 384.396 415.172 384.255 414.683 384.255 cv
414.178 384.255 413.862 384.396 413.862 385.138 cv
413.862 387.582 li
413.862 388.324 414.087 388.534 414.683 388.534 cv
415.172 388.534 415.446 388.324 415.446 387.582 cv
cp
413.197 387.582 mo
413.197 385.138 li
413.197 384.052 413.799 383.667 414.683 383.667 cv
415.523 383.667 416.11 384.052 416.11 385.138 cv
416.11 387.582 li
416.11 388.695 415.684 389.143 414.683 389.143 cv
413.632 389.143 413.197 388.695 413.197 387.582 cv
cp
f
421.114 388.01 mo
421.114 387.448 li
421.114 387.099 421.022 386.91 420.644 386.91 cv
420.287 386.91 420.182 387.099 420.182 387.448 cv
420.182 388.01 li
420.182 388.359 420.287 388.562 420.644 388.562 cv
421.022 388.562 421.114 388.359 421.114 388.01 cv
cp
419.621 388.037 mo
419.621 387.435 li
419.621 386.735 419.95 386.398 420.644 386.398 cv
421.351 386.398 421.68 386.721 421.68 387.435 cv
421.68 388.037 li
421.68 388.752 421.351 389.074 420.644 389.074 cv
419.95 389.074 419.621 388.752 419.621 388.037 cv
cp
420.161 383.618 mo
418.585 389.171 li
418.067 389.171 li
419.656 383.618 li
420.161 383.618 li
cp
418.15 385.243 mo
418.15 384.683 li
418.15 384.333 418.059 384.143 417.682 384.143 cv
417.324 384.143 417.219 384.333 417.219 384.683 cv
417.219 385.243 li
417.219 385.593 417.324 385.796 417.682 385.796 cv
418.059 385.796 418.15 385.593 418.15 385.243 cv
cp
416.66 385.27 mo
416.66 384.669 li
416.66 383.968 416.988 383.632 417.682 383.632 cv
418.389 383.632 418.718 383.954 418.718 384.669 cv
418.718 385.27 li
418.718 385.985 418.389 386.307 417.682 386.307 cv
416.988 386.307 416.66 385.985 416.66 385.27 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 ]]
] del_res
/WRBIPH+OpenSans-Light*1 uf
/WRBIPH+OpenSans-Light uf
/OpenSans-Light uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 11.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (150323_ 227627815 Infographic template with DNA structure for medical and biological research_f.eps)
%%CreationDate: 3/23/2015 10:13 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBm6;ooC2AJSho9?9_MIO5ts++:a#Y8fd@.W/r>HOS9sGnir@](l>Cc2E@,a40&_bQ8CLjE?$fX3oCH+mgFCfZeZAVnArMVL
%-WqpRr_[&%R\)gC?R_P[/HiK2D(7.96;pNLVit$uWn,j^jaP@SfVr,04*'[oBf+>SA(cTAH?VOtW@].ET!stc?>ao::[6K!mVJ!R
%[bHeQ;@[H_+0mOt]qIuses,i0C4jB1-=/ACf,Y\M5XE0Fmo(lp:&$3AkW5@=*F]G[p9RNP&W5dUHG!.Uoo?2sH<kAN/K6hhP\.NN
%lO"sC_lt(rCn:Ler53=ZYi1?&.;"3jX`I'W,Fs^s%'u(,@W[@\aCL7,2BA&)Fli):fRY65(!T",fCXIhIt3JDHfOFmDF;gS>BN=R
%%Y'fgW1U)$V6Lo5mDl&XN%r<gD1<HU$F3]4FI6mPd7*hJ`mU)sn#Y8+Oaeio>%qIX1_U&c"p;H.9E=Vi^aDT!P0$g\An,p$pWdfY
%(eo(kBZ?u?YG_iYJ_>/Qc,Bi[cad)[em"X0Bc78sd)O;sC\=trE@E6#-6KbHNO7_Q`r'Jb$CL.jdP?BOR?u^.K*A35dl\OPCmB'V
%'2:atrL&A]DZO3%e>dN?rWD&10"UF'Im&8V/!5[<FB)W25`Z@#QJph':&^j)BI4`9]:'(;Tc>YAE^tsf@$9e,nnkp.^&og`[l\^L
%5$jPU<CJ_CKDY1:>m())1mELLD+2ohC:>Fsb40jNf$ma5g9!;Qh[QEVa3V^ASRb=LkR6Sbs/mNEZ%g1kbs0:O@Mcc/j%?@'GA;,o
%M>u&jNNs0%0dnPH=TeJZG<CM@LK,X,<qQZQ;*@CTRJ;3@Y%W?*-Pl0XjV!Z-9?'V19iG5lTC<(%05BdadONDTj><3`S*f5^[JeS<
%;_(q6B"_2__;csk%eQrkj@2emj0bNHRaR(/=@V8cEkEif&6M1uR&"u=dI"`5h+h5T>O?N`BQ[=5lSVC6XM<go='+D+0!K+8Nk[*2
%@/b.a-)Fjb1h>fAD:q\b5Y\dfl8C=akqp!Id?QS6#5q_h)\k,_nRVrYS;Hj)+.t-UN6"(mP:-"a/aRb95b&YN3<OrEL`_\9pgNAT
%F?D0ZcQ/0LLLc3.8"2lHNMtIgB6Z]*k+"PQ:*)B=4E+&'3k(\rFrPb@h=qjPmkbSO>al")PD?=^%prO:h34=^R]6Ct.%m;=^hTFM
%9EpeWHt::H1)X9(3fu-WA0kP;ae=g:("0^'57CgHeoPu^W_QaJ*CJ>Y2@>P@70Z^_F4Gq8FZc<89s!O#ocJ>K"X-@%4PD)+F^=KY
%X_3*GgH$\$:\3m*IhbAG&)!_E63f'WB']pCaY4'(d>4ofMTkO$m)<fAHgK^$gs[J8H%9T._S[2F46SN-moVmA.YXL3`DFj)i"pq)
%!m%QTM)oG4Hg-lT7Mft1CML>,fW(lWr`\=)C/KiD-m]mugAdCXm(E)tIk8X+Ye>b9@>\8hptKPi+kPJl"$-S(XXPuF(S8TqRfA.g
%?;N-0(YBaiDoL9<V4k=<*KtYTHG!q4/Qn"j)ch_AFjTdt1=4/2&iEY\]23p-Q=pA'E%e_\VuJpi*4NcnFb6udV[NDCkc2Btm2\o'
%=cmQ^.SQc9G==18]\OL`r_CKMZ<dX*&ZejMU':AAVDFr0q(>@%3>jA!88Gh<0?(5#[o82"<4-0-mW78(aa"ES6;N>(!t7K]]LD>S
%*S"i]*>!TVo#qr3Aj,67'&9"Q;,"iW70OD@+GtU%jStNsk>1B^:s>=,fds._HDbKMmel2K,c=s`./BLnh1X3Ni!L[dr+P0*A^SWp
%H719Aku#g7<U)/lHt)nh>utjq<1@_=LW8mB\ZK6HR4\#RQRjn,::mpJ%aH@8bI3pqD-o[078)Ns/R>hhEYC!)ebBIT1=2<dpL$&r
%Z"t:>rS(]YP/@0RE!]E;b/2+j)(@/6i8Q"_8kKE"(l=P,eEG(_U*p@X%^)nSM]"5Y=%_OA(9XI#&/hukOV4<K5njGF#?OsaKa_4#
%+U&Ye(CO:WY(Vo3ns@/-715>FjT#GI)Eib&Z8iu/$s[MV;Y]80@c9qrQ%4dDMoHP:^l)>4m)ra=GVk>-GdoO(9#Hq:EcA:&-1R8A
%12tWDM?fr&OU!SfJFF-Hama#S;EVueW6DSqP#(QU%ftAoVC]^i@=_hl\-2tD"=]6P6P'P("WAD@S%rNjG_?Ln)>-R6Ul:\_IJF8d
%b[f->0#M96)(%_I,p7(8JB4NbBeGrM1MIc)77^ugHn(=PV79J[Pt9:OMN`Rh3KE8X>`.RO,a[G&%ROZm'EO$/ZY;>:Z>>[uYV]!!
%73I":aX>QZ<0Bm$PDLQUU_4kF7P;M)dYUqT9-b1-"I#Jq#pq%Cn4];0R,jUK(l"_tM&,;+c-pBqUKKWDdkjLM'VJ*1W"]C;:^e*0
%kK@5Xh[*j+ln#@^L-5dj`NpGtJ--cNQ8S/&YRJN?!c/E3!b)EtXaDl+(W%b`59X\F/@d#gQ:tb('1iB\)IX)"97T%>>qeGS>JX8>
%-29k4W.F/`.)MZDdDH:K=eH4fTT)a'SM?rd#.$O'B>g*l\U\]_"-X&`93_FoJ<h/W#QP^?$O1/R(n.-PD'^)'#Ul3!5'&u)6u?<G
%\C,?4PQU"Zm9,)FNBs3Ta)>pJ:-h)Yb`-.2(9!G5PXo3[&aj2TafMhgXOA""!FroTQr=jY,_d,.`W#p=(dl/:$5SjaN&H=q$VCPi
%!>U1o?R!2eI";t3+!FB'T-,c]b.s9s.toY%\6.c`)HXec(jqH3BIAR`cAs'n@T]r@h"E&(0%"f5mYds4QSEj\&*(56Xt/bJ=P(N[
%(J8)n/*4@jXt/PDGh84'?,2fRA'VXgf-P_qaa#V*lZ/YPV82j\.1;Xo_5&8X9)sII+GVE(edV%a(3gWeXTXh`"*5eS\lms0,l&>)
%"'NtV!b_fFR"PZ`97R?L?&gd6)KZ;s\g7Sb7V!fQ-Q7Xn!K)I4%@Z;)TM'Pa(HKjD+t!EGd4#865r-E2hG'ipTRhC8`46T7S!9;'
%J3@TXmK=pY(:836SHcdPKA"AC"jl9BYV6Ln+9BWA"Wa3:9qTPsT_!54)T@X<CefVg8:XE"p4`\HO9R5OK<<4G>nVDhfS]s!OoQfK
%Jiu\V<QTc>bCZi0_"((4E&=Ma"=QSPXCMYh;$QAa(@2[L#^02L-DUg'Z@Vc]9*([dU;3,16IHu%'mSY>9SFYSd#Sf)#Jm8?W;@k6
%76%O6C%+rDE$',Y[>9D;,"dJC:Om_!_7rQmT9B;:-]<Bp!PBN]$*=?["TJa0%(rDNVJJ"Gs,tndKcR\-`f(O8#W=^0EJV^50Q84<
%,r'!_p/Y)DF!3^U&"X5krL+_GeXgn%j3(hk.#G3@Z):!;VDQ:WK>"68p8eB`KcJ;S<_YFE_%N+V-:Ko\Xei;c7d+;X`hJGa*Kr[S
%6Js"JBOk!IH]\MthuZqE8>E.Nh4\Gs5>El_d^R-o0OQ&+YT=[`V+&b:2!@]1+k&85%6@5!\qpG<a+;Lq@6+OmH\gf-HA<k/#AY<T
%Dhthf\csu#eh^FOYeUX>@sB2)=LsT1+h9p;Kk-'3'Tsgh9gk9M+:XL,,aKJs4#oZG5\@f!6o'B?#0@79()h61iiERN-kZ&J!qQo]
%ROmq6iXj$G/ER(&*tSao^3>b0^I;:7M/8Ykg).h<D+r,^=qK.d(mY2,!:hRJ+$m1h4bGnh,kc\K(R/rc7d,=C;a-+&.)_FiVipOC
%+?Mj#]WVJ3aB36p3:*W@%I:f>0.r%C9<^N@@P'!E.N*%Y?ku%APLr+\n9g[r@iB]W4;Q!X[Nu"K2Jme-k*e/T;qn1"Sq20RLgL#h
%T'cF8lHs\nLf$#m+k&5&4XJQu,(:6sW/tX\Hn8YGQhQbdGqDc5`T3#3jk2XS_WD*]#4*QGO+;0MD>9.ulqObi#A!=okO<:\%U2^S
%Nl[`!j^G;)Gc!7<XQ:[o5AiF%j_))OO<+qOjhJ;f)q+nu0=P<Lp6j_8PiZODO"&7j[kG4ok4[ij5+W]Npi1S80&P(B=aL!@[nl;Y
%<q5MqI]O:GRaJ6N`O?^)iGpm^:Z1HkN4a3kim&C'2JY_5,eb%6C^p=]OYr0"c'TChHkZYjT[g@+%A5+/L#_):NeD*k()B.SAoTr'
%`Xsp5@L?9N`PiB,8Do++@.$R-SAt(RM^)cPLlk+G-"h4fSAp[HMdp><Lc@u5SAh's#04rX&T-7,VLYF8hM<jG*)kS='T&Ni7c]rR
%0r#U>dPs]1:!,Nf.qWtDRopn['p;Q?3>I]S+o.A0Ob$n[*X1UKj@g"E=2W<aTD=)LJf41(f<@'nRPQJ7O_&g)p[ngI]YPnEk%+-*
%X1\r@PtmtoZkC^#bi32YkaY5`Ql&K85^lNGBYFB+f6bS^5X&%t,a1j;s+s^0AiTPhlo;4$l7NA_O[>V8.3KRE"'m3edKaOinXJ>W
%8:D#/hk^Dm)s-,(XJ_K9%%l`W"=-#AhF&aBica%<Ll"(\BF,&ICU>JJkXmd#TO9)c]r=J1,EWi%FJC-Sc6T0UAkX%U7M&C44X_i:
%BI4_DF<_AS,&0[$OLPmR,9l:d3Y4Al#a+<oiBuTp">F6l+VmEjLe&3`/<37DZWJW<=<bRLU5=Pe1DLSqLO+OnN!*Z,[mTF=JH],n
%.7b_g86e^f;T*%%B&?3F@_oulBr)mhX@1=o,=t;N=Dd3)b![\W"AV1Tj:dRf:Fs!_.+s7n8n;a:1oM"NFMrnc#EDFqpi2+Sj$6]2
%[srk]i<'O@'3GP\Zm9UJ$O@)&Ra.Di\=#o9doF;')Z6?^7ubLu=opc&`(`$n29p/6OJ@D4(Z%d\379oK\S!73,h%m^>^G/$UIj/D
%V[2[>$,b^\s!:s#g#)L0$']B58lD%D%^;H@-Wc&EPu/_ik3tqejtPg*5TQ4BA],Z9nfY1BM*=K.@E'FM.)^p/.)RcLN$os&XZVG0
%83B3_&e^CiW$G*5'77)uHpT"k&u1Q`6qi\M)<Mp_).bg]N"rNAP2qD+@MTTaOLQTR`%<BXiJm%)a"LJBr>5'16!5hElG&_L$HdC?
%Wr0gu=&3_SaR"G$'J?lTaQtlA(1t:4A1O`4KI9].kA'd`4:TS/@G%R;C^i9`B"#_'f/PQE3+l`3Ctq#iDq;qLgDG1)fc,T-cJW(K
%:fqg1*XC*0biKt)R/%^i(EV&FaQe;T75Qc@3tr8h/&RRh1db4u1HgP;LjE[I-V&n=3?N1Z$lL7*OO?+4R)+N7R&h:i0EH6_LqBK'
%q8@s&E@a#&.Em!M<4V;V5(ik@#:?[*R(55oM0='&jQ=\Q*/.B'1#iZX>j'm`Y.;k>BAEirHKUeSGSdn/cKq'dRrci[SYpSljKd@<
%RT[1N-eg?1%ti,.)N7Z+)(6`uL14V&DK<OE87s;81T,3K/Viq8aLO\VJ..J<;;R$c,(DE+L@R#,agU/5>8CjWSCofrh2lLfNEdFN
%Bh5"m9Ugi\=T[nD`+rL#f7l6lEKZS!lYiMF9UYi\_H>]:raUme%V$6u>kbSUrZj!9O`RW(fm/>]??sd4AfG:q;T@E#CTY+OL<6?q
%oer8K"\(DcN;Up82R:&/Y-"rC=@\l=8mo[hJb)LP/bqilZ-9_c9Udo`;oVqB9q0>6335"SCg"[*-*1Z^`\N>a0p0CZ)Q$H;Q>go"
%Gr:R5d1L).5rWABB@^8;9fgKX@kI)r`gWX_=l:#G#9dk7o^[_UOZ&MN;e2jD-ChE4&!Lu=A(X@'B9LE.P]EXoGac)S#a/2p@?ta)
%-PSnE'-&;-M9ecjI/1r\-@ASB#7Q9Nq"alqO+WU-$&jBD'Ie[nZ/J;Z`@r8iCrF8SU)4)1(I^r+YYdg^'c\f!orMR_1KKo;$6*&E
%.[.dZ9?LgZ/<c5/]peJl)8YmrIE>mOk:N@C,rBd-CIPVU+rWPG[0p]!-Na]i-mM=EN,ROk1aL4d(";fP?@^GP)4"e>Ou/FN^G6[k
%V82sZI$-)?T-6dcF;ctV8jBPJ"A9)W2aGo)30Z0!(DV$7r0!f,FIMGcX8Lu;AE7]k%Zf@WUeHpP.?gQGD4"CYpaM?^]VJbs(l9&:
%;ULbSnYTS)#+O$n2K`&H=mS_I'::U9rF.5u_OQ)Aan?ug:h2jpaVRk@j\3E#"_B#g&frnV(odol.jG4M]EC_3->DR,)8$qSOUJ'q
%5a@`E#;?3a0EsNGFUH%.\>mFX":Q=jNQU;(0[r0Vb93'@OtoQ?dV.__-7+Gr18HN2Pb1efQ8P\ZE6ctSQBHPDP1c^kX>[$_,IKhY
%X<M/C2:=7U*XlVa7;VHKAmtr`.k<?,<sb"U+W.UpNl9.T4]7L7aH2TJ]N*o9(fA!bl^ON_pI4B]"P*+.o.t%OOE5h^Xl%rYN$k8g
%D\'ORhIk)OlqcL7"Gag6:<ZMnUguTSEud/uIIWQlaVh7?;7Yh/BNU$WA%OUQLMOjR!_uX].ni'#?Y*JDg8OQtCVB(1pDs/<4kbBu
%*1uJebP>u.l8<-QP8P*H7XE<`=6<F[p*Vilo6W;Chbui'?T[CK1Zk\QZW8r'gu_Z_k,Jp_W=/<s#:!a_Ie)'Affoe_:*SC.ld"W1
%[05%a4f5@)k&B1gZApGJ?%R3UNXL2[d%d0/Zh&[l/>+4$B[g7@W(.f()XY^T^QYSebL1t7qMdV.?^;1'?iP/<c7_fqmW@YTSOn*c
%3PjOi5%A,dE^gO118nSm/!F$%-uI=_:]o/KkgZ(`$EiY,%18L[8m&WuPX2:-UR')k.5J4t8W.=4X*Q;^P92Qd6U4$.^Gpk+KT`uT
%I`T\*R@-76DTc&7B$_<@6tbnQZ[0g=LKa@T4deEpGWh@=Vi=rPQeEm@pIpGX%MV$1#[Cb7gnqVRFYDRq=un`<a7a+Y@0X#t/?NUI
%BDjWnG"#]ji+0Hg:39Iad72\>iKL[UF*?CX0fe#fB8H:dpi1UU:AVG7j$(`M(dB;+7r%Do>W9T/$^2bP5Hl8<"0A#"#4#Y/lVt4=
%Nn!fd8im7?rCEJbcD\&og6:#kJ_!53!/AcE20N,t`XZ]SZbd2d7l0It1pVR$)k`]Ci^m*Ra(+N>^&rgo0ZQ1hlPRi?.Ek":/@1..
%P#eI,=pD;aQb<I>\lPKJl8RJ(ZG!BIl%MEa_1%j%T/1=&n*p:g4sBV6Z+k%&([PSA4]&Vkl22Y&i?%A%]fgU)7AJ//f>f`u^j:Cn
%See+K*;pg$Se';F?^744KcXn%V(&HG0BMk?TuS9ofBEn%So9Z#mI@J<fVc0)YV5"<Rl_Uo-Z;FQjN$tES:6U6,t"sjVe9T<>F#d(
%ZYt2&]]4&'J(g/s[1]U]`O_883.miFjPpm`n'\[Kd'lb(W'8S30$q?Wd.X;_C&jqtG6OXhm2o%Ps,=>HDl8!=$"%5V5-NBFj]"L#
%IU],q9).C>a/;r6TfPE54=*t'T.BRe>0150;/BjjS@^-HEbNaHPB_PlasYuT1e/,kDp2589)U(W782PN-8KLiQ'Fos1MA%`jt'dn
%e%-E,-<!r32dt"0SLoK)o\CJNb*9FEQ#]p&/8`V;1IhXjC!=%s'I`(%d\MgZmptR#Q"NmE).oC5)eE\^d`APb!k:p]@?[+0'_;l3
%R5K@'IaKQN]0QN3$1n\jBa32&;&jU8:_2\A/.Gk*qA/W":-V5%3@+73K(3KLT%SYD1E11(Nj^6(gQJ=KajIQXBNoMa/NMON*,S?/
%[O"GuP4;>T/NMON*,S?/[O"GuP+um9dC/+L>B7)&GlkE#Erh+m0%uU2D+fnt,tH^QUM\-#[cD++EjRDYg6N^q99-G,8)'3%D9:26
%jChb<Zn;*g].H#XO>9Br[:)pL=B$4TeV6N#@8UlD<#ZV'L./LY;/KE7)hrj:g9@M6/?0/;C;Ze"Yc'H2WXXl$_kPkh$)e;+#:)@Z
%;/KE7)]$tY7C?Q$D-0aV(=e..[:)pL=B$4TeV6N#@8UlD<#ZV'L./LYs4,gWej!Z]p*<<O^:iXa>Q2>#iL<"pZ&b33hm8IR?5H?V
%Ub-NBoXI<dcsb,X:UsLl"j?@YY3U[H"b]FW]RTDHY3AZc3Go8=SpihkTfn15DT2t@73c>5[[SK_P+eP)Ir1hT8K7[W%):QaHeX<K
%Vm,_II;m@;LE;:"mde>Hk9kAJiU<o-%]8U-d3J%hYjJmIB>8O&B<WN]8bG#RI1P?([sA(D3qW9&M3WM%VKKBqA[rB?UG`!JX`gGh
%W9Z9LT!T`aRP<M(g@nFg[,kVucH8js]n.6'Bif2L/6=(\8tmMFC`U"NE9"6Vh)NGp\@kWWA(<5dG2sWYLX+F:f?,4\p<M2Ra2,0T
%eNT?1D_1:MX*=6Wl*S"clCt;BVRRPbG2Q%1::+99XQt+/[V&%MQ2m(G[bWrB%STHuA\jN6lNJ7W*9WFI`iM9[CJW2SE+77%/+U=K
%G:7n+FENGHCV.3U_j`RN#A73Skg=R%'8GUg>9h<`=W6/qU6d$1q!rcrrVR_=6b7cR!mt5%Lt=?Z.M.(i08npAAGr35\$3@(b)[kG
%HYf:R2:fq$VN"b:mgD-h,B'&jjhEQOp,3`Z1(KKAJfr.t<?+ILe+4anMZ^Z#/!R*+elb6'Y*a?4a#`KonN'),.YKK`'uFl0Jd]+!
%OgWdaHGcfufPh%u"/dp]L5Y#COJu3J7WAl>MA1ik8-X,:m"E\U:1boo0D>7eN_!9:jF@b$*8(=]d;00ib!@sXe4k[N;@il*5X]p"
%\pq6m1AYp^n4Al>rU>eVI)@o<g(V10=MSpW$E(26eV.c^#HJ8;@0D=1XroB1#'m@_*MPB0nZF,,LQ`:jpTsGFNg6&d[9CJYC2odp
%2U40!OE0]OArIH3F6,l5eXNkql:p"&MOhOb#MDcU^jdJNokBgE]D0?cd-ZdUq`K8WQ"ct?CF".+FpYeKTPX#>;Xi6gq]1lD/r=SX
%nWKG163b7U4a1f*_;U6O]ZOAbAVV\Z+N54q5bN^gZEZF1.^a;7@W?9q@BFAtGS?!FRgkEanW^:6cM!KDS+![WHFUb96N:Euf]!4q
%#]CPno7`Aagq;$i4-3cfY]*qk0IQP-Wg%Ynp(L^<A@RRXOEIF_?&<*)AK#2-P7rt0ZHYk[ihJJpG6%QQ>;<dncnLJV\-6WC(Tc_*
%=!>;q`F3!Z]Dc`Z&mU@*f\$:n96qBMCkp'Ce47'8DXE-^k8VLJ82"(r'5J>!PN#iR:g7t)Ag\U1fk)\A;3pP%L6G<8Q6Ya<Kq6Mn
%diGk;@])lcFGdmd7XDnKLlY!a!ToH-T-[$^);&Z0pl%PiB*mJ\]jW!/NW^,#r'Ums$@1M2IMQ)c%"?S+Zq;NL^rM<-V8nQN]jUp?
%AP>>):%<]n"kW?`$HK0XrE;4*Y1Ht@_=s!.IOTK^i0?Y#'l#kQZl88W`:G?m8,n$AdO-ncft<F2\RAEXY.)\qed>[!ZaDf+Gquf]
%@sTqiZbk(_0>'a<roN@h+9*O,EF=*m2snY4eeEIp;]^m&#pKF&=nF%@K(_9jLTD54ZGreS1O^LB&FuZqY*`P$9U^/Y>)uoLp=>Y^
%=/KLHY9S0XeRH>^eY$3Krqf]T/E_8u[6nY0p6YIC`'psbB56a!X1._IX8:q]ZSoNf;rhQiAm_PsF9SNuDZ(X2KYQqM:X7IqJq"U%
%-,$IiAF8Q1>?eA/J!u?4gg$1g?)ndR]$a`AX[,<\dq!Bd;Q\e(CJ"uD?t/Xn0Mg7ooV);$/,86>28:,hkFp("e_T;AguoYnIKhVp
%"q\7oTmm\g`YF2W6D3hokYM7n$\?7Ros.m3JV_]k]TK0BokI23JW8?%<9U:"2l3<_eS_DrE+[WC<c[,!_;]q"Wp?2e#eF3#$;:Bf
%Kl=>6nd@St]m;[A<iFDL3/GUL-gG!>fPN%=OtrC?jJd^[YW<jD6A&._PYS\"7O$*3,?+AFXTtV"PWObu.3Di_a=nCRdsb9;0nV2r
%FdqP??2gONd4W_aUVa",k4Q;l$F3qIe2k*FU#$'/S#^[&AJ9^th%,.S)IFp%;Ap%\qp3/NVPr>i4?7.\d:?P56HkDEFM)a&]bMf2
%/mF'6N=(f\g=8e&6m1l#]bC[G:^E%c??0eeX`iuU3-"a]:ghUb0E?)YWPl6>:i7g\LdJXl6RE0%`\WiP7\O'UPJR'3S>l0V'[6@s
%1\tK37)iY%A%<-P(r^Mm//Q9G;(NO&E`"CN@$GeG$DP(M8;qmXQ^jpt/eg&S'@/t?P?!&[NI4GQX+*W4=5YJc\j8Ar&q^9q06&iG
%\^ke+_h!hS(6fn`)8R!/Bm)BVYnsVtG<;A,gr]imi->.DC8K?UoKM2/U'QH\\oJW$>TTRJ%YI+c?`6(RB.09^SeR7c*/hs-8pLO7
%/-,9f8StE[k23T)\Ab;3Il>1)#*!f$ij)<`.@k[8->!n`=,9J0:04L;,pco]_bH8oq=Nm'&ZlUuQlf_YDF<!nJ(eX1BnbNWhFC%i
%@!MTiC9+,Q6fDZB18+`h3o0rmq5F]Z'Gb2MX&s#O9ud3"T^fdZq\U,a]qq?S91>r\3AC#YW1FiT_aHOKe)qN@h'0n$\W3q%lNkaU
%P7mHq\&pFC)PBsZ0B@GPF#&S%+G?S<%s$QtGb@N9ls@D]&bYl18pV<o&n,`MN"-(qX6[0jU5)m;SLCfW7S&.%CTbcN:4t&6Ha=QS
%!;o%Ba3D%&ZZ%TI'7-Zl<<Z6?b.XA1S<#lA79&C?=o"L_jVVL"3X^MVQm^0m3\'\,_Ih:d56%$F)`^o8A2QgO?\mgbBs2"ROTM#>
%1e"t3OM`V(:K1FfDhQcAN_[j`L(Q_XiFmkLBrNlrK>T)&O$DcFW`m$32UlII-YNq+OD3FI'reIC=(B^P]Y\LWM3QW,1(ti%q@fX;
%eu,6sF;j4e"M6MiP^lPK($lWPN%]o?jccFBW%a7RKPl\Y;:6D#M`5VHDMoTDSNZ\$-\O`ZMW'um!t'oOeKC'SWC,Ul$+i!%`*3kk
%8BCR-=A4LY$Gfc\BWKN3C4o^EbgkcT953IPL/JAF2<oU#<;9aQ=SNjW^YVIMCi+iOVqmG-8lKHgVfI,.9hnWAmQrHF:.D#m,+1/?
%p+qr1)g?Fa?5c,4=O41Xldrtoia9UA#%kbmB#@41W,lW.n7b*51#Dc/(a>oM*0h(iZ,U&qK\8?]S#:[n/Z2<iGtKAnR80U8BS<EO
%C5d$s6d2I2L@L,MdG`HN[hLhjoecm)V,K6F&Zqhm(i,4jVDc=G(iD5]4@5u,#>3S*B,H2N\9Zeh$;!t.0iA;Tb2p3@rt,SqX6I]I
%6]`DT>W*%4g_4BZ.Q$5+ht#))W.<p'b?@FQM6n6;8hIFcL=o1qDR8)qE6#q8NlE:OUdE:'&\VU+b]4M62q#c6DUk5MW5&&(+IIb5
%fh,1CM3<lK;8seF$c>u.P.l`%;8t%L>FM]ePUV(9?C9crU0865\$;l#$)P&MhXj4D.-"cc9%-at'#M&HOBRlF&i0Ho.+=llU0<d(
%N1sL?J(`OD[4(&NlV(5/8gmCmmco*`!QoN8U4csm8b&`,]b[G$9slCC(i.o,_R.mgK]0:0Oo!C/V4#8jRS\&cKV4<F/gpPc]MK>L
%d7d6jJI[l"&UtLP;*ls:k83]E0*4<Pk2hd_7$D<!VXf,)0ZiiV3?;a):L5+5PaP(G%AVOb8?Yaa?4/KkO^<t<g@XVe;1id2GO;R[
%"VG4dZs)Om79](CXOSM-D(;qsjJt^Qm6@T#S1?oZ,?WhE2j/h:_=+O9:=K>Q,Y#\0;(<3R&1!(M-k[a@c`gB-%8e`IOM2'%1$3.2
%.W=Z<o4jtWqEIU4U*9Pa)8VobET:V)BrZa)021*Y/Y+d\qID98'6Wfd+>je&(?18+aA32;_joQp*>]>/(\29ReQZU];Ju`RGM"cW
%D+3$0;!d@Y4"AbZbXj4Xd0h[TMkOT:$_LB,rb]L?nGa9ZM#E`9#c!;CL,nd8gg$U`W)m(s9^Vh$^"2XZLtft;l2HTPr1g7/=.='7
%!uCRB)rgPT';Gp:`HtLL`J.\k)Z.eM+VhhHXGQ%43LY1E0MSIKKh,[e#N>!e"#V!b3unBX0Z*fQ6<OhO6Voe,$\uY+df`i[Y;I%X
%N;B(ndh5,@Jehj%PEQuoGms*;O1fNQc7Sq>)9GHTL`"R[:<K(r48ma)p"sH]G<FK,7r[tU\FK,hXoD/XM_Cgthe;sI>5sT5Ig;_`
%XoD/5qChO`d0_QpD2%U-UG^s!b.:ABJi?m)NRiKP2;]RTUKk!%\m\p[0emDc6pAj\3iBF%2f"+5Woo5$):T44TrV09_T7KqmbQE@
%<-\@@)@cB._8nM!eX?sWek>5*e.Chh*uJLr,a&gahH[2'>apedYmmf=UC<QUVhm0>,=3l5!fYQ<^8R#T9btEB2+j'$BsK-]k3Mt`
%<Ad3ZD1PKZCr*d7X6S8s]%U!Q/PR[4WLDTL>h>#,B;7GX-:BajBu"(!'/Y`X,;W0\&3.f3X#IY:cq=RK)UN:\i\ZWka'niOnsr6R
%Rj*qZj2>or-BdaXD5@A99q/:k!q`j3<krlPEEZpG&eLbHc]C6YT/QJEU!f7?O,OL`&9c$GG)3eImit]h,tbg<M3fX\imk50i[%40
%7#@6Yn^93d.*Y'k01H]]k?jt%b8<aB;;u/S`67AWV<OuN)4Lb,h?\A#%+<d>OJ_Z?M<W\a3u$FDb+?eu5&?rjf.Z32@&diPeNfMn
%%EA@:M(lsMN;GUK@;q%JR2Fu+)>A2!_A<ZA^M04d\!'L@EK!Y$)DCCnS\c(Da,pbO\6HusK<;DfOPqFLs.")!`:`gID!Rn@B6=!u
%g6ZM8IH`t;:/S_PQdrjGQdeF8o#J=:0>o#;s/@rUNLTF9PtFQo&bqem%`rf+,>'-9JlrR=&?ZA;J&WF_&?h89NCJW>FIcH]N^`*F
%(^'\nZC$kZ*A/0G\!`Z4FEA4j9j`R^::'PE3Ac[d)kf\.LI<!:@YClfSYSRpnTVYdWe/N02_nnV@?@H;i<n#7L8.)u^Quor%U4ta
%(uq.,i1`?R=?F;sS]=8s5oq6Z%T+8lb%$C2ZC$kZNUdo"5:KGN@hS>Ls.'EiQU=c39m_7gdH$HC2pTp!Ql9T-gd$0fh2_]8;M_Q(
%@_?5d,K-!(7Cf0aRe"j+>,<q@VPjBkE!p_*9WQo1#6t,=C.kt@nYhOaWHl1[Q\(BYY0\)p/(>N3E-&E.R:q"hU"n;cLM9ie;g$Fu
%[1VCU)7ga+E2fVM@OdF3$>$q$RbA1fA@U=6dNfuPCio*/05;^rpF//s.G27lNd^a+B`1$55)h2j1X**iIk'tek\A(S"17T/-3^/c
%6Gc+s,M_Q!.SQ4k<:+Xo]V7f.#fh+;ilf$PTJ5fQ?IUeHH\Fd5.e[m.*QDP;_0/4QK(d@eLGDO!+Lc18Q4jfr;mi8`:%*s+LjGS)
%6,C@]]:^iMs"oVpU0)=*3]r;^U1c0:k/KOaMP@X0Req<'\Ia5\Zq#19=<9ACnQ^mf'IGZ,$\;Fpc:-\s'[B/+S1c'`3;;;=kLSlH
%#jB,K1%$2*4&$l(-tK'6DVRRi>?*7V2*$UuTD!MI.Z\*7,<IEr2;n;d!u]+Gm3^pPE7)3/j/`ogo.d09>_s'8b4I*ccT*+X1s+qc
%3-+*!l^PkJ>^G:bOg!9C>cR*S2ac[n48R8mQn5YmDH)!"o)8+mUR":,1FZcY+i^!B.@P#35BWs[?TZeNlnc.[[DBA"#9A3=@rAl"
%gLS&P0D#Vi-Ut(h3-;u%3iBFU)p6'O#2U^sKjBKaMb[?Sa<`->P/DQ_Y3)LrlgJ#Um@OjJ(%1Dd<2($fmfR(DPsfT.:7J;,'Xdp%
%8oWJthHYjmL6Mo?'f)EHBKIuc98$-0o)J""DQ#u]X6$;L_$Y#^BCbsLpIV;nMg?"R)0"t=!eQ]QM.&(bd[M3@"el[jd7$7FAGSDe
%iZ3\4Gg@'dnXm8D;F6'O]oS,WDe]>87**mT8E:IR:=1/*MB\\VdfIQ01)r;CA*4P#?1*0qb-$M/]BQE2*]Hf$^;,2Te3F;sm6.D-
%'+`T+<&fR#YMR0QqtgYq4U_fdkM<Xe8;n#`=f^krV@r0is+rK_@4!A#(</3lajK&Y5"@d8VK#48nIc_[0f+hujF5mD@i,;4m`$si
%%Zt`N@j)_6j#CSN2>.50]Is30fu?V-+@e((S:%5I3p5Oa68=TB0nj98$p7p.&q0Xk5+"3Re_?n5lKsYGl$ekoAASj(C<Fn/Lgq>M
%6AP$Ie"&\Q9p;NmLTsM4?R6D]N6CZKl^P_Xia9SO5-s4h,J/]1SbA8TnQ$<%]!q-h=ep&nir?V\I>h'Y-N8s_o4d&.]06[ZA?:Ol
%QcB#hN9O$0:%0;>.'8CSV(c2q"A`<Ch66&*$!8Pm+tB#qAMDe+"AX@V@[#Na."pROgt96fFI3l(7h53J"mN1aBMr-*VNfC4(&#/^
%YV$a0OC9?=P>!OGM?QKE->[kKeU#0f7-_3Q<thQ&VMWDQ;DBXZm;03QZ.Z)/N1PK0Q5s[Z#S(k$QKNiH[lTd.Dc.E>SjunE,l<i%
%BN(8q(j`g1f]PDPM[lK2a1j>V\E&Wf2#`F\R)B8C=:I8>HobsfQ@B0l+^]gXcQCTbMqBL`013V6Z086T1UV?+^#2h)erB.)9"!Mr
%hYH`o=W?6kPC"+*/ps8N(UF*,Hs&$NZ)lODe7,=r9<KaJls)%CN.Z#faPEBAB[j*$9GgJ3WnN9HB=Ck3\K,%;D&<6R&oM[f!,;Q(
%+UirF>W+'1Qt2/Q./XT]$n4^BI./rQ*j=gRF<Gf5`::@6rnYG@+dlTp><&*s"q3ho'm.h6`O[/37\JKcg[E<hb15R!.n5su#1k$n
%j$oLqs2X]A>^@LkYqVqaj\EMM)G3rcQ2V:KplEG*Ai*icBO[WkWa@2$'tCQ.muiD0BcQ5&G<`k?7E(;F[l=*MDj])-C$bAHMNtrl
%bq!lLr\(&GOm'bLR$Se@=`Oh$,Jf>X04[fO`@K\>>3,dlk`5i6_2SL0"pG7qFr.uVpI?I+[`[F;*e].BiD3nh1tTK03G=ibiJoKq
%G80S&dQ0%FF(m<Af`XHnQ5^,g<^fdm_'$+O6*+t%SirqU-[8,Y7k&Qm0]],,_Ef9?)e8(WmF8fEHF)G32)!o7X)\eXGOhqW(#Dj;
%(SF:n?3]<\kuRjO6Z&V9.a8$.)dFkTA2s@<9lgV!%DS\o</O&Xd"rISZKN*ZB"8?LKhZ/gGPk9^dD:'9P6Y^J@IOJ*c3q1Vkdj*B
%]-nk>1,P1g,n]M.'ZV>X3BE@!Uu7S5.`nLq:mW6,TS&9-iDm=aAPAK'rum!*Dg_BHU'1M%2E99\_ccIBkgVIs]f;3&^Z[A%98INK
%Il<4""*O;:S?AULgRo,eTEVaQD(7,COEFrqq3SVe"_&kOV^q7f0-!iOcgBX-!ubB@`kU'K-]J`Q%*ZKY%Hce[Q53YpQQNNafbt^L
%6">"H?tRo?VW7Ysi^m.O\'S>'#?Q7>>9IWddEaL@6BKCDHu1Er"ktdl\;,5:[IgU14Fn#1@Q+0YVYGR+oSo4#?c('1*A%GJP)M*$
%47^K`8tjc%k\B]"WeI^nE]DUYq'/"fW9mEOr^U+5ZQg\R%,"HR1uUIfhiO?*i%iu8)kQ:,j\Fq+nMfps+=<XK]ehleHp,S<KR9Q:
%NBSa$g`1hFpc0Z^HS@VcGANAg`rr"g1DK-!n/)B,h=-VZ=h*)%@iuaEMB>!![$el@`2op&i&mPY(&_C<<sLC0@:4C')B8\W.n6i0
%QUPW<:XbHT&fVltM#3@82<DZ0c9U\f]qP(8m:Hc>o<Ai,b3-2@6!`'AM@PX\9'::+KhuIV4u?!u")=LWBW7m`[*nD;MJe$V*uGg>
%(k?1%;lcA8l-t3999$I8Ns1Pre\Bhhlco;+6KU]VXiCN.C7os(FQGtt&*H#XD8u^g_$m>#Mb<e!Qb1UDUj,8cf^m<hi4:`qiL_eN
%WB$L6Bo\nH);oA+(DlU9n6WsL?"`c6n\YRB)?4To`,2d"![L.$iYAf)!j#>rHS")g._8lNoq8G(_Z5nrD.$u!``c[sO`[sRbC$al
%.-6'7^2`f4^3PFL8*=a?]Y33!MfRiMBm1L:F-EBnBbZcA*bLR/g-D5obf"$d0<2<YNo>2g`L'cTDTb#nl)6GQ/SjPm\l_t5QX_&?
%qjseSmEfX[:lDd;<]#'6fkoB21Zr+)Q;+U"OO5b^U4dEc=['qmN:!JEHS#^n811o(QUiL*`o\ai:2^#l4*_V_9et+<liMQ)7Jids
%$HbSZ9J"e<\QF(N,F$_%1q$GN6$%/&YnOZJmE/ETG+l@VD,\u39j>JTQce^lL7/#p^&gF@kt>tB:UT;)ffQ*+\b#7f%fE2a(TC/6
%FVlD'0ZJ<Z20L9iF@ENM5e1Q9MG:2/;1VpcQiR@DAbL'@hGR#8C0-0^:kR0aq-o378AMU\knHe,O$g2n'9='.\."k"):mWb3TEc2
%g*<$F=O,YnF"S^bcHa`1eD8e0F2hk\DQh>`=6p+ZTMhhel<$Y>2gK!`7-I;g_.F;cPs@_s.S3Ko%#'3?7`9kuk9**@3[0u&.`Dlc
%,aD&%8WM$_Y9J"Lb;7dt]Vq1R'iRGb*`&&A^"\KO.DVlfUDh,j_,!Iq#'*+9TF.rslS6Eu3c1c;O`!0Z3]0Q,0G,>cQnh:E*]`]S
%D;bEp&$]j7TaO:VVj=+;f6pKa0A,WIs6)a,.uR>T0%1Hg)6uTc^.dA%]];@5OAjo`ZC`&.@MOf%+OlBs98Vo+'7H<iNi$hiYK&m?
%aegCgU=1(RL9h0FSNi@MNJ9GL2ZPaV^2trg6/CC<?>1D#3]qkcQK/7=^^b8?mos"u!Hggm'O5LGpBtXd%h7o9(]9*:_8Wc.RRr97
%17/InHV&hBfST/dBnR8;ShD(fjJCU5:2U#iA`_?%d^6+tgHZYt[RuN3"B]lG(Zn]HRp_dJ/ePoOdFYXN[ocKHA\cYA'CJ&f4,ULi
%&5jQ_E.&h.Wg380WEf#_hV%,(<W?]NX4qs$XT%Th>3os$GF@n@0KEq*cuXL.#GR+Z0tH*FhPD&>J>4#URSI%,W5mOtH]7:\oYN^Z
%rRtX.O-;ckWD:[r6SZe]A#4O"h(VWmQC+A#HH`aCFBHc.@gOeaocZapk!FtM"%c(<H\MM<0\-+Dq@;@P!)3Y]BG/eQKnk#:q,L7D
%6uLq8CsN4gdbe-OKPh_M5jkiS862\j(K_98eMV5Q0Sl8gnC,MbL!p^9$.>`^I(mXSoJXq&jV$3;Ya%8be-Q)mJI7Eng=!*9W.*(N
%l=JSq&`!tF_o)NuRgq4I)Z^n=;n63'aftWLhcEUhSM<!I_d>r^&JppRrF\l>1ci@n`ZHbm;)gZq]$DT)i>+#;+#k(*[sXYLBa:)"
%V,@`Hp'tQ$p6[XKlF#C'[_sq.aO[*"+),R*c?FS_#To#=^]9_B]&JXQUT"KDX.@]]mis1CIHVTjZ5U(2_s7F_l>>%$2f\m#gpRi1
%?;aX#gHRDeWM6',GU-irJa3mWqsiu:^o%CDMfM2)Vc<C2VJYH+e/sS!7Kr'8$0'5N+s)L&fg,\UK`T^1J70X9X`=ntf]JI/SUHO5
%WPo<&B;3MMC2`C^gU`A&8NL%DP36\[JV1"G'NMJF69:bgVMa/B$u"4;YIBETo(N/0QdeLBB#m8jRb54h'BaejY)Xa7GhB$p0h3'7
%LsW;1/:LPdn0tjT[pRqnAk-cUPY#4!>,><g^!2O[NjNGk[dA)K6G5i=4;@2R^g9UcYMIWFQJ-3#B\-m%eArKY$uIfe#%IkHhPSTP
%V0%mWaJ=Gl\k7OPTN4$/g1Wam*3Q-@[N/aRJT-e'RKEZqD49eJSs8r9@2gm;"J"RUnRkPB^`7(iS;*VZbcWT',qne?>7Do!ktEs0
%XrZ#_[p9LPi+=t34[A'_gH/J3R=5U'7Kq5u0',j5XuGJ95cm#-b$''XeZ'RrIb6QcNM\6#inL9)[U@*tPfN0H");S=*)N-$IVP's
%<sLPJoQL(?@TKDU<+%M0Un<@HT8`g![a;k4P<L,C9cZeQS>#OiMCLf;137n=[@X7]q=h8_1&*pFgY"ih^SQ&Kbmh#]`qM;`p_+:J
%XiXs=PlX$+kS!THqmQVFl?Hr:s$k6k/t$^bJmZE];O)C:YU6#CZ&Xd>M.Qb[NdR4$2jK]CdHME.rQmoKb)Ni1;0t[?hKBB+o2iZV
%k5.VHf%rK]Vd'Qj7!%*$KP3KpaIq*QPj\32&u)oG8VkB(8:'G*29%.^79Ss"Ni8Z6fR#ZX/b1CWi+NQ>>]ZY"hZdS#2VMQk5d\A>
%5`&^CnI)RrW&:N!]rj<jqc*bim+OG#;';eXCGU1,7S4%7U<ELI&M%G>N=EF8.HZ0jqq<6-Vq2m]&tbd9&KP4nobC*IW8/ki$=KOC
%psE_FA-F)nlT5=_a`KFO[*mJ8XQG6TRAkMW)5?bTL-%4:\kYK7iomf"r7TEU![;Bkh!NRBN7r-:WGt.h#0'%0I_BA_Ve;r'5;pDH
%\_1f`H6^0:]2a_"j$PM#NdY9Whk"2&?]P(mK&R]%]K1T10eanrn-$>^K)l@,ScK#u1]Z\=2[fIIb>rl<b-fCZlRA-b:;,@"Uui5<
%K=YdK<:,0ITFfHY+*TWY%<LiP=*P8Z-ZN^E]H,n^bLLsKUBkT@Y;_oo+2Y%g?uecf]_RLBY')E?Z?BF8UAg5%\59Pi;Y!u!$s.K.
%?CMW^nhD2f9(MEGF_5T[(k7?BDt1\NhR0TN9FfI[1U=Y4^EI<bXNO6FZQtP,kdM&h0!@OB9umYO=4dmD:5@qir74kUILEXPLB6eD
%)JZ6p*\190iV]*`3+!11DG].WFO(5m6LgHT.VM-gBFgsnI^8Dt^P<ZhhF(X&;LN4OHb#o\4(h[s)00)Jb:*4EafVjGB@+,nJ37t+
%BYeKF.9rIoo9=SQ!mo;HOiKeIAdYEEn:7%kFTGb/QfFE^.&YmU?3as1Sn-WL>aq@cX1-q)*?Ep7=62#'j081t6cXr"goL;&3k\%M
%ZiOJh-8?!7]+?6?K9/<RC.2.SN`S>#7qsc%:2W)f/<t8!S[4_kq3dS,q3I;%LhH$#:&',(n1`)o5aO5i0P<S[HbT!Z\paHmED+#M
%4%_&oY@mU:rFToQg6t$bB%E7`F*2c'1WNcCLtq@ZhY$lnBl\FhjSRs$T%5Ki,`t)]cdU"s/4F]72kdfPc0]@2Dli;BYI-H=SRWuV
%_sD62b\1Uh,<]6o\3/I!:+H'ErS((=f[s<-p5F,l^4u_fJi(61HJ$i'\#4'5@==,RW[AhF"MM7T_p*?N+ZXb9I;:Cj_D"<13\(""
%2ODQc;E'r'ht]TVj!K"MB=lEd^$U%.BlC>ad9IF;k.B'iI^oNt@!YDJ0BZW7noUAD2YJ&5S!@eacdbo([#6-3$UT\6q:OHY?+_I(
%!RRCmF7i[ih\JD/_t)b[G!5d^a62&e>6KaD\_MmI12fgd-*bBp0'-iiQ`Y+R5-_>\4^38=h9.BV90&i\Z?((D>MCWmjEL6#I9!A=
%eB#un'phj&II;6ard7\j2Wf3"f<s/t?2c+an:;-QhV1)k-"%R-lfMoBDj;*-X5?[]ii2)7DtR'ZhPhcFX`R+;^2MG#QR1UhEs%Y"
%/LmaS"BF<[kMe6j14B"9Bmi^t2Gt>cK#@Q/r*Jf1HhLKFbHU2(,N8-SS)$ZteE>BLS+>Sd;k/9QrU.&T!MpfSAJS"`,Bq=:[LfE]
%ZL>ul]"t$ujV*N#RQVDFo(IYlZhg>g@5rAh)>A`P^bAaXlX:G+Z+;/s)o$7IMT;N@DG>L)]eT9*+`Qok[CW[hXtde2opa@VmC2Jb
%o%VhRSkTT%kjLXWR_qCkm#_IgP77T,o^*!n;Ngf:Fs\`P?ucWIB/dpqE,R&:+M=f`Q2'm).*INi=g!!tRCS^"]B7F\faFL:YCGne
%4De,-Qu)?-n3REW^m-"[(OGa$S%Re--/n7b-!,TVi`h]1Hr\<h<bS/bc>+nP<EAJfe+o'e0n4YXE\%O?j^UUtPL`,)&.@^hNQ]l.
%)u5,Z[)8a%]rcncPqO-Ah-T/)`-"nnS;]OH`p>/c&p0^4k<"M2jnUCt]"KUjdeCEXk(E'QD+O^K=]ntRWgRMgI(>+"S6U+j#lEu>
%3aGE,KT20p7jn33b7Ta0Ap^r!odVOnN]22t]C<TecTQ1[8DFp<\lTb<>$>SmkA&f&]=<0m+kcc#EcA3kAWmqRLf*n3\sa"Wh!B'a
%=q`usXjZkWT6am_^%62_d("(<rcMRQ?RoadVBti:*9U]H^2R7^"_G$(&[EeYmsaccVN,ispSeK*O2t/AIe'k4IImn]q4b,?$1%c#
%]!MEo:;F/4"2%5@8JKfVQ<QSg_7F935.Fb5UC-PCp.G$Q0/p4ser@fgC3OaGa761[6!ISmcPUA)4nZm'<GIH]f[E0Q><Sr'WcM=A
%/08a1Y?E/#;7sG$0JtnME;W[+8:/m*G=^W+$H6QCQG9"EFkl@"poD8A,Q61qho=Bp[L6ac]7G8rD.hamg3%+VT3cQ:qM2*dfgus`
%/Ip<*;oPoLo^1\i[QL.nLnU1-<##C4ni[H1YH(l_SI4TLdO^la]8]<Es*BncmUl7G^$UI-"uLV=!I\pmOJO&107:K<8D89-A#.T3
%S*$;Cg0>b!jqQ>?rV#Z)Y*DU"bHo]\rjYH=0/Z2n-tfMh]$-AqNpaYni4$<=peK[eIRdJGp^&d9Z`.b'H+[,$R8:Q5Dp+OVnrWCO
%3<JH$o[]>$h<l$Up*PkJ7cUp3N!1>=jm36`dhKHC35E"p3-m4c"ul`4"<Hn6JAB&69Q?C)XQ=8iHtW)+n\W2:a1YHXJG,"LZ>EDC
%qBOWTmQ)CRda,Creb(PB4Ru6^ipiA,pImnk?TO!.8G]Q8B(kf>gVcOu\7a!7IYXI&cV3!/0JiSQ]`;$,rSro0.MkNE48Vgj1mi^<
%d(M[I@2!6V0Fm/&ZV0>]lVGG<G]!T8UCV9*ba^Z_ZMC>`?MF^G`fFF/>tbZj+qC\O@pcfV#'"$fd*O,.(NF]@(sqQc%?<eZ$,V`b
%Y#/&GACS43+uf4[\YkaT%s:It"#9^A`fNmd(m4tKX5^D@N4D4`L*cRZVSQ6H,KMl)c'j(X+X2utgb1B,Se_E:68U7BB_5m(h#%VV
%KFf<:/q/$AKI_H/k-u`)/Lgp[""K8YIUr3h=O68hoQkhu.F"r1+L=Nd`QbdS!NaUu59mi0h9K>.F7n^_4gFYYYs<,p_oH0XMr8Qp
%l&2Y"ic#,kC[Qu`K.9jPQZn9^G]C7kh)9S^G`8*I]3/C]jD*MO#N>IQ,O7`HqkER]/`D(1s/ZrtF5,>_ddCOEEG2V&7Q"M\f3]iS
%HT1qHq%3\YS$lF&/&\dL)RJi;/a7)V.OZh,JaIJd#O87WZ"[]mBA_2$Np+dQ=[;nB!oQa>;Cf\&lfm=[$'23hn^FQ-49>pO:uKO'
%&&/djKSWm;"8//"98L[.F9aBe>t;tu^tKMH5JPqb9Y.L&*>nBe4o]E09m9*1m,?ZoZFcR:^]VX3B#Ji]>r^,MM_N"g0mgJ*\<=Oq
%J'tU&9HENL.3DGJ6P[iD45B@\E;5`^D9AQf!tikH!krf=\nRZKq"*f]@!`G`_P9"75qrTfkmkb9=E:X<D/e#q*#l[IG'M@AWcB`Y
%^X"DQB:%@$rDA1(f(Aq7f4$)5\s5C!pNmMa_e^tEb%@9l2tg;2n`g?b]%T;[p9&$`7Q=US;1N!AaT9Kak2C_H=8P1f#nXkaQn7a6
%!=3Td/WbBF?%kQ*U6;kdAJ<#lce3O)gPgQuid#:Fgh]f#WfC>H1maK9`U=aH0.H/]Bk:<X>?rMGb^?:U-N(80(Oo,V8gd-^bDX%A
%B)0/dAq8UKTB@lRni%sB2fIKc,n)Q0$WQE)>J-V(g)H%McFKZpL,R$"1\t_p%Du;<.IChQm5he'HFo)*fV3Pu?;U]iUFM\eTqh5N
%G4m&Jlt.\mmCG+6RYSpr5-oCEDVZ]d5;qdhM:TVQ4mhR_J[D_qQ3>`\$N\UX\HV-\8s3MHB5._(`85\-\[?X.\[o"J>Ktd9)J7h[
%]/t+W:TEG_>r^85?4BZqjdR--LGZCag!s:d0kNCo!LlKIZPb%1#s1r9?]6"e+>JUa;6ApESN;PT&*o;7</;VV:R<61!KMU^B>Bn(
%@[s+cF2naFA<Td7S09JgI".j]a7j\DbiQ=oZa*DFB%BWk>l"fdr%9;V%VCQ;>$#?[2Ft]8AD;":Z(&o%Jmsi,i$+b0Cg>B7Btf:L
%&K$7]H$5a-&mq6n*s)<)bhbk`H-%gM22h>s#BOtX5`Eo1Z9_Kq(k8Kr4WCK;+*!*TR.-:hEhH=>VsV.OSs-%Nm=_Eocf`7`n6!,\
%m\qaqV,ceBT3TNDJh"E-'E>ib5;BdZ]mIF8*&d,D=n^uqK>1[%W:F#D<=-dlr;KVEqbEJ8VZT9pbdY*$pis)r4HM)K"Ea<[h@KO+
%@::cA^!&+a$Pade[ZR.c'98BEQa"YCCB<d.<9N.i1GW=H.WbESc_sDhX&g<]FbQkUm2_Y!p.P+)mq,>HXeANuR]A67INkJY0Zt4i
%em8"cB;i_grGA;?bN.ZqmcdrPZ<:PI49])1NL,=qK,$W3>j^0D(hW)*IJhs*e]g_OXL*-<BsOQt0>HP[gZDX]X"LQS%lC4VQKIe?
%oX*N*<u+ZF2bVirnBu+XCs-OP\2V%Th1"cCGI-UD&7b)pRs>.'qVqopHLJc12B#ju)aN@dF=o^_5Ok.s%1q$!Nr(/O*,H"B'@q>g
%NJW%SSIm@I=#F(Z3l_;O-dVV>cCsOD89f"`n"$MUG36.EVtopYnT\t&gNL0i#&N$eHeNeCM_t&IT6_uZ$'i_M>^TB?"V40\Dq\Y$
%I"CI-?EKd%+JQDL`q#knTAOMT!Nb*E#HR3=it?fGP'Q60!h[V?@=Ri:W*FM-OX=8LJG3GPb4/8-.CWBl3gfe6+7bip47D'[?[:D<
%.3-LY[\,^t!PLVmF`6kPWU?V;g'^Yeq@"T(b:@hOJ<qm'@<!UmT=^HWrPiPmFXOSHJF(P$_q)LY>7&ZF@L&b)07cXM(A;VqKs%3B
%*U]jVCg<7WpGU@ShAr1LHka)o;CcB2h,n^p_)#aR,236IkaI+B7_GT\^RF4aP"plSS9K[>k>"NL.n\gpo%a.#E9-sf[X#U)p+jnS
%="n:U&(lHeU6e.0-0N+"/&[-66%aEDW\b`jGh@:fh4L$GNq]p6B3hI7g4g-qB#'F-QdOg>SWp2A->YCliu@&6UepoR\6dV=h-6FZ
%f_:i=^GE'DhiZkgk-fC'd'<H'P*QU$[jV7TNjQcrTPQif5bbl*a,&;%;.=*N3R);C\)8h)^[^K/2?D5#mebl7:4(P@PbrX-^Qmgh
%6;jA^#B&]c.Iuj%nKh'N[*LG9'aF>6@LBh=lDo$T&kd$KL0ib>p7^(^T?<cu0G!mo]ZO<A!epa@+/abf=9>CXWc"E2-G[&*(1omi
%XGct8\HrlK.rS5J+O5ZV:GKK0-*YrN-'msV<nKKIJ!c5I<937_KU_](pDS;Pd<%BL^E#HW3=#b"kUG7WmEOT\_cRK3d)nakV2J<n
%e`M0h>I/9kjsj+:QDn\qd=1c,q$p/@R.?tRUp_)1rk6]*7rIf*=[?gAZY6V!iigiF?!'2g.%:^rHe/>RAT.&l$Y&?NpB6W(N$aDG
%WroO1no8VkK#?iT8onDAUAHmpG*.0bJlC%RiWbun1e\u]A*[0#4^VFt)EtA!CU\?lnp!8%6VAAI6c1V/kdPon%;FM[TR2%/#7DZ;
%jcA2bR!HXTAp($COKfNH;On)oDbHG?pF(VRMq;T#[gc]rCaHbOiZ'@?Y-F>)X,;:N^S@QXoQ=m4B`08J?T1&Nb2u#(YeF:a%__J]
%`9nr&d(:UCXZF(A]%F/H/-K"g&!uhf3.WQe<Tu!%<tVJ`6JV*a[Dn.c#A#nZkY*%fn[p.7<Iriph*QB@)fmto`fr_c_C>!$/H\bj
%p*lV@gOm&9Y-_HO?lg%Uh6/JZH@=g(EYUSFPC\-s.G<d/\]il75M`,6]=EQ!mBQR(Kj\9^[P&<?_X[0i=)6XFq\\nQ,^D]2gNpF8
%O#2!i8hk*',uFFKmpLl#D>pQOhRZ[lI(.^1^ABB"+!lI7B<uG>m:mC;>Weeh0ARC9gZ<'hhh3K&IGJ5qI]mfS+"JOg8Lkn2[T##L
%daD-]RPNEWU!l%lb]0nlqJ@nY<PZQZ!6J.lPqT2maAm0)4g3TXdEQ^B<7kaBQ&BHgSM'9d4l!GQDY1$$s!(7`Sr6n=or2._'c`,k
%GZo$f'p<esS.eZV(C?3AWPmD,@J6mkpf=ZRZ1OQeb@d]/XeMS._q"2bppJFRT],i3W4:$RIFmDa>J>'I.bNh*]^NP)!:nB==.0e"
%qXkV?<h&CDeFm&"O\!I`at@QJKU$kr[(UX4SE848LT%tA3l2(oXlUo6;;[ld_t=\Za3'_CoA]q[mTR:oP[I`M?%)r]Tfd57\*=n>
%ET?'5]Hh+=](gYS]*@)tIdbbbQ+K50Ho%#3M=`s8F(ne7;T09Xb[sY;Qg:X%iT2O!fY)"c9CN*[V+'>-\Hd-Q5$cD[D\MFH(8sI$
%<V_6n=lDQ)jkXhd5qbOr[8"7<[!GmNL?,5Aq>O*5Wo),`fZi[eL]:b7RR)?I/p"G6o"&emaPD0t!/e>b4tA3*B@CO3/frSC#74WQ
%FO&;HFVLUV@^.&][[M:IrICDpK/1_oS&pnM$r4Rq830&%h>*I5;1<ptj'0,O(XhWt'8(tt]5TT*Tkj_Rc<m0P%aPZg\BVYO,%.0:
%L@5BVBBY="$71Ljs0iC]I!=`K\]rg*:fU/)k%.OT?-RolXfd4+'fof<k5`*)?>.YrY/SGl9_B/idK&#&b3<h,o7^@>7o93BNa3+X
%Y.kY>JVKk5%[S4I)iZK,fV3,cce@]Cl4YfRl,>c&c7oMaEt17Va_c(h>[?U'"Tb<O3[.'iTeh^4\oF`$!oZI_e?,hird3Wu:eoQ,
%>,l:O;\@No>NG`94XH`7Hf^"72W#$qJlZf]U2of9D(jtMEp24Be6AP_[P^j-%,Eg'W4^u'IAKo6!;DuHS?^+pfD9CIEkubWf_W!T
%Vu`g7A5.pF2'll$P`Bn1j!ao0.BQ^-S3S:-@YgYBnT-&?,*%K$*H]c5D)KZ-gVCirk]hmnH-Xt1:UM-W_`Yrg<_O\7M8:=*<mch&
%lRh[4be_G;0c8R.TEQa_F;8pt;IXcR:bKd,13r:83]U#SP;?:e\S3)V11M1B1*YWs(NsG%A7I`p?l,J:.lKZc:9<2r8+2o%#`qt`
%C7saQ<c8N$b@+/'"H7c0'Q<9Zh]ZU%S-3$)c7eD5eg_RK!<kZ?,MR]8Sr$f?",\Sb_`^+6PF*!&NfVQ2H"-4_m&-3@]%edI:?NHd
%!?KdoUIc;g)aoqmb^R;#KN(1G$lt1#YX'48?&CDq_83%bq<jHO-5l9%QN0<J!e79)]1^KBUWgG!s30/cF>$oIU^(]]%Y#Ons/p)Q
%@Ja/[J7f*,+4spO",rYi#Y]a\nq.`#Fi,$G++6*J##::t2SrR9^8._s=[/$u.[G<+6ZKbKG+C2A(K86eI1YdaNIXQN*&S^mS5q,`
%[%d;6j8EkNAXM>#V;Cs^R..$KoOhYmZ$Np)TPF"hTHQ3C>"6Fk*0P+hnNVQR/'230,98c&^1oOYQY_IFqs[_7IVZ,[GH:WkPCuco
%@)Tl)_*i9WnU[RpI-POpnN#_f`p8n>3Z],5<^I^!KB(>K(Ho4+Y?+DX"%!\ToY,aoo0hJ7>PlNp`u6s_WNQau"3J,PW-+TKQ<\?]
%EUsWJ.6,U=&)m2308h8VE:.E.mlhka]\Z$5BIVgjU8_-sqA&"`O@J#,!r\/#E/"hY1JH2AaFZge8'VH$HT*VSm^2!nNP'iaE?)aK
%)tZ0tC@6A<2?JiMB,g4E1iIj=$Ua:Yb($`9/p]@<M5?*:I*(lf80GHirjm_<&mNN@Hjft2M^>1NPO>/%Zhd4<^0BF,.E3g6TsOYs
%5q;5<[\#>1"4opk?+=>GpBC_;FW:]LndnD9+5_s^R^Q.3$XJ&X7+bcoV"`k0-&L>cWK@eAV7#Z1UEE.cphqIR!b?dm+k]H2?*<VH
%FHkeq$dfODaK>E\c!)q"H@!^)CT<&n>N0MflWsF=IlQR$\D<ZSfM13'W7r?"aL6`p[d7L[fU:OcA[93qE2%X"+RX,=8oA!R?:uKE
%bmA1V`sl2;;7(.@>Wk6\'oif;:t858Wgc)8"Enu!<O5r*LG!OpE[0FL&(j?Kr"'npp4,A82s5nNe_4O,oo."jNq[_Ki6Ti_".UBL
%s-9(c=t-UdeW*0@Dp!D5r[bt&0[0)/FdV+QQi!hoop%%sTV"bL`2J?^]/*`cAbQle=$#5DB[p2X=oEFQ&@opCl/$eK(Y$ZEI\!s`
%5B'LV\TUEhRF;[d/`#+$>T@&#&P?\l3e]4tDbj8q[>.1Sr;J;d+I)X)U!d8E!JmXPe570/M2I8+Anu&T;RZEu3T2V)q/icCbH:L$
%H'EUHP/Ut"cHOb3OEp#g1VP!];n+u7hki'&q=`7C\CsM*3.rZ+PuB_XWE!>l1A>kFV6[CaTK>*;=oEN_e[4e9C3h+EP$ncZ-Ob-]
%#!PTH-Z6D*/+D`m10%Yj(CY7heNHX]l9&`U>8QH:^&GJ)Qr5^)55dWi=$&]O^b[Y^or4BC#TT+>hVp=WUDC9#q!+to<(&Pun6'p[
%p:B'>nJeklqoiW(7QoD79XSd97nkVnX_sEL:XRUm+1bgUk@EMLPa">f$Q,.uSSMr_h`R[.@>od+T.-a[QM2JDIqF%Y5'e[QNk0_U
%'ET`-4R<bgM2#>CVH<PekU,l&p:\(ZJk"S]S_Bq;`++F+L/HRSHKOmR1+@UU\;3X$_\`K^D"FJD2!U"m<,33M7bs9=PVbo-Nr$Ec
%M@,t<"5?a9QWVu<mQ^"1bYr/_VHiqXHC8!oq3YrhfV9WX?k'c[e_&X`(mUS]rTHG@r'sK<5>or"p4_t6?_o+'UG/<&'/'71V'NHt
%'KGBpl++)A1o`n0?d:jfUKV9S&>!*@r]P^oLJb$nYOF+2^Eeb8n(3mgUTu!1q("5#6Sjm&+7M1RPJ^&q%D:MLm_Scj.[f*eqMe+<
%1b22VW9I7N\S.%]36a>M1NhP6chicL]_HHYZ(YpHUZP>cWPDA>R$7L0EA@OMa!=YEbV'3[g=>dBqi<2`;/[krDNB\;`]\9,3K)L@
%7QmPbSelVK7m4sFhCQpAmJ;g"k2pjcAg%`A>CL:%2JCT$os"/WfmhMX6fi0^['G?TKjhXX4r(i(#*/PofiU?D)"mbYp&*#]rC2KL
%3a^37^U@3/3.6Y]R^cQ/*;/Xro1IefeErYA9p73ddAYqVVg3C'3O?3k28*:I;%jmT%Fq:Z2o_fbR2+&H+"sUjL.>ejGEra*;.1;P
%HnJGY<F%upn+;Qb<f#(of2&SXe-tHX<BP%q`i/b%W^eM`;faT[G`\QkUi.<bFi>XQMUrIZFjDkDepX*]=]C\bpFtkbiu*"4>C?C8
%N4MY(YM5fr%?1Sk=u[uC?'3dQ4umVCb35rF-E!3WW7`4sD\CsbmY'sB(c@fP;HVDd<BMb>2u=Cc:P0N3F'(.+@di,@l#8fTmcr(V
%[Ge[^2?Z)X$X2KKPdk"*1[jI14Xt@<i6f2aU\]f0a]7:GYQ8lEIOt`\4e6:dqqOokD)d@&gYfaArYGEVr[*inF13K.4a11"UC()f
%H/R_O^;cO@DZ@H,UFWNH+6MDJ+$N*)WTLdC%B/$lMn)#q\aN1>mN0j\#LRi:4KsmI_2ggo0:`@*L#DaOF4X-nkN]Adpc+Z=SXn]N
%ad[F`+49:j)jTaIa0V1E1AL:j:-oE(HiC:\eW4C5$Z5P_nF;p#eJrA]IF5]Ok>$6Xc+Cqi0@=AK8n`Mh3.uLF3>),Ch7Ad)GM@;^
%LlHMkW6l(mWIrf\S.Po\-^TGUg3o&hoNGaC;js&&4XbufQ_&urFqNgC;YLahhA:hMEI.dX]XdAu.@85tO&p>O1YT%cO_.YblSpQ5
%VnTq$P6c2@AHO5WN&,En$8aoL>p(,)U_RKsah2=DO/2'Z6r)\3C[Z<E`8rSWq!DMqmH#TC*X+olVWM6!nuD1A\%4Ab=N$u/836Fj
%80F[b1gag`TL:H=cU+HN,iY`defm/EU.W;Zo]>4hD%4!nDoG)K\@s?0ledTCg]Mb@@(>5.UKQ'$FtEq!aOXDS[qF2U!"J.TpNIdR
%__-^DNe[UrOp]l8)o)I;\63@iAIilbDL);1%7@k5qs,+)FC4L#VrC).U[4PY&$GfciH<G?_R?4]cX^:b9ShP%h"2H9Q'J]?^=!r&
%H\;.J]3T+]!:6a3Hb2W?[%?+ske:decNAN0%Rq,/$K@oA@%r)*TAr91L7G9t5b`h]GBk"!\!c]kh"@>n4?L7`8$n\tVtGY&aNU?$
%gV!B&]kmZ3i.L.H6b2IU)"K`b5Pa)O[Y>e6]]j)!mbE7"&M;LrC^h[h8m%W/)9m'&;VVG*I(-2P')6Z"[s*(Vp@MsQR][XK9@D8I
%h&ZJ)L=sZgbe;tp4+-==AqMQdXDR-8WIm+c=`<01i-$mQG<'8TQT>8M_7o:_p)[%&A9QAiFUM.d'i;*e+$8kdEX1cI0W1=!e=H=(
%G2&,Wl?n6!T)Ehh2DoojMUpgBXZ.hZ+;\$HjsS469D#sgfN_Q%V@I]o2I9=8H1WhLk6:qm:EK5,RkYD6!kjbFP?^'u/D3!Z8*p/d
%rF+W7@kM\#IIgJ)'Z#"Hq`q9`GY\S'8+%dPM1Z$MnG32[ke]H)nBtUYLhseS>\k=/i@^\2C,W4q?6BO0&@hGZ<tDGfN8KkFEo&.G
%-f%V/iXbi[5gUO=7.UL70t2:QniN&oJhI'<1%_A<L.ZFSJIZ=1>lZ(<H&M2J@W5gHYg'gI1FM*7C+/Z3P\Ru/V3K:&XWcl>RsAhB
%XiRl%Nbt.B51WKZ5k;`F-3^m0_[9TRm\;9(f6\Gt_n#^L!%mEo+eV12*?)`K`oA_8cV152W3`NglKiu%mDXWk5N`(s4FdU,79Y*(
%lj'P$LBK%B)[ckS4hN4Q5OCUTkU&d%LDXgd)Yl(?k:#^N4SS.tIV;pTN=/\_ECGP9A:Jq,6s5qA6."SOrF9AVr"e]+)i<Iec[)CK
%D9"FK]i)AQJ>Fq"__ne%[oYrp$MABc+V5u:Uk\s9(HK@#la4J(m^6oH81N@*_(`U;6VUkbB(D97CrO>5^`3]'?SOl=84q:5j+_EW
%PdC9f[o]<YG/*:Y_W'g/iHqt#dFmtg@H6X!c&Q>VW:JOR00'TkHmo]F^_E4)?r\mRY?fUj5na.rLiG,7gj7TYN6[T2*(i]ILB64F
%`eMcFMD,&.(uXmD-d>[!q5kcm5FCe)jp3V2r^N5D2?IY[_ehh+nXdd<,tiJb9pYOQntI]/G;R1J5qpkqa6!KQ*H[_?o.+Ks\n6=,
%L<-7q_LSdjA:MWqK2J6GqIqV=76g!`rNu-E#Y,L6fhr)\I9FA=>@89[J8<E1c>?gCl5Xh"6MR>tkX]kN&AZj^T/9q24O=[VJ<q#H
%ja*$C'%TsqV_sNO&@qTWn[JnaVp-,@D/HLdgW-kscXgdNDu/3FZsqA-;DC*:58s5T:pYRak[WP>8t^`FZ?OV_Yot@jq[o(,dpq=k
%HsjJL%X0k)UYQu0Z>Wk)l,E.cECXA'E+VYL4Rh"Xrp`^5a`X@=5AY]\eBu/%cjTT"[=H!?$&jF`"(6VL>!8OC2s&%Tgl/8,hI+Oa
%<BfnnQ2<?#Pq-$Z1&FV)%llJ30SsIgDXkO.h#7qO.[s'A+lZ?]2Zpa(KOJobE;le[RE1hKA)XZiD%YE,cr+)7k8.[tYIUlh-g2-+
%1i]I])InCmJp_N^lEk/Xc04rG(M84E0n]Vt:uia,^>9@u1qm7c1pk\\dc\MZYMd<U4o59t2SJ5YOPBlHU!nt"h;,_+*AUn54Kl0f
%YN.`sE=J$<_jhJ`5irkc`Rj2O!5l;diLrm_=cQ;;jhP,'TSDk<cmKWQ)k7;jV2r2O/C6<reh7ij4:75H5hHK=a;k/%0$G>-n']6>
%"uu\.&@o"i3u8+=KLgk%k/%aPS&qK<#p-0aqW<%L>lJn!ljGuY%T0uJ3\5C0$,P]C&\T)D'LrS$$a[6+03J2%._^5^Q+1i77Uj\Q
%-PUA,,<70IP1VAMJt5bYX;#,PCEN:_<!M=nYVL6Xo#:Ku_U,pH[+C!):]^\eZAKSF)pgc\T"<V80O4!ITe_mBYLa'\DMF:`6*.bF
%\K"pu/eFQdKV;1&_3aeIe,!!m^*dY9)CCX/!3dr2+*V-LrdA3a__4Fe,#th!*WVDI\IEN)&T"G?<eELE]'Z%-fGG)ZWoa_Ko$MP4
%%mB2dY\/$D\)m@.V@!>nQ64NRS&%\d_%Cu'`+Ur/1O9j<H5<W2E?/X7$KLEOIW2(:Ih<nN>9`p]K_I*Is2nLSiga=Fg4>sb6\h,W
%jj.+i6?B]Mp1a/Fd<ZI3_q@]od<aX3@%mgXmQU(17GiE]K#^YE[(rjug[=6/+mbc]6i37`*Ys!!<l0/EcMi>JJT?CS7#M>gGNhV5
%]G+e;)glPs>7e?KI<$8/e:2DMJ.n'jHV_2k0/<+,bm41fW6fp2U\<jQ(CPoUK?eg>3'A*[IsZ8(PDJu[Hdd7I[H_RWEt(?hb#8MC
%-YL#;i.Ug,G_B)[SlK$_9:sGGYL:U<+lB\R2p=TPl*<gFSc)uk%IDM=F[EUCZP+V-2]c*3<1W!*PE<,^&V@b,(?e![2kQUh5eQ_N
%@>k`"M,8Y)-sR##Z>Dc%Z6t11p,b8?B<F%G8k_E=3T#'lfh=X.P';*,%P,^)UGY`K&8RU1'+mAq)fA@r0VEDS1Z(F$L(4Q(J0JF"
%C-WPs6j._CT+oWP@(m]]OK5ld.jKOlq&7O2KNfZ$>_`f&!m4"F]"Xm3cm!Oh?0\Yj<WbbPqa^[:Ar,/,b\<\IE/@Zsk44c51jU#?
%NG%M>MfF[VWe.dgQu(#Sp:O]),Sf,]:6,=DQ1opMq*jTobF;/@G19%o&$m['G;i'Yf<S&@nfX]6+HSL*aS@e4W_:,+*;+$Eb>54R
%"Ua#X5+phS8<^g!1dJEpCH2UG0XMAZEqt<=6GtfkNIS]3GVg)l0b6gP$n"\lJVsb#M5RO.'g$hS.CTm"n#(l$V>L7t7*6-/n\2?Q
%@:a/7Gi!q1/D4#j5ib^`T5tt,YH3*E6$O4gH>l]8puWB(l&36Qd$fmoMg<4^d_4lTra(qG/D6m\M[mkDj7@&1.Y#tu*bX*RlFGdb
%SpbJlfj]`nVfZ8"ehj7&SQTl:^<E\74Gu#]I,]E`r?ro9!&s&eDtc&'[C656fKe=c1Maj-%Xm,]+bp&7oD/,m74d9_QI$%tBT(c]
%+QmrDUh/on/VVD#9#CK%=6W0RT#=`LYHKW9r5Ct\_K1[%he(^uk2BG`HJ[M;*kWLSq3BXW%,,R2rH5r_RJ.)8CLHU[?EO+9Z2XdV
%qm,VmRAK6HG:e;tM/bE\-I)]9i#IMcS7:JoN$_<is*ri6$6gT@53JGS4Z?N#OTrCtX*+ra>*(RP3cke&C1/'6gSj_O%rC:7-FPZ+
%NQF=(._D"nTdMLs)BP"'AY+7[&UHK($Z,>:ltn,@QH_>I&kN#$!uplW1!EqN]?1Pi(P/\?B\f0tmE*aR+)TnLi28%Bas>1,ehS0/
%06R!)>$Z!/k$sacgA0.mg*R8OTfTpkO'5kRH0M+^9No[,ehe:DBB:BO.R9%[ZpoO3/0IL6c5H@k]i'6G5NPhYbf%u8-!0qhc3UEL
%L8^B!TWik>Nqe4hm-V\$/2RJd1G%,Z]UE/#GOX+J-MQ3-6u`a,f\JlnJ2&@**e\bVLIq3l5nQB''ND$-(-4:PVGLbkaD`[_jZ"ap
%n!0<-k;ggA9m.L(<Ij@B[$7YqW]llg;!dli$X?6+i#'oj5YmO5Wr_O;#:uK!?Ti^:U]o6bcGn'J$pQ_nW)H&@4IeF8(:(:U_b-oX
%8s@JiVGi_NDI3^LrdYnX<pKQTjKP8<RhZ2S`MGJ%\2\eEOs?4Ug(_quY`_-K7X8_0oTr02jb$F3#!:Ntg@WuCUum)Oolt3hUIi]c
%27JngE[m9Aj_A\`,0^peRKX-PH:dkRBMu0k+q#Vdc'h7OY9u18EIf?@ZdGR\q7$E51oZn$6_Ek:AVqfll(7l[;p%4f#.emoj?BUp
%o"nl;'nb;V/"U10Me?/MC`G$ql)4[m(fJ&S6-G?F$1&QhBhFpAk+Rb=/[$>&`(/A,E7.i'Mfp07*^/>OjQR5c]pNW&QAH9t&iR9C
%UkT*_CZ#mJK--?eq`Lt*.jBXsPa6MV&.?J=4BF('fV44YWI6M.0S)uk:8oK[Oc[o\%(-_I3+VW(P"3)UqG*fQd$)2rdsqkfPPXG-
%"?Nn%Lktojn?b@gcCkFLPb'lT>jnf:AO6;.CPb,+/ka9!U*OK*l5<.p`2#fs4cC`&qU:D#V:pQ5`I4M@c]%Vf%h/I$W@e_hFIfiO
%0q?R;>5`EeZEiC(Vcn:Fm;B+:"`[#7W^+HeVk](&G\QZuY+[W>7m[#AGp"^+&^EV$>[lfhJ`M_$KMbQWM?Hg`a'q6@e9mt`_7u,u
%(t7:N-j=hg40,>dN+dR<F";B'*b:&cMNbhhH;qrbrrcs,G88)5^hCj!>1&_*PE;Ze)ZmE45ZXp80HCi,YN%5WD].Y#:e<bIB;!HT
%*%FBrX)I.MbEV(QNFB2*[A#i:OjbSA5;D,s2.5E/Q^%NOJS:_Z6i/Ht8#b<EX>N,PQ[a%RHhgPlY3tk1KiE`_&mcMTJbP?q227X,
%\WX0&T'6Z?;DX@64Ot74s$oorpfL^X43s7p^^&WcV:6A53r)ZJ`I3[<9r&ufQL^2e)l_U37P!$(DbV]%a8F&*ct:M92=XpV\ZMoZ
%hrY[JXkn"U,gK^]SM\HnM'2h$7sV?(1HcVoML\+TZhmcB.fqn8i0o'EXltA_VFG^@OQVFYFRMDn`7K:b`4\7u`:L6/81&aATZ%%U
%.-3AUjVSoqb*27=8gu+D&?'60i4I#/N6-<pf0.+"Q^#8&HeDs3`#&#j[5SNI4!'7eC/!XgGT4SN5!dJ\cBg*&7Gcm7-lRNaeMTaZ
%@6`@'"S-X$MUaSuOYna#%`gBq2$[$K2>qB1&S"6aCmBJJe_]IT'F$X-LPtj8*)`ig<#SYXY.&IS32S[k5Uf+HmL7>d,<'$^X()1J
%(s@4]KblM1AHA%cN+E+H-nUBhc+`@`N+L*t64p^2@p,M"b@no$A3<0+N+FQ`OY=(S1*BXSX/q,"Q&ItSZ#Pm2BRXqglYPLk[U`O)
%P-P4-$s``:8A7%id:HU<EK&5,QLo-TeI[fbC"bQ"(F#N9r!f)JXl10-#j=uu6;haf1oS&l.LF4]JJC-5??2#^0BJ=2/!n_RP>8lr
%NU<>B?hYfbFQ'hQ9X9BYe2`u,7mkOkVYW+t)au?L,S]-4Pjq!i?=U)-qc`tUT1e??CZ1d/j.T"HK1"q/b*);gOsXh,jj'/Ob]$K^
%>[kH+MH1VMX/"s\MlCP[c%T>"#.`2*oFH4(hS?4dY#Dq;f2VM&,ka\piBd<]UGZL0+=40';Xp;R%WT"_>8S0erS2)R\u;'5:WXZd
%+H6bB-lS?ZWOYFFoRDb#6"K7W5L%>b2+2"6Y_`2s=ntBrZ-gL>K?22U9P'D2`;_'fo!rS$6"FP4`;e$&b&U2;1Dos$ZEd?GIoWfF
%Y&Y]u6P@C"Y9b\4B%QN,-]jVTR*+nV#*Y>6R*$bpUQI2V.k;U!Cc#9tNi?iX--9I^<gI5FMqoe6aND.23+AYONbG8DOHnppb"r3L
%-7d7oPtd'sD^\cam%bLd<gI5F.o+g[A7[cuZGoJb6WTL_.dp$4$m[@H>m@Qa_.7+:MNk*!+G[44AN?30Wl'9'=nsU?eek]u**b4t
%P@Q<i.k?fo%4*Nsl-X&V=nsgjP]!etRDX];+tLhkPtggcU2.imE\k1cfbd7\Q@$4'JkJJPb+d^<#i+Vm\C=&Melm$<-!=Agk2]DP
%@-0:^$=W)BBL/#H!OpJ&HIbl;L<@MtUR]k/Jga?8h,2J_W>JBQ)K:qI3p#%^N5o)DZg"Ds`YD!(X$;e9$XA.FoBA&f^!M25q!+WE
%NJQA)36GAeHH#b?f,s+USq'[l*(m;FrFVV$(XU9Mek^QT.CISj;*H%!$g$%eF(XrFf!@u):kA1b>'[<BP,O$(/?49Lc?e&;QkTeo
%27&nI;k=NB7M"h\GVh":B9S?SIa;sDeL8aa=Ptar=[2$DUqm#AF-i.?cOr0/qjG:s.*qcMZnBq9I`euFgo[.?XIo'";E9)(cQ&Nb
%:7:`Pjj+U)jQ99:C8Hp_I(64hb4BWP7O.6pN;K8]eo\3hjk!asnn\s3LXs[qek^Ql0-A_dMR+)@Z\HU:/R7(PP\5i^VN(8Ms)IhA
%dDpRa:O,,1VJ'C$)al;Ck83H^4<IKn1pW]K,r-Xm^K@W^TN8i&6LM3QFO3SHZuVG3U"jA2^?<0Q4\HL"e$:9W)YfUZ\^REs*-Pi%
%djC[(/lV^V,^7rfgR:R!!A%O^*Sb@k8"a6!%,js>!0ij7D)?IjUp9B]b06E@$Cp?B=B0JI0-F\qij>2:Ya+HmL6AbE#.AiWeWhEH
%9*/B8OK_`P`C?#p>m?NAC*6pmcXbb9n.Ztf&2JkE1@f?P_H(JqCb,ls?soJL*V"Fb$!Y,'a`%m$>4X9I8_=(HgN<BSKut\-9:3\"
%SR3m&CW;RBYG[Y#,%57K2sP,j[bU-"2]uN:$uB%nFYaZ=^q_jaYp)u\QLf$45f2*:oX^WI/\ESj"?.Q6WuSQZ,RO>VU!+nt[_T[:
%5]nQ?YV.V`eORIlr-Zsj6U68qfKr8pL[)>l@1,hoX9]Y3_A:.D,&f=N[P6>2^:=[Z>@:j2"&N']YU*E0<[;LtTiA&[2M?`80X+@D
%2b&t706*a>+CQetSq`E4jf=+E-XdBO"!U;mSqO5],;>R>XY[5&.1'4e`J!b,D!eUXX%:m+<5bn0fF%71UIj+XeCg?<@I$)?q<Bjp
%]NLFG@I$#8q36Q7+UDcb$!UMSPG-#<84_D(/3LgAfRc]W&s>0t@@rkZhLpQa+Tc3X$!Rs]PB'1TlUfaG)fj^)7O2e92G?/9kUDUt
%c^@W%2Ral=$RT")::^H4>;41Y9VLDjlm$(_3tf!u!U5?$YU0#*<[@$q]$B&lYQY6><fc/_'"1UE#Iim@8D#C3FsBT28"D2K8&?&"
%Jk<+PVbn^U@6>e:[j#7Qn'P\P$!VpbLU)S;OK]HtGXdn$cX:F]8D(e(i[WL%8_E#!lA7nK*>csL)hE\@B=X+CXj4B3:YO?PCN[(n
%./\$)iEDdhD%`%CY9@/OZ`R)TfEf@%qU:#M(dkf6B3Uj9%hl[-E37Eo(?,Bs'!=*`^jI`m>+KL^2ea'?Y1;4VB.$D(iEG9;>t_\.
%^Pl6bf+Y=;g"&t-(db`5B3QSm0S48GcF+LfcKbbfl9%F:!-JV,>+KN4X&/W9BI[h6PGgM2<J5.1#>)IR<%$X.*Ro)N@KQnfl>17T
%H>(!FC\?t&/coSaiEBOL9EMd&3l8;ckp/^;gnYfQ\2JkbTnRHf^90t&r>NP\3nmhhJ&>'NVLm-oMJ(X`YDatO"/DD@#qmhLqd>@7
%*!:6N-<1D>(QNnt7MUq<L)#_SST,5VNdWV$'TU"BOp6:e/K=l=A5qO?q2VqQHi*@/)s1tUM<97t7qAt-^-n@1"FG6]^a@XB_D)fL
%0F_GPXl5_"?b,n-U]sFYU6Cj@f]o`u]g+*%"'JofVA)4#*@[J+3:M9jaH?ds['%79BEqA/Zo[gne>.g52&B7W$.N=',d/1dj"tSM
%K1pS(UK9\;o?:lXeUBQUW_Co@Q&D]'Ap#[0\EhqEM+XLf0f0H%9JZPM<1(?H[<ihVi::TVZpmZ`jqfpq#AcqiflcXp)=lQ_!e$N%
%:msa8/o[C&XTdK0c_7]M$8Th$CAb6'6aTL^!(qC/L]N`6!p4-sW,\M+URE8C]N-V%*#NE99fcTOP1A!7ie7=`?(5Ot'4J3%`6aQ$
%_FQQ9Q;_[cid%kCU%1%8:7*l;O^uFIgSFK\rqG9gKd:%Xm2XC`ad]2nm$Aa0h>Gda2c^[k)`Wop-$'!)jQb2H)X)k=V1J*7`jJi!
%JWP^6W:Yk:ApffZe%<cZj1!hJZu$LQ]DU/oXgDr!\:D<@c;SCPEmjeZ]tW91f6-Ad<nb!N^!S]Yl6tpsVl>`#+`1F)5\WFT=t=H:
%^HF54oib$?<24<"/nnggT=/T7AeSl=oig\*6-+&3\P7%,Fp\jmi6?Ep#B0<Jc#3ol2"XDh!cS"&aIUg*P,j-p?Wi`6ngCQ6A0Qrc
%4"'-mTu4rNGCp.-)+0OPX.*.i9Msu&bB0%IT6eruBh:Ga\_Ut)i.;MO%M`0=AtpuA#k1Nf-.CR.*kATX+dKo%dj[3_52.O+csBj&
%[r9*"d^?7R9@5PH'\9U!C!FnR_.]uu"'-jKOZb&Z'\mHies4jpDaeVAac8b=aokA>qpr,=K\Hd\B3oT88t84BZZ"F0Drn5hhOkd$
%oLoJZ4nBTcXh\%!?ZQRHmD=9%Shq=Kqls$jS3\p4`\tfqg-N]@cI[+`SS'`2#9En2P8]IFe[g#L5;scR-+Q-b#2]$#Y@;??0DM\>
%F\>!,@@bD>Ti;cJL/C*433K[/L;bRlH&cZg.518QptaP;/?h5ur@#[a5&#<]0T<+$QkIT9ApC$?l`\-Yb2_rq;aWTNY-ktfeIrFl
%;/==6[o]-+<)8dR.n$6ln74boF"-a"=`bTRZSmp1#o(2.rm3^*Shc!oEpq.RcZ;e@X)X27:L028CV#`j0ACU:@]m,!Af#4T!f.\A
%2:_<6O9G/$)a)\YI;kR'BaiZ?4i]q-OE(V?X+l.d;eXfd%?RorJ:L>)=a2hV^!EJ[#ec3!#VrW5Lprso`Z3V2hc5t"HK)&@jB<K:
%IR%.R6]-[2dFr-X3?EuiXir7VWD#<:?fr*)k8MT9-;@.-<>u!+>2WeRqfh;#P#ZC);b:L\4]8qB=4PlOk:AJl0ZbZ,K/^1s@)23U
%F<D9a-u-'1rO]lL5o5pp'RX1r>#7MZomt#04e)@s$S%@k())dFI<c2MdkNuq]CQkLPpM32aQG^/>%P7^4H@H<Bjn3f=ll3C<W:cE
%9JVBs0=AqsX]/5_[&]H9Fg--#ePqi^!J`M[KDXGsr/G-?`P=<qCkkl5,H[ZU7oL5S<%*AtCbcR,5@.&AjcN:/XMW=S2/R(gC$Dr"
%>"Hk<W>\)3>R`qr;fOq0QQ1Z=M@1DHEY&@R0kLKA<)nIsF/(Q$Bl)loS3sF7Fg]k+S8/&j:L,e&mPNQG)Vq0YZteadp]4/`N)\Pp
%.`4OpSnBaa=BD(SZ@IjRJ0E7gd@VLY[P:V;ku"9X4b\*h;t]i+FnsK]AG>KC%Y7i<Xm;J+,A6j8W2JL5Nhl1'Q1oV\fHnOZp*\N=
%,-,TTnpiuMMJL3Pg-187\]X:.l8>kJ*'H%T:"ojtZFlfAJ\L")(=C=m%>""sIKN-U5:d+:l,,)s>LlZC7AAh`__8JhZeOSpm1je&
%@8;L%%`eiMXFE3qpa/k/&`19)Nl48D=4)ES8[csB.)-k/6-Y^),5^T1s-gX=cK`Ndq9#t!75nJN47/U]LQ,J9^<H5']O1+UBF)iN
%rK/3"d3C39k`2n`9C(m7HJ[oiT-'\[Td&6=bWg!hc\;!iO/gLkajFlYd.jW#?_5kfp@6)L+<=8MpKaniT19[%k&R!!s/nS=l\>r>
%)gF(r?BXep/:Mq,n1a*;Z]<knIHP>?5)oVoaobK\2Hl0um;jUOYJ%Z<+'ftA)5"(h>VX!Qn?Grao!+BecBf#CX.)g:Cu9%rNU6B<
%,;@b6%m"8DIQsGY(=2<A$(Y==hRQ]`0C[J\d#u[73u5sPC-6>$fW<-+R<?1RV-1'LH@l(#FKuXBRMWIDSI=@m2Y_G']+l%(*iemT
%Ult;0dE*RqARiq)%NYk%E0<U4-TB:`,/I7W=Z7;7`@RE$-u#TcoO[LG`o[*,FtI.uh0<'Qr\WHe01P)$,*M6P_G?ep.`VmV-J",+
%*d[)GY\ruhH?KELHU@A6GI)^)7U^(d,e+:>n.'rhhk=[S4th(J#s(DQJ6Im64sDm<]sCILaa5N*mD<<#Mt[hkdg22q6A&k#mt']4
%euQ+;UAlGYW0[>8WR!cp)dtTc@P:MhO4X(04%R_1$Q\f,h$sKQFnft%m&JjS^ePLqn:+$9L\-YOmU@t^G-:9m4tL(-Z:sd?`1!7#
%*\b+]9'<PC3r`E%1=*nrrDh'!&)+gcae*Z2)'=sS7.)E[l[(@^e)87uVg4[+l;/#Pca'bYo?^UD^!G,qXO^W>3bNX>R,NE5p>PH4
%O:8[$9/*o78(_K95u26\(d7DsSZ,3YWsfm#1c.(UfH:b(V<7L:"Ica'/Pq2eVZSTp1&YG@QWaMB0)0(8L]u!An7V`k.b"*<*_6JT
%CEhm^NS)`+pJ"F1N/q-R$U88DIG:?Y*jDaWROY]$^g##k?OiCkjm$5/*o#llQE\aGno\X#Tr$j7,Lc63HI?X5\^A4kZRg_jE3f1<
%GL;Ucf+j^MkV&6NDW@lfHo[7a(Prn`=Cs[+GnbrY,Lk`)joIDiX8DgThg;Xuf.D)f;6Q2,YEEu,pl(JaHN&%@"(*kjmSF<X)n9JH
%iP5O6S;;G/@qo?FhQX\f2<^dj%m/@6a^tYB^iplh[CS5]+JQEUOt`!%5cNF\^e8=HN?,5(SfBBgDS$?0XUiaR<mf#be3`;%YJ8k*
%=T7cYf^)]ZSPQD\LhOW;iOlQ7*3SQX2>d0edDt1OFqcKce$6Yrdg=mbkCg][hg`Uj:ZoI\fB@('%=bH4^Am1G#"35'7*TR_fV8g*
%@ick(8c+/0VNI3EU<?cj_j+?<2$Gf,YX"Zd/HO4>\R-InRfJO,o3HT91195aIeVgcbXAh-LMq7$TKcgXb]h!;2K\;X[h0gQ50)^_
%:[<tIkC!kKjdq>pH1\5/7#\584R9p!pjOC@U!3Jq_i4!9nm-!:N8J]<U\4gH:GfTOk<0F1H;LqJ=6O;KaTBBYF!%oQ1gcZE46@\Z
%++XPu+S7QW$^O\iY<_91),u)lfu>/oi*P4]IC2u%G3'/a.0[=e"kl9*!9i?c=7X,ag6-8>i@P*cZ5'<1-a4b#;u%nG_L*Z<kD7L+
%(<>e`G;%;me-YhYCh\HEmCs7\I/XZ9Se0C_*E7=1NBquVTjbQ)H^g:njK;mikQqiL-Z`[VC_Dgfr,W];aS+IoEUn>#mrA4OBr<mE
%gNG\jm!!AHRXLRaTEp'dO_Em=('laG*(t=_=q.F.*E=7MJ`%bG[q]f"lX0rIRkH\1I=H;amUQ"\M@>l#QR-U3q&8,LleE$%-><eQ
%Wm2)%-$V'N0f76\amDA(f$r]Q<h[Rgj:e_[(Osch.r5Y=X)N1YiL#/7?q\unF<?,%@[?Y^ZMfG7i%9"WNCT[1'S4W`rXd*&pDlA9
%anHV^h16WnQDLYN$J4G8`l`MECq1.KmE`spN&o-i)[l'$!sAZ^BeE?kLXJF0Nb]3SRe\K)X[R!3H%q$qPU@B/Yb-qN*b^Og?)k.,
%/&=_]m<8rP97?3-2.kL$Z[6hL55Y.&CT7.5]uXVH3l"gk+gTnF]ec:]d5S:&GL,(!T[=T,&4MN^JENul_`d]XZKt`D31Ys+XLu3[
%Z*\"?6H195+*YOd"ftKOk1Ni(1UmqqJ:&n;MCsC6XOSB_kTA_@_Z']3C\)=fAVgQj!Z9h2W@`W0=K`o1(;W?"(GrZ6+8eHb[ipC_
%&r\Bu8#Sksqua>'e-Xm;7$7HQ#UD2mpYo/MHV6b5&j^ilYr)3)dNS0?j'4r+SoFj\cO6q>Vi88^UU/JB/)3i4M2Fr&MP6:ShbnOL
%p'%hb'D+G%f'7JbcdCSN-!C_8-Q1YAM050PMj-pf[r[BAD.`L#=SpNl#II=!3EbJZ^d@P*E8MXb+o#+&e,jWU9Mg:qeMEa:\gj[^
%4;$O;5.Gu86sou:!-Nb&W5U!KV=JS'J-b3NR'9GWBod:Pn.=CYj!m1.#i#t,-`(G0(l!FF6SR.Bo#CEq%X!*tVok,ip7?f$2#9ST
%6*M);eWCXB*OcMc-kk"ch\)K$fc7._X't2h;>\;F(7FnpI[d*id9V_="=HAaN=g?<D`_b,]u3;.o1)n/A6TW](fM9Vb\Z-]gu2Ji
%=F+sG"IoAG#5_'D:\SAR6[S\bCS:Wi=jW@fD%3Rgo*IZM*rnNVoH,k+:XWW]El\Z]a'GL7H&1PNN<bRGPc>jZBUd4OUptD!Dp8]7
%\_pR6[,G\8m-2:2eLqkO8!q4X"7rpH3-`(i'bQl5;ACnAllGb.IBA^@qY(4+j7c&W4mf>GJs4-AqQTG;3JYqD6PdB_R-%R`a8&#P
%LX_?%Zf<B\5M@ikDS"P\FA#7T!_e4rjs\8Z;[0C4+@@lta',iUpe@P#Dp<J]'/0rin?0<9!GM<=%UP6#).ZFu.R/?IoV=refeP+!
%en&3V!gKjA)>4m(5Rps&>j8SV:EStUn5[t4Lfb>&(uN/f\,/s/0@,8uk9fUQO,]`m[PHktHf.4oTMrq[hm5KYC"d4H!UCq/^a!L4
%C'eH9mG`H(I<U5u1Rm6RpTiKG8i2JK5+BS5%G)"*L[l6B)&E'm0qbi#cm]+?nK$i9b3L9FHuq8GBkOciHURr^C3YQ:j2[@4@/Vl<
%)CLLC7`5h.pbC2VU%$Jl+^b7M40h9QYghZFF@Z:oOqqAO)@b=:(>TJYb,0laGc:l9/dk<+<TYqK^$ti-p*]EVPcb\can-Cg2W0-e
%O!k`qV*?"E5D$FU);5[]:,:ZEK)(Rg29OgLk\k<M#LD`5+sNkq0?Os%/Y&(fr.%u*%*#7&!L#5:-@qdK"KS0%&?BX`?p[Ye0(tDP
%itVfqTS!4lD+H\B85PCD)0<:OGF!CW>_dP&!F'!s#657hJ!MIjS?$T7F[TQ7>m"cGLR.Ft.hR0PUj@+)%WEm-@l?`N?hgJ3HGt)C
%7_\Va6)A^SR2Jd-\&<Xcj)3TshBoY$ms1!j690.O29%\0]=L7'C`,HfUL[1$gdHhc2WtH)8A]dZjF,>_=:kT7qH7;ne>f3DBI#)f
%mHM-2s%`9D==3^^"+TNSEe'rprr[1As'f5?c)M'8!]<;8FqqBU!+0s6Z0ea1JUDC.#m)(Ge:?u]MOR<WGN*PiB[YDim[$A7`SC42
%^?@*-Q")(Q:%T;YKMY$'>6sX^DLd<Jm>,`.>D6uo^,4Q_`sE,Ji&O4r^r`*_ORK/#=N0IICsO&8*fYHTnD5^-*V)cTg`$CF4<jaT
%fdu*kRU\eT/=h[WNcm8]lNP^P>7+#QRYuFbcOLra#*nlCb%qDikmmM2L0GEd:KP'e9$I7qA&/[s)J40klBf=tnKh95dQdj27K$8u
%+-g)c%6`1M05pm4$C@Hqd<DEtDN6>2Sf$EA'HOjM9(g/b>R#'jR[_!LA;%1+bgU'gW*pZtNPO$5^=2n*b^7te0dKENmu=5@rBpi"
%/m3R*d?V4;HMn@!J'h'+A:doE2'R!0E^b"O'7BTN'\n#$CY7Z##A3hQK7H2`\[rd]A,[>HHH*Zb\sbEj6N!R2Gr!n@>6RJV+N!E[
%%?O.UVcts!'Yjp#I`TAVrBeRu/sO>?N5Xo4#(-[Z9rdiql,:u0n6;:tlhsukj!YjX>Pk\tQ]:];f(P$Z'#C<Vg`RZXl-,$:9+XAW
%lC6.4+RX]Um%)rG'K2>iSrPH3j1Q7``I#m@>&kKaRu=G6>is5SlZ$8ac*C_<deM4$<iD^s5p6V+HO8uK;LI/HDU?<A?hT."#%hlN
%\^>]!L<G7,JWltB(n=NLP]7:_aqV3A9kI4C>1jT)G!ZjGJkuqQa"*oL(i9ZV-M:5fo5C/n!3b!LjYl#MYYJE+Yn*P<MC:<55SXp;
%i7jufk'#:&S=:Xo-&t]XGQ^'LYQMc5<!)MC)'B!c9[5_@5=K#@P%SYn*2?1K:.GS2!VZ`ZB:m#9/YVIJgs[!]FO=0K>OKf\)oOKB
%AcbUARUA#od0*@#E.RpH?2<H:1%8LZncgBf.<c"R4;)=6M8fBn7k#kan(N8E!;''@I?V`JSuWl*qfnB^D:9kRUN!'4b>?<:pe&qE
%poR:=nDKU.P]ZbDX&uNpk<;7/?/6enN^0Ab:jb8sO11BeRXP4)$^->d>8W1k3k.Vhe5rPiLI-j1%-7^=PRm<CJ]HStiup`)U<I)?
%%%XL8+4\sF(IX+^j>7_<QA\QI!"UDAJ0-M'lFkufTKa[P,or]Ja6kMJI`>As;T#To^\B;u^4/n^@7ta-lK7LjdG6Y<VB2?fDrJ!e
%C8E86ZirqLImmr;@$Aj.+iqY$SC8EueY='_Y_*PgW./WnoTg\"j&!"82C6ra)0_-gjD2Mq(Nq>$+nB.qqJE.:SNm[4B"nGn#l?"a
%_]He"!r&`pMON:Khs&1SD&XLN2fn%&"P9&VJa)oGO2-e3qZ4p2D:>n:2R#&_D)@3ODopmFrX$,jhQM^2qj8XUGdZ;>(\4BrYBKJC
%O[9djmdZ7)g[,_&;k@F9Re2bbp1Lf;5!;ATWS.53XFV?lI&te:s+k!&Z\c/bs6bEFK<.3PgHaZ"-tMb"Z77o->6)54V;is:$M!DG
%cAl?Qi+tot@AE'DI$4KfeLR@q+46"0(^m!mJj\sOAKiushcj1V&V#ZZ!)PKLP[/P'?@LgEZn*WU#&]'6D"QfKrX%MTINBgG?f5QV
%gjj6P>B"mj8rE2"\lWqp<PM@,[B:jH1u/Oc=NrTr[BQ`eeO6mo]:f"%'Ac4QJneC^5IiMts(0s6#dokpIl\H];'2kgl*g"iksb,t
%$_6.eU5(%l`&eb\)OKKerB%+HHn^Cmj\9ZM2]G&?bR_pVTVpfQ>4R1l,2*NXVeg9\/g(&No53`!W`1=V_#8`Ml!HV,OoK'@I*.O8
%J`bl6b?N_leSO/Z_R36e;_>0Z]H8L5IK0-HfCh,%8c3eJI_%?0A8)r4O>ZmV!YZ\1_[`GJD-euikSY3-8hC-mAVbE=I5p)J(T:H=
%I.SbTEqYukZ.9AOX<t$"K!F:#gmdSX9kE.ujeT(9-5p2(6M5,Raf4\gO^*RgU'[kK!d%TY'ifHt;.><M82jhn@5Z#^g"!MEB%Q%!
%27l(C0Hg`enX85!<J)g-E)l>#Al$KH1>>iP$iEL$<b?m>E:t#I?R/#c(llk\D0DCq:qLRp:)cU@0M`\Da2[rB#&[qX@ZfD_S@<+/
%@Zdu)aMkj@ctfin-p"<WcsLZ,i,+\iWIaLaXr"Sh^aPon:'?LW0T$d%8"BkK8t\,13Us`Tp40YS>Jf`GP9qr]5WPtu-h!L_<;=?f
%rc\ePd"\-!:M:mV>C;gaqaFQ`lQu$[GOo;JQq+=_*=p<Ws'_<l"kMIPS`t%(\De5r3q#*XQL'&-*[ei%".9PZkZi%Ajf1Q77J]=4
%M*Lh,dGq$7"/d4_@h&/'YDX"?gq7rm#DM4RAdStZ=nO*&<TaOdWlqiG)Q8:6Iopkm7glnqa=X@ieN=IXXUBHdRMH8J@/URP4#$!"
%O*A_4TY.2B"hip/6uLL#JpR9"pKPWpCO_JS\&LnA(#UurUDLZa&_7`6'fE(P8ec2Or$@XNH>C7^gR*6/a0T/<f$$f@;#7ampW1&'
%rt)J51Di6eiDSP\T!-Q2`e53)g0m6'DkZ(QF?2SjMrnA^Kf@)4dOMQn#Wnma@@R&PW>%WVr6kjCbe)ILC_VP%"51]8+d+ZF54)ne
%)oZW8"CEbq6's2].$UT`Yb@2n/EX#!]jTgO[BXNW>>$kdA%XZa!duSQ.7bo;cpkQtVZE[4CRU7o6G#N3:"DkYm75u%mkjS:irUY(
%@L*rP`%5/&74W2b(gKGLTk*`n4-beogFJ=G!CV4>d+8EIrY*-Ffe66o$LY*K^@2(uFRXbrVs+]CA.[5W'W38.QCibXf0Wc^RY4%*
%YB);F<@eL3ah&<h)2htU+0Ip#M@(tSOA(kZX&9L,.^C.SeVW][oK;qgc&*I5\g7-VEoCYLUkK:;=t:'Cap_`6cX2Xfp!X)A6+n$>
%mp@hGAtJ=eK"0(>]n0%-/74>i$M^bQ6'0i8I!!`V&d15I#&g9k.67RcA.iKN"E&s,KSP89i"i:XM0#q'SMuSelW9Vn7IXko>iR((
%d!FOMb",3X#otI4BF09\Pm=cQ)TBc`(^-Lj758g9#N=TX+W?72EiEu:iSMa&p]o;ogB]tM58`]sS?%4P@0HVf)Q8.u#"isI`IG35
%V6HC<\qdIe]qG[bh?tg&CK!rBGpZkbQpb3o%?G?3C'P+<[AbJ^*rdAnIG;OHB5\4"2^opiBEQG`b!m]VG+iQY#Ian_L.VVU-R*N/
%aN?M=SED.]?/Z^b.EmHgGku]@]h4eB_/k4,o4H:3?kU7lDWa+gSeI(9(um`X$7"=b[nRJZ@5OZ)5dr:o6:!!J;(pIhQ,UmRB]JZ9
%_J8Y%LZT55$T704An,rF?LjPT#b3CF^A9^tS?r<^2!Q2'@0'(^r2L;f_U+%&djSZFe%YM9<TQ&Mr@;Q"DBZjJ@t@;N/%MCgAA%cr
%?.>d^Ul#1^\H6H0)![O>'Te;_-#[h)#q&I9JoY:L>qph("E'W1PpZ&2LdW_I`=\A'#IqZg$%#-+Z83X>Sf$5dr!q$tJ7tVhpiB=;
%=E!D82BS%lET`JINfW[I='mT4`$5/Ac:tjp1AdXF;OQRrk!ipJK$6MPj2K;U:X.*(a(;Jl/I]G&=,bB*%BeG\_iKgFj:D1cD]m&-
%[dd_i/(bkLK&(rD6'B6KJ]"tsBln+@fDhQFEO+kW7m2#J1'D9=q(ZUp.IbV[pOsKm)]=5Rq`/"C@>i?Jq&n`9)ZWqSj2QUt8@R`+
%GGWKWUIi(k%H.!/`GUq"If/YSUTWF,MHeGL3;2:-`56"*_6pmOE=85FIPqDt66jD(._AM]XnpS[nCG#4k=jkqVbl8'<8<(1Q)aB9
%gla762RfQ!(Fj;g<0hL(XocHU6u`7FG+mn2'_7hSolKm#Bu]L+`@V@5F1_nBOn6C<]Wh2hnd#a(Y>;miH]]fgkK?u'?_3MD^5Tk@
%l0'\27)3:U[Z9Jj=K6NtL"1[]qtAUX5:-Are'C<0i5V4)a;d(XqEp^"02<D:f15_b+t4hF8VZ?%)h2Hh(#$jn^:Wd!KhY9J:ntcZ
%n8D>`@^Ctp_quDSLMpG<eX93\eDb-&@9h*n,ga^6k(uVXp!'k!A)Cl3pO8n4'P_W(66(/Q:)Ju^IB:afp+QY%W_?L_=@]Fi8![&E
%"OlgNmpLJ_&k3m)E4LD6PFp]Nj#RNka6efK%*\"d$q0WW34-p?+n+uN*S;+Gh2"jE=QXf8>dWNOJ`-7s79h97OqD#%ra"9':?/tC
%UN_FBh(#V?FD?0S^qKPpZI"KtC>sQr<to"CqBGoTk6Ljt)nu47BNgNl0#ffuR*\2VJceBXL[Fr"WUNWIrq]j55;DpTpr=KfSu?NM
%U<B0pnDEHZr:%r>><SK[jLd_,:FYi#SL*Q?Y1mC)<O1T%Af.eYAE@H^3foh-:WW)0G$T2[-bJq.s+SG\*S>A>:VSd@_8QB+?R`_5
%]kOB6DiGsuFjg6"pA(8&#Q.)Q,s.J3@=_!)]^JqT#&EYKN7f7I5"EX*lf-hB^PI2E"7=5bY*W^ZSh+6=AGPD2b,0nnW14ms.&rl-
%`@4kr=7nLM?\.PLGm$B*T]6'C7)R]=]_E87i3D&ZkR57Wm/p#S4j[AT50/U;qG'3&Si?:$r/h#<\tGJ0cSVr=@K&a\Z+=t:V=g5r
%p11'O4;6L/)BT>jb-_(&iB+C21I9REID#H[)a.1dM'k'q1I5u\kHQXeVL94]q6Bd?l)`>(I@OHSLR>W-SdB[X1+S`,O$6O?C02t.
%4VPaB3Orchb!sE]?2.+Q7)&H$W+IQ0TiB,chpM/i',A,bq6?*^ohtLO]%]M:>q$m`E7"m>-0[rfmiT_k$."M6:6k<Bi&2Bh5_$*5
%pS.>Ki1q6r!S*eKqD[I6V[\Wd.*LDUV*_%R]M7Z+dC?IF:Xt558io*4(ECW?Z4HPlQX&KO\52:X_emniS=$k^m]M=.$8;H&nnEsZ
%G[E)N&a8#[/4g@JmYXdjBO',[m5N^ZM0F^ZKfY282i\!Hp>R<(s4I(p]08RFl.FCIDJmTS,!M1EQ3^.a5A3=dLrL>SFn1@n7H'$h
%n#LEfrO<I+0Q'h2)C;$^$t\k\'LVr'n;.DnK=';.YOn.+\X`ED;ZfffFLs.E#]?E\$u.]FnE:9HY"mlo(t"MfPt2#l7I,#i?aM)!
%Kg`^Qd2MTHH6cQiJ\G*j=q]4D'`gbNd\,O+CA1X=\.nU1l4L4_b(9VnBjQ*'7F<kTD*(esU*Yr&IHp]#Zkd7Bd5(TOV7EmFD5^K*
%:1]8Mi'PiVIE78rISdnB#";WZ?F8Qh7B<OC>&]2YJm?.HlpZgti;IESV^0WU5sNR6rc9Pn_p67d&EF05Oiur!A^T4S8nt((<`hh&
%To;M;F021Ekj>DTXei2+GS/:K=p#5.-'9_=HYUu4B1,BaAJ#3^.lrAci]d`EQ>m7sTJG[/#X2Q#[%I\0Ae<9k_t&1&aH_oR?Ro:m
%\IsgNU1d9nMj?c6GS.I$+=`87*/59C:$Y;DZi]tuJ#m5$-.QHTX`JAZi;V^"L$m'CX'<Oaa)"__m%o8hFPRF:SN$7&cos_g7dF)g
%NR`QQRYitro0!]^=54-Y?<-=I<7hFC&MSm$FoiU&H'PL^mkA$2a/K=mD$<fl8>6h9mR=o^dE5Ps.53k"k[O^4T_7G85i."ndFoE?
%$tTV=6=;dC.]QV=D9chJl[ba$kV==t/R=JOSUmrf;nSK<.>jGEp@e//.p@RdLGQ^Wgu]rX-'9^<7rT$A_,qQl?KcGM6su5J@Oe++
%Da+q(CSD[`U:%P2c[k-ai\Vc]P\R!^T0"R$Z48(O95=u"ECF9&On3.X+jfN"-6r+h("):o9CaQJYXSkn?Q1HA!"@i?-u(>Y"FG)D
%o9E6CU14ta;1jX!1t^.F16.0Pa15])*nG/L%*LfdGrk[ic*>ZBT8G>W43f5+afGeqPnd\6Z4_Ab7%b>#/!k]rLAfpElZ?[dLGMGe
%q_PfuJ+TQ)RT#,F]Z;26"m\Y!%.R(n-XZ(foR6G77$!n_Rbo1U>Nk;<9k+!Tb#_m-^e::/S!b>Th')Id%XraV'9g!l7<nj2!hpob
%4dOJ+>>%H>UjM3UQc7lk>P.kR>t&*#T/c/8n<M5m^FF?Rj^?cGL$^Ua:@&YLX7lZ"^M>S6_Z.Gg\mSIR]<]U<qk!*8?CTlUIiWVu
%nE!9n'n2_i_*aS56PA06qh^,,@*#qupbUP(?W`TX2Z$ZH`rVomR$c^[7JBT#ZO<5(-.ZYLA_pk9]R93o^7sU/^*LjJ[b5pFI,Dhl
%[p_IRkLb!m(g$P55&Vt0[r<,<iNIi>*IME-Y$HO.#7F@6n;jasH4n*,m75N):mE`G:$SX/.YtpqgT+_^"tffp_"Z5hk[&*#rj.-H
%Hp<CMZ7n8,6hGJV<CS]f0*AAE_j.:9lu,8P_qP<_<U_!cEH$27!,ha?j8T7'8G.k"'Y5+UDrq]b10C%!!ki3W'(('u-heC48So1g
%nr[$DQpYh^UM9AQd%m@>KAUE(0_he!Sfhok.g*/!i*O>`s-hlfl2./qbeIT7<<oj%(Qj55a$VC&aZOlKoHHg]d:`>VqJ2`?#%OkZ
%BS+$<KcUk0+M9EI#p/jK;aeB__oeiK3>N(F-K8AP%)1U?ieIP5b@JG8I6qr>_Jr4s[!_(DhI/MF%VK5RlXoPpl1cU[Zc;j?7KoCW
%4QK,oT>QHE/jhHg/8Kp2BWmH"j:h@0-0_?\.JW&9.rm"bF/;nfo'uJT__P<Ib8k;L::$qf99QgVA$^!/o(rqD8N#phYir=UOaN3?
%:PjQ3ZLHdLF<6eQ*Pt@5Hn0:eC5r/Q5*!1$JKRT=g^3UTW-BKTQiDuMT*qijLbR43)33iB=F0g0qsmU*5kPi-nDO@7*d)WWLPd8_
%Sgmo6:G/1*)D56bkj60L0?:dimk(d;);`Cp[8-:H1Md[`m$]9s_AS*Z;pQ`TRc3;E[drfG/"Fh*EoLm%TlGIC/$-0@IhXEF>6ma(
%U3_Bcdo^O-'PeL_Y__!X3JOH:_Hf6WkErfH^^O"_/@k('j7XKWVD:$L`&hb"(mpmC_YTfV+B>K>^u).j+Z;F5`go2Nq-#;g?(6),
%O8cf2*OZ@%Q/jIan!J[PKCNU:Eg:C`*Ijf&g2,:m_%Q9,3:-n_/GU=oFPT36-/si#Eru`7Lp'D4b[MeBp`DLi\8.@c0.1JR9<^g3
%:&fDV$'pB#.YbWf"A?ZLgu]pr/.l5&fD`[,$'pB#cQb,KJgKE7,jbdK/.l6.S!usQ7"!D:gd$Jk`G$M&`n\#+i4h8=?_$gC:AYj*
%rJT/(`G,A3["!)L^GtVq%]B,CV>%d?3:22&VcD8k)DomR2]KN\p<9o-j<n[c/*>E):X33TJbukN28-<6!X`k`?fVVq'ja;<s)NQ4
%2#6qh>ilOj)c',]_5KE?Qn&?]]3skpXV.BV^:#gTM1:e!V`YkLG9G261T@S'E#0PH(6*sZ`2LXBX[8)XaX:4LIm"iE6!E_1ict7T
%@$b:l/l[jJ&o$n]Bn<(m?Jrl7Chu"dpjc,N?>FZ25&+TYXi63@COnCR_KhcB`=ij*iUsJTA28mt[Y'ff/,I*H2#`O\*\4rtII4$D
%n5pbBAiO.QI<`PC-#9JrMtZ!fK"gd5.3Lg:*\Wb/G(6kc/Ni1lhWtcO0-Omo[muSiKlVKkb;Qr`.k2+#posD2&'cn`d6GR>`bd5I
%?Y*;PA.s0mhfXR('u?;8jE4,0hJZ\5%KlHZ;%#/WC"DX0TG,Hjb:qQsY-Q+u'%'sq#bPTsc1/<327on?qs!=OiS,0a58#+^$mR8:
%d(=pY:,0Y,:$Bk)+1kQd;p!+]#cA^:6Yh;FFD+1'IoJWrg82^:*NWN84+M!G\&)f&;R;Q,0IXUSc#.lH@-3V:JNl5^5+IWbZ^i@g
%#puA3JTfC#!4&-ke<'oCXE8W:<KZ>#LsR+^>8&@EYLI\45A:p=WTu<Q#d/ST%@;pOL/b>:2OjKaL/SZj*\Cp`*A&P<ZT4'ijf[*U
%R>G^(I_h;\/jjPujeHS#$u0J#gHuk.(aB+Q1+0B!&'Ip\?1I=TiGn>@M?B"pJB?-FaQd;>Aqg=V6;1o3h$8LVs)pc.mcFs[k06L]
%3s)QQ3*e0>gL^V\9>=&>a<n/MpW9X`rl8ODrJuS$!4>[s<PXLQF#H'%f$pT'fhc6@r!Q3))jbtZ/H>H=5?=3dAl+EAmr_uK#J%nZ
%oUO:ba?Sta!:RTT/H.Y?K>--R*r"dE/F+8.qM`R\V]1]4YF+JBcUG\=S('qR\/(WbU\H&&@A7C@"<W(V"knN)Jn8m+%cBe):/>/\
%1"W+pINO?::,e!5^kZP-d)LEs_eCbQmg$7FILna*hV&$1ZJ7RJAlm$nH!9FPpobV->A'-<GVIS+Ii+R[Ce,frYe.mX4f8T,?D$Nc
%_m+7N;6j[@&.@i^Z?]Y'FDr72kj^"1gb2,!:WGV\!J8Y^g3`#3L[Y61krcpI15"D_b8][QpqH3gVHt<L_GbK`/J55CYs!FELW5:)
%GRF9'<m4jJVu5+8pB=[:T&2VN@kjL1rXAPI)1,kJcP\P)fNA;'e6h.I!?`dR:459+rm8>h)X:NL-@Oc)6/r2.bXHE#"96UCJ/^9>
%&;1EY1?;b-l;Pr^!t,GnXr$r+U#</:UFKiLiLQh23F=t%4U0K:*ujm[UO;&U(@2P!Y73X?r;H\j;SI2umOM&V^%N-`jgddn%TX6r
%-j"l%QLgCsf0"uF[ne4*I`Yj;9r)_qV:iNQ57G#8gbE9T7q.U2/hVCVDb>;%Ni_Zi3N6>h/&"eU+T9?j].[L5'98L..\R%\Lds/@
%FeGBS>`&%'T+A!Im(g`B2`PpaZp6@7+eC)smS3&(BYh@?+:jcVD-3]Qpj)(6d0C^qg_QnQA7O,1dEdGg3)<?R'W2:S@L>c[VeI`P
%7jOc)h'-YM<7e*d[r<p(?>Oi#'L:/K%BCpo$P(jgY2u=Fn<9>M$*;R]?!'YcY*F)CCsVq7%P"_+pe#K/(>]+,O2#;ZCa0?VTFCRS
%.uB$&cmM(,f>(7'i"hj!VfBBHpCKdn"i=sIJ_q(u^XZ25UX9op^'J=,&?nDFr(2VE6/ZpqC2V[(CCFR11UTbe9RI'^32&D6Hl%3A
%\Br/]qU#*\iJo#5O056%/.:<M/De%GE]/d'R<S][ibH](a#Ybr*/>'6:IhLY$I,;oX4\"VXh;!V-k@nK*@`EuPSQ&XrH5"K':B$]
%h\G\-N[5-@,jiL(Q@98?kn!Qk:+([;[@]"!7!uP[B&$2-L.,W,I+ZpU/5Nu?79C].oRPLef)m'W?/&(ARaHK-DljcN$^rPKm4d6O
%LMjrJFOYDm[h!p<kN[]CD;\jnJ&'2a.prTBXN2M/o*7.pNXt%KB30%JNuW>A/Su!m2WX2N[Y(aS)nB3;(6D<2Id23iJiaj/[L4W(
%XJH[H[Tdjpf3U(`Hr&JNO'.SH+C^q^-ZG,N;m]&?59Cou$QKWWFh0eIi1W7"__,b]'VWKDb+`3C,"WSddd8Q#%unf;-dnNKq*\W'
%N4`PWKii24>XLcdVt.s;6NTadr#s!>2?&+f1N"dn4gWA$FN!(OD.N]FJrX?9-iLm%Tl9lsI%.-\6J'*X&UC';jDW&K"rk2>rC850
%j(ndr[O:)'ZR3fJo9g_.W2r+^`_W&_O/(C`==J:$R_G!/YEDi3kX^.f/9(SmfDL.kH,W4Fl<0hYS&5p;*^q-lZ/,0,s+&7:T6%FM
%C(a:$j;Zo0e8mI4?:>pQjbIFT[3tR*k7NA`Eig\V_oS:)Hqf[9_+q.N%P]m,!3bYfnAT*X(eAqIj7)Ptdorh1;<=8B]d*j`AR69/
%HI[27^4OWN`%2@*Um""i^@`aJk,B3cBNMI+HUeTKHOXY&)n(<W%UX0i?M+.97)]L0Z9RfIfK2:!:^YuI5Z>.E;B-J1dF8bmRdUZ<
%;OkWGh]a^A`<AgDh7+[K/mem\/oj)H6`L$udBo3\+p]lEUF989&X5oIDR9@OQUTiq)5/75H%-2/!:"VE#F?*>#a#1;9*@oWM!=:S
%"@1MTc>P:0A%4*S%tK-l>JT@&&40Ujg9Bdq"cn_!M)Z,=H6#5'mBH*O2rQ+h>IYkG_6P,Oe]qSlg=0TU3)cRglR,g!$'+pl5M8]l
%I$7?U*^#,K#oaR>/=-;1`Xqo2!%M:#qT5p@gm>L2#i*htUiBVeQ\@"(c"+%?qB>fereAuIji2q5#9*.5WK-LJ%Ck<G[,6bm_Z5@4
%&ieo^E`i?Zn-&a7&ieq?^;>4["*b!"=mk_\"7e<-;l)629.+=o0@0sk+UUR,+_VH)F`BQB5Ko0:7Lp)(!bHS3eJ9)h!D+G_Yh.c/
%;+*-#s+i)LEDUhT63*17G]_s05](&&!Aie`TX0Q*LRQ[0IQucbo.?N<s5$*P=nH.PkEr>'j$PljBYM@Wm8&L"O,nZoQo?]P'gfUZ
%pYE!7K>$`Ifa-!iVmeQ!#YlK#6dp:(8*.8eOD]b$BM3:`fXe-s9tpk4R6)rVi:h\>(DI+(Y5H,4^98O_!a^BK+j5*mA;CM(W!q,=
%Jekr2p!dt#.&.<.H$uC#kCmZHkjir=g=n6]@<.?q1i7#L4LN#'BoH.SC'e1ujW?fIa7K-s^3V=N!O3Pu3fO-K:s4X/fDR0!XmJ<=
%)W_Yk+20=tp5DJ7hu4=Dgc-j(:bgkn%%)XE,W8c,E5f&Hrg4FXEp*s:BoQ8(knG'A&Aj_krLYiq&1];O6l&:-$L:oHT&cVo*o`A)
%Ru'5X^8t_`>NHDufF]s8$lL.?4J(*3@ims^`eimd];'Fj43YZ4(nnA&50+gQ*C:cp*de"/3c9ANH[oVN=:q):PpJ88pP3dAR4o0g
%+Dj,.@/?J0k>:'E+D80^(27]1]O/hf%0I!!S2K:F1][t`]A$Ot)6EouYK"+5SJ^cP+g(AJW-2L6%hOTDkG+Ykg*cs33k,ae`9ph+
%)lI38Z#]hS4V@eZ-u)+X.gVHXY/Cf7!3J#85e2(=BKZDZAcLM*i@V)*$Y*62*VpiPo.LUQI":,jA%LFe*\Wk#.=]!r5]D)-Z^Hld
%*(i,"XXk@o]k2*-Iet@a\PQUg/O>EtL6o.'U[J@M1_*b0?OH8@1,#O+Tl:UFD\.:YD"cAr<KckpJC68bbas9npKP^H\@Mh<jS]*S
%.=os>.G41(7MoABaEqRo"H?tT/.="?UX0mZUDZP1@?NkU48o;J;BFG)7=+7m4Cmk%Xj9=gS'*LDO.JWLT]I-o(p7ZDfG5m!q%eGB
%)j_YKkQc2;2I+JGBa'#7m"?deFG-B[MF&a#bd0\I+o?KA:tQ:iPE_IQ]"T9E+]D5)q<j(uS,FB(ScIeu2(_@A_JiU=0RX3$-aTQ=
%q3WQ.kP1EamI=&49fYt:H>)](##mqdE73%18aO_KM?T+qgQI:nd*4pFa0CM2(hmjJ8`)@hG2@Pf7=3+B&qQc?s1(^bM3OjS#^7EA
%H"F5HMFfn$YAj;Gg=-9^D[+b^kP5q=P'C2e%1B!l-FkAq<75mhnoS?VIh-'e-CflKm5&_#Z3Tnc*4B%E_dB+*%q-GcFSn-`).Q"S
%HA7RsE"lOm?oXHYCflZ3Nh)ou503Z3!m35dj1XZt0D;D:CP1O<jbh*F/$gZre7AS;-b8!JbQVt6%tbk[oB+I+h!'8'35AMOTKHCE
%"r+)_6P:(mVldH"),SocJ\2>F#B3:?-j'/l%49.FK[(]V7\BOSG0bLp'^S*BTT!-"([Z\(Z1^l"#uOrf>.fV8U4GM5a#7)0N;?rY
%C+Z4bd;6r/j@nc^.P<'7!jHc=K,9#oS50nBDp":1Y[h3>Z<29fAq0#%q$N#:2tD@Kn3I%d&laVZc0*)pOJ$5g72NhrOa_U02^p[B
%2;dW#>eUT3.KCu#%!*R>CN19ScqY4omif\BTI:K1CRF-9b*5:+.*(-cb1XUi<fdhA!B:5R6=,J32X96I%C%3u)]2mrSdR3rQo$_F
%-6Y4N#4Ts?/ak&+mFXT<e>0=beFhnG7kG."0U8r>;@VDNZl]i]YtmS4!(1K5%c5E5UEZ!q<hhcZEQ0a^NsB"dV#[_m-4Heo60Git
%#;sPj9*?4[:WJ1V,S0)^]jHtY,RiUbU^q\fmb'r;7He4imQk#A%Jj=bHO?pai-8(N0D;(NN'sYVr;fq^k-'V"ab?0WW,7QgdA@;r
%g=buDIkZ?s#q!J[diD5q?.eSfkg<,BG/DISgW2gBr^3BQCZ@dP)hk;t7.HrjQH&3K0:,FZN/8&OiU0phLN#cSS*#TlVPtNTLJ4GF
%<`d4p,4FfR30[b"=4S'g^bKl0nY*OE%eok?5b+VUP4ikA(n>[VP+LV+CdKTQ/L-_<mq;uSs+:mp;rE]7XKYGi#QkiZ9q<3`Bo01Q
%^g+WnF9Sg".W&dNMBh>e*>]_^Y`eR+/Y=GoE\nlGZ+s!<A0DT'ICVX+$lk=%*edt:`';+*X>[p94)c.^$lJD@:,3m]4YI[N#0Qjc
%NioSjJUc_%!DD8CU7AU>RJ+o="R-kTO"l0K+os7d&1DN10RQao+[a0@2``RY[:VQ`)%`/HQ#mB"(jnVs6/KfR$'cb>D>-+[(>_Dm
%Ds2^RMU\@V>k'+3Aa>Bi@toY)O%JKJ)NVao3>;Mj0k_LNXTcKgeOoMsoIJ8P$Tkms-Y='4"&P-'9_N0`:2?j\r%X4_,&do<,Jc)i
%M%q=5Tda'=?tE1uoT>hIc]DCFGsp^$4umV!H1CsGG>agk_&p>0nfWLtZCk6Njk3!2SGmN*E4Qr?hSetMs5mPdh>k_$DKC(h/[.?F
%n)ZE/*b_>[`ohN2#?f@lGj#d`_aarKiaocRjk1Hfb*BS2/^JYQ#IYiI;h19p^p0:-MS5Nk0fOie+&4?te7htoH/A*Oi/'28SP<M0
%:*t!jH02)fT<`W]W&ETQb@<lp&pWGX43I^hJqNU(S`PE<F'C"1=WT2-,L4Wk`:C_2WT<%VBR*ER>p1eKCj?@IrFjL8Nh9!I^ZC$<
%ZuK%T7E]a#<#48\?7_TOjsO(_d.4tDe"6ELf^bF'I*_,W*0GrjlB8J9S3W^V4[rWsfi3XpQ3UFES[psR>953>12bDub;3eK39+r,
%@4"0cXRpK`NKn24&VtO^Zo*^KLbmXC?trSJR-_o3!%kDZImh.lmEM*@E.BZ@$,";h+Rd1f!38t.0dlY=b#JTP:Br%ug]Q]D3pE-0
%qS_V#Sg.F[Yq5YW@O$^FE\%U>MD1E2EE!G%9SqCi4pr7Jigi?PrK-26rmrR,dk!DA[*qFOCgL85<7[AqjbA@%`%kIsM+'Fk!Aut_
%#nmk1.$9epV1`@l:H[Zt%TE0F8P%E0Tb*".<,/]1'OoU@\c.rUCdM#n8A1tm?*W`:Wm4h1#ULg[pM\!8n#.4%]SrR'/EXg>Th3,n
%icPeLI->(2f[;!>n=:Bt(<AF-qJsg]-F"XpH8Pc]H`?)QK0^;TBQ.D$O?b_8*@O9R:8^H(LA[P$Mguecr?UE!ETL8oR4X-AR?\TD
%bFa>#HON#RYGo_95S:LD`D<^#-o?#rMOu_./1g^Y/._:W<(a(tZ98'!;6KXJ`q#M,e$2uKc4_*J%uTlQ-A<lV&$JS-jl,JjjIQCD
%3>'.kQ7Nd["_)mj@SlhCC43r:=?m-[Z+B+,'inH5bEdcj]NdbE9YohCeIQ;N7NHZFJF$Z0;a5a0oQA+$0r[!@0S[<%#ZmrG)OVMR
%;)ji.m(VpIl?EWi/[\,V,57:iot;3JUKlhA_Y4@pI'\$-/OabhR%QaCs'0F?Y3CgJYghkpZCEG-Zfb9W.^[_,,<2Ws'_oO+i8\"$
%'.ED=!oJ4VjI,<<OirGZ+#;BX;?mA/"3++<ZZ0_J!]f>DQ2<hUf.iEBU[I`P%s]uQ?`FJk[&@/0H4_hbZds?GQi$dTK6rmC\Dtt1
%F8$S"[k+n1Bal@=ik22'C0b*k.kif%=gbE8Oqe[[:fqtpb-)DW=akg*bZck*`Ro1(Fu/M)AfPm;24,+)_RD)N)N''F=cj8e-16mV
%gDI2D&_.]JfbhNur;a-cU9S.Rq'6bnj*]0G81;'B!DF9p.5F/nBs=Wf0.>\Oea_=*4QLl3"!&JJ-;s>]%!6kndVJaC;@R2Cn+`:L
%q^B3\3'J[k>[1Qp&#<Vr=#7?rnI\,X";,/;Fp*$ep_gh(QENnBqrntrDS/,_P4O*t`b_$Md!g#aHTcM!?t#ooRt>4N,<<dLe_HaU
%\m=^u5^RQ9l?9Sq_prn$Mn33]pcpEM&U-X8j0Ns)e>$n_4$JGb#M#cB:<2P$'ZDhgJHF&HZ,lHdP,@=;)!L`;W35(US9K@N@&%<_
%]]Vrme?p$u2bLfFJW:95es(QSIC"dHk3?Oli&6aGce8+t[<rX7.>9MFUg6@2_*c'#206[Kk01<ek8*1V@3>QHXXi:+ii\#]BD6Ba
%lK*O_`b4qhQiDPQ;3qkf":IPokRP\tf/$kmJf/hCJ`"+acm]C>J+*lgLKtZc*@DCE!;9-CU-I07O;q$E`dp5p-92R3TCQlWf\iOB
%5f06;GFHDu87F.=lNJD>1%!0/$Z9?3@O:JZn5Fk^*^3O_OD7/*NJFNg\05EDO@`in<Wl71[O5b%?G'X/8=Jl&F[RaqJ@;,.!;uI]
%EaG#fCI<M5#?'BY6HN[]30<E3eKG3DSdTL[HUB#;O>eB\BsO<H<HfBZ6uEt`dWgMB-D^.'R'^)e+q8'RC-tEdfk:OY'72MFZt;8#
%+X/I'749*tK8?bMb+jis'4Bl&?M5f1b71K.$R<M$b7?af>==/=W+^7-/?0#I9k6pbe&YFlnt4+0U\Xb#qQ67?X5=Qhok4Lu>#>mS
%hcpYM[%\bCCo"ip&W^FS($8Kr7c0gDo"_D3;=Nl:B7u.%N!$m,lIjD[`^G<nL^FG3#OkA">Yb[qI5<@$"9Xd0KUmA=Ukiq\XS#ZM
%n6"VIl48]+8dp6&+k%-#0Bs/,UbI\dT,f^<mW90_<ZoBgJUJIBON0FM\MY\-!I2lB)f,L?_*2ATph0Icjib&(WKTd`:+?Y6\t0-j
%G@.dU"H'3doRLta\.ngZTl@JLXgf)BE1o\6@BI$Rqf)(&FkWI8WthgU`MKuFo0:<X1kIT!qCh*\F`i$`A$CL?[CL"HY$8#fUb!?K
%Ngk&C%7-P>(FlaFB1Mj$Z'`6P(8tW".o*Zec.Lu77&a$ZGB%:ZptXt6B#V)9K-5&Z+KC?O,,"6MJjVU+Ln'fjC[8J#+_;bOh'^u"
%h[gpJda[!%!r?laN69rM!p;p<8Sn-W%6cr]UMIlr`0g6M_J`I2L&a.@VMMj\FpQ=jB#uM\YlMShR7.#8&,f44Hq.0.VpH"j2EoqU
%[YXO+XuQ:/5.pQ)!@W\Ik/(=o4DNsrg1LBi6\nHd="c2Q,n4TD!es_]C+ThG@/?!N&LbEEn"]pbW\Pc/7J:&>!*M#[JA;HC1Bkr)
%$D2'!/Y,8s`tO(_'SejT[:mmN!"5$FOYA6icch4B-M9pnd+GDCh2?*&.6mVp't&4o0QA]:DHJB=S6*(9DH\N?,$HBbE!U1Zjj:Lu
%W270Kg@-39`G@Ad]`'-1)i[m$ImD5.8Magm1e5c-MerAWMl19I[QuKQ9H%pa=f$M02d73cLl<V5"q?-7Bh1:#`oNk2-E_d/Xu)pZ
%%(Ti`ONsd(R@a05Xl2G3,C^8=^T,O[VrdlG"A.5bl@Sk*E1:WHZ"gDU4E:cdZsj2nMhkg[+rOE2Kus+Roq9ZV'r&4Y&6bQhk77JE
%c=&I4T>nCTA=l4I^`Oi?s!,H@aG9`8:nTD&rnM1;D/a@;k9:)`MJRuZ/fb7,l*[@D6@KL?^rj!_d$l*-Fe[oF0Xn_0`I!SN?*2&b
%l@kXQ!dC(`;%Au<#'H5MiZSYb\M7nsprMHTh.X#'FIf3N0-*c@<cBm0[lZSUeNhrj]&oq:?KR&rQI.&b_&S#8+m4=aZMErO2!B\W
%"W8)^3F=fDT7qpLT+Z7pYanTG/?'FD$16L?Pme3%Ubbj>PHeX`"$th_SP!p*afmE#gT22J&G.+c<"G-cB\4!hAQ$CEFuX[h=)s@<
%N%Q!6e-i%\adQW_n)pKtc!)n]<dtf-8uON,FM<8[ZOjiU3M%uQmNn=/)]cGETJ,::.%joaW[7S-Fn)K[]QI'W6]C%qSa0_J1C=P,
%kSXB!B.L&R_U81;-A.c7V\!3A&c<b'nFrKjL05UNGQ7"Q#V)"!2KG5toL!5I]9(!dT(ooQ]gZNq'4OLI(fI4B$b&=9en&"6EX#bL
%\XEg+^bA87JrXF5j]ZdF![?-BFHUAc@?0lXVQBe^1o'f)\+>>Z-Sn=M)<Bf6TTe%d%f>?n<OJ7&)]uCr=M@MgD7"E/\LqK8c1s/Y
%r"[`QUn;1(.\)7ERDRC9^LDR(gY)sl/9Ieo:@hOC$u.*rW,p]a>OQG=.4kGn/!TeXQGS6iPf/9!*9o@`;]b15B8iXr^a`knY;85)
%[$qb;S!7+BWrW[7mR(>^0]@Uhjsmqp2U,ubd`"r1:^R_Wj06fUJYh\5-V5[,YY%jBQV1hAh\+0M'TV.9oOU*%cQqpB.NMEpi=:>@
%p5t#bV$,#hKoWb3\GZCQrPX,0g)8n-PI-\V>Zgk*c'k6pT*oFad.Ysdrc>aA=h$@1RLM_(QGJJ&7I=\"omp"8d&5Z._jQI[chD>s
%C?u.[m+?@Q&m+JXL5bB_q/1-pH[oPH9]>r78<j+K(4g^aBoa<=6F`S=i%f%&>g?2hU$%^QO@%):^$pA]K2iu4-D)SSbo1ZKXAGYD
%aCj%3PNHpuaVTHX:\MB'K!n!KgfkeK-<PA7Rp38/QGhRP)g/=)2803rd%I,6]sT+U@8];Qq5X/>P!3gB2E,>g/LbT![\rZ_XX/DP
%9O*'\WI_lM8,hKSL"$WIS`s)d)n%hVNBIekbe<j]OgdfL""3h8X\q-LgbPfr;Np3&H9*eF'KdBP)A4+\P#cK>_W![Q];jDNL9NXm
%Ts&8)VL`j3Q,I$2g7X"=C>*mA]V<rG#1=s1c./rQ1h:r-U.uI6/m%*jf3nFQ4K"*DTq:WT\'^Z6eXPrK4+KA/VSUjO`_FS\"mD^_
%W8i2!TWb"iB^<*:i]8H$/))RurTAPrKl/uLs5ekl:V,qDgK`BM7p!/?ECfc@;@G`]1#M'@EnVPST1f?Vkt8bBHjpON#Hj'3+m$S'
%Ot0uM5_i,LQC^8D:q%H9-.t64_/Y7n"1UKrLGV%3C#YRr)gOo;>W@nI[PQj#..qI>aEebeVcE2oF(>Pu2;HU0D+BOGoekOPeSPOd
%RXFh1pPI@j4qKjRch#[WqOe8/&_XLsX][>:ek#kZR7a3H_pt;Ij`!A_ZSAo;W*HePFIPoAm^s]VTXEO7l2T$3[4\O!Qh]5Fg"`<:
%>gdK0oRDU>)HCZtI(nPLZ3Gpk"W;fQmPm1$=+1ug1/03`!c_Y\MhaFPD$O2[)XX$81iqsZ5lP)jR_Tr/_T12e%hsSaosbbW*u!OU
%n0U<$"igjWkaV7T(2Sl<QG`25f7J]Cg[eH/Y%>p];*/mO*>oH<X4`\kM4M;.a+l1T]WT[_KB$GSGg`,Nj+8Y,dTCh_$Q81'+96Nt
%?MT`D_q/p6a]Btd7%Hg/*$6f/C1sMB3QHoQOr2kd<";D@eS/it;*"PiifDd?dqKLuK/PRYp$^\8&V3BDcOg0G;SfM/oB?U.L/`/?
%TRXjd"R/:1'Y-GC=4Cpua*UPlm@2`9oS&;9oK@+Y+-JTI*#:6"4sY,q%cIZQ3fV9B52,"1=$&T9DNllH7cbU3W!.:/%JKY&<X9h@
%&JNRWpd"lA[Uk)+AT2<(:s9jtHqYEO/\m(#&$e,Q/K<KS"]b2C/p2QiKfc3Nn_n@qBW"]fa+p.k>F#_iA>=$e`.Des]UhlnI\u?-
%>.TlGnnf)+(_JIp<!nL@bEqp;lSPVY83+_GT<o8Af(8bfbl-WVS2rj%P4ra4(BsLbgXYTaTZHN&\.F7PiaOf)i^*pO%O$VDSOV]\
%TAt1Mc&Pn&N2IP?_ud5'QW*e^Z5U]1\MSh!W`<p`rq*_$$f0=5gc3i0^<iuEnUc&b9BbY\/Qa&-f;\3s4g'k3e+UfE9fRJV2>q"Q
%^fG]<mi<nM_N38rru\cFpg%1aX*-I_TZtJnRH("F/k=iK\\'_"I"edOKI\Q]=._?c3:6N4!GddXW^b5)eM*MMFW,C-SPV1c<"=cK
%Bja.:N,gB'YhalD[)s6CW8[^"%t:kRhuGL9?B7bO)sg,2E=.E^V)W1EjmjSIZAUsg^C2NK.(>M:]VfR1/coj>3XI]0/]O3I=h./?
%ih-j,`_(.J_*B>UcqddpH/I[mbK?5EBF(a];C4f!oi%Pq*ZI:($a:$mN+t?k<"=GZ%si_Gpd5neR?KpUYC$L%-^NHSi/9sUHkuI2
%a5A*s$0uDFF:;KR/l2cPJS`h#`5pQ#o_O>H9O(?s1iC_uVss[/ZCg(i^WX`JEdkP"AT0*'8^LXuh.eoW<H1nj,$Y;VfT,_RWQ1%H
%[0\8:/Ig)JC#`^BMVK6Afe@EG=;>Tb+p#&/(CV`7U-$fk@S:/C%]N[o;4C4XIF8q+/&2#i7rJduDK>j<)]cUDS@]6Jh)@??qqj.g
%UW_RZIXj&lCf<f%J"V_#gF:S5&OG\XRS=p!a$+NZF<,r9R%'n2RrsGFhOmuJ1f/\3OK(bcDuKPAo`oP.Z>j[toOT<5r3TM\QoY@A
%/.R!S7b8fB#Ah=Sc>$M?F/5?s#7-2b6MnbKEP22C&4D:*!6&^I*BM^s^l&%ZpH;=s&]FB3%8NQLZYu1^]%l8<#NXs]`(G7Nojgai
%*S>VQGI\@TI5]5d2-Z6Z4qpo9;=IN@7M\XH>$arp\hSG%coi.q00E&hB"9bl]W]1q_dhO#%jQ-&b7I?HBViT=;+[[_,S6OsV*Zf_
%p2nBjOZoH.-/Ku_'D[V\]TM5oSK$&/d.tVe5;C.h2s)34lMi[>c1R+C5;6ed\'`h9je%qtD6jOR-+IlPo9O:Z7U9*I3<haD'Z1rB
%+7K5/?0@Q._VA7W'O7a>lFP8q,*eTIK=e38b*P>o5$u+^Pt6-R\BD8JS7HSINMNRDSAd@kYXV_cSG&WI4`O!=(K>8qa7]'>*E4nG
%5'3#VI,Yu.7ID2o/W%7Z6r?_[<8IKrm'Q5LJhS(o7i3<,!5A]2Qht\#/Haq]*^IPhF]4DjL\D^N2oIh40DpJGO.U5f?B/3ueK@ub
%5(S\+:L\t,e17'DJ=Jsjd1)EP\Y/QMN.[R/bpDqti@u2P]_B9.HCUVoA[:eL*&q?2*)?M:Sclud%5#BrQEE.kOR8-!rFCH8./f7$
%@J_"2M>%!cc$FOgl0*f9Kgt=Wdr9lcYlYU(bAe.I0JlhWqHSkt"P7`o5=a;UCN'1qZ_i:E/uPXAs7EQ$\f8mB1#.bZ1h5-,'Dqbn
%h+h&=2TJI`ckbQ3K^*l%@q<aaTGa$r=LHJlp.Z%HYJA(RY`*C$+P3fI03#ZiAV&*EI>R'5PPS'I4fXP_G%4_laRq&K3:0D_K)"Wr
%&iO]uj!qKlDqtB"WQl=I)ja\C5k%6:CT_"iBh#K]OF'A0:V3E6_(uYG+9<":/#o-7nFcr'!#I@'h]-ljlmQc1HN;h#[P4P=qVqbS
%iudK6FH?:b4#%^KO8k/#XV;8@efblW#4BdF!'AngJKpA9@tThgEdq8l\Blf3)*ZAd$NJm]'i->C1SifN&DZhDau7B5!a2g!rT%Q'
%LPNhKm$>^>I(A]Qs)DVY+$dAO!]VErgqTbPqCm-YTr"GSSpH/S"kBTe8_u[?UsJbcqi;m>@ntW2HIB/XoD;<WRaGsP%1,AdkoL,Z
%6t[GEVI?&7G5oe+/kdG*[kY%g;DEl=3^2lA]EpsE%;^E5n7KlF==?muEbdTn!)!sq1*IFiQ&U=C+&eeXa:"7Zk\)(eOgHXMN#6q=
%W<D!s,&j]9i.]thq;N[E%0U*Uk8Al/3'<GkUu>3t\g"qV!S6`-W4^J?&6_kp#(emj<:/XtO:AebA")m]Y\*1-JY4rP%167BQWdDH
%L"ujY^:DeQTgJK='NMouiM",go8.k>%0S<m8F8PAXUPCdllHF0Vk+*E(Np<Gae+9bif1FYIdbnL+Tc@.\CU)!:^^OoNGELPTg1,Q
%j*"cnePAG2=[l>LSXM'H]'s)GS_XBFJCq(nHbb`])WL3%/Ot]!VDBh[3i;qul.EI#3`$2tl<;Bm'Ni0Ui&rHQJPL\sr/\7>_Wd(:
%LU)KRp?&*sA5!H)2n:<!aHAfDI8K^3EJN`3$]i3.$<<6:c_`YI+XB(Xo]hG,*(#ejgu_(ON^HMdoSaq5]Z`CMk1FEcIGd!YN@,0K
%Prq&Y?I`1+B=714-VjCXr=<S8ZBq$7X-:>I,ab?J]rdQZV(qk@AHQt;9(^cXXEgkS.sf"rhr1&!UAml2\#UdFFHNL.;##<9VVCHQ
%(&Sn-a\6)E!hX<[i6STmf4,]s0JU2?9D.kl3n'aZ3At]a"7j@<C1P?a<FM52p-$sN]f,+\s0"e7s/5u9V35tT".;sS>8P:qfNQ^'
%#G6\(kRPP,mSAD[,&K5SSh9[9kSDiTii`F_9YR:B@2c,W-MWeiU&gY+#M&o_q'sheK2)d`[3'qa$Fc/3;C1WL[c?fe50m;0r56.[
%!tW(_K?Jj:molfSP#9T\:q`3.=?_VV$Js:MJAEUEma"Iqab![oKK&NNg$nsQ%&SpL0b'lI%7Zg&8bX](K,_OjR8*FhLo(k[T=kT/
%cWf&:#b&+#J_"H5ie2MM(W#%52*,Fn[D?eA2LReBf8h82@DJ59TA["?$TrMfa5$b[$2APGL0aul"^^9h"YBdTSaKL]%#,b/:+"%p
%HN;LBO73ehQ5dO,aUEfOd.a:U6TGpG!h'tu_W\\[PeqjdI>hJ=4>[nRpO]1EHr_,XdD4cUn)/IU$iE@&I8_grM?J"<oY;2!n4LZ*
%Oe9mj:\\7i,*HMZIr<[aKDek%,ao[$<F>5s,\]fV_:li>B]1&)?Kb!lqFahe^]SpR'fUX"r4X&OZ,$=lr0gqp@KA)>%[7ul$C-1O
%^tE#PaqsAZSZL?_)K5c[hmZY>4aOT`CR>9-"1-F',&=a(2u)8=nq%I(6oG$F&Y_V,k[]gI*eKKp#=f+/.asTbB"U",'](/;%&!RS
%p[H.D8$%PA%)SJFs4NG-!opGmSB^2\F-u;+YtPKcK`GTcU=:0DRfRQ#\c#QM%//5Ng]7sc[h-sK:JP_1p5r:"d`l:<kceEKnWnSH
%I)Z**4Z:`+gh6'JMSfK/+$:?jfp=AnSA5c\)W<'tX5b/-W7#%&bHF9Br<#/+k'h+6g?@IakH;o"MUing;%]b54(c:%8g+OBYhM4W
%J_Rt(H88b+%:YfZ"cUm_@JoNfHV[&jAKE%&h/`t6=1aII4iZRl9EKF?V]p3jVXUo3&Ri<]j:kLE,Yt#P$Q3n0nXGul)?Z^7%DB'S
%@oS$080hpm/s;AaVG]MNK;F"8-5.Y?WM]rRQRfdF'/-$XBef?sMgtiXm1oD9RBs>ig3rdimqZac<i\S5L7iQ%,2=h*S#^mDr-MEt
%_##@d=)LMmQG-gtbnE5B1KWqK9^s]f.T8;`a/,gJSu<]+=r'/gIYe?I^*FcApUEeQIh/j/^dDW9;2&danu[d[NVqm%L4U4Pl%M3=
%J<*[f0E2i$58RW^R-A:P$qKn1JDrb+?Tr37+Sd3*g\M_:UWog#$oiLOIT56t-f=0YZ\-hlCBt34T[$R'6D6f>nKkE";+X/RJ6Q9r
%r^N<m/%<$CrJ`/kat9c)J"n.IQ!56qDh'3>Zq,\@<"Se:"dLM,M`:8#aOg;@QZA$m+nLUB?4D9Fq?p`q@_^ZJ584R$s)K]i85Etg
%Q7^"KB[VDqDIJ:u`V7bdp;+g%q=N&e*.8Prg+ESX3m7'%&!G+YI:&QckZWhs,<9?uAl#%oquS6Y8cC9=4-nZERW837++rD4J/B37
%^Ej)mRkG+1m\m!%`e"b`Y"cRQ7t9CTNqGgsLR)?+o3hKVpKK*q</pHB&4g#fU,;g5p>3-XE@+g*rk@"'IfP3(9JFV?k\L>J%Lb@d
%SE'3'kKEbWhl:G!\m(J[Cuh"j]D%m[ZSQ0leY."bi*GGCk*6NJ8^+%:]J@>P8Z_T8=%4$<i93e(=%4#Q$aN<q=%4$<+J_s!Pn?L=
%(F1T/bpt#tOta!C]J@>PR3eCfYDb/-pe4J.AV<qSn_QY_o?%?6PVt*n?5[19G`eUJYM@4=Tk1`J4k%i)/!h;ml%GA`<UZoQ:2&<N
%`CuG)As[0KDH]BNlk1oIW$Z%qbj5ro8P$=Siou8<((]4jMPh]9OZ_AjnT70D+026l>)K4&_Vm<<V0G$FS:ZsY8b$mjGTX*tgId@$
%,Jrt,^#5.f7Z!FQ06h&];)0.QI9me"Pc+u^JlbDYA^nnc(9`ZN9!kC@_(-ah&lG;<]^ihj2)KA!7?Z\7CHo*hDo6N!jIaVTo%BGu
%oD?PKL9ifMdopXu`+!3N5o;FEr>/fKO)+?q*+a9jj!VX&]LjpYM*dYb<j;J(<ZMt75Tbk"3ti`r2Vq5umuB1shM1K!/,>1a!N#-C
%gN1imV5<q8BhIY['NkCo>KF`tp;?^F0\p8u"6<`Lh&XqOb<bG-=M_s?SE^_%[@ZP9UlEd]mJEuf7Xkh>E?HEsL!K`2+)JL&+6qC\
%@.0/n_rJoCE6*`=]X`L,QV9jP.SnHm`FDWVn\MGklM^EL`%?s7jJliRjPq`t11\[i_OeIYhS>G8[s-+sBlS.UPLV!nlgkTQH]nrR
%!s6cH-t;tlB;K,Jm1et07`Op)Dlke+G^Y8(?Vc1k"+rE:OuH$0H^'Z<Jl3Fi5L*'e[n>CBV5;_a8"Pj(fK)+sr;QD20MYDDjkY["
%4Sj,R(HDr(A\W1KZYV=m]<h)!$^(1IO-Uk??+jcj$H3>?[DSYR@jY/=@VH.ZJ4r]PVl4N3J-'Q'7o`G!(M<4_XYcMIjIc)fbCHif
%=Wn,Qe&@ds]uI3!\p:WWf18G^F/fOQ$[akigm`@@UV:ookb+1nJAnG<MM44Es!=opi60_?E)NTPG4Z]f^\Q/S'>-f8l/p7HaD5C:
%Aog/K4"g_F>-AlKbO0?hR/p-/QhF5WYEp2'7aCM[^\Hc2T&/8CM`#Yl&qkT0='_no5OM.sNSQ+B#@a_g1Sg\%,,[#iqKU)U?r"`X
%WgEfr@Yc:!`iQag;i8rkOFrPeNj;TmkLW_`@N$gRN3K%u=(PXW9%W)BQc6$$ar=>5+:hH3`'Q1pM;46^2+hG"q3`s7+Fs$$MS$3,
%rb[-0#WM-/K5AT,c:q'+Mcdc_je;9Ll1/]LKXB#IQ?;A<$1d_D*-)8gdX;_FNb6o>rm_p\0Mc<CWtln]CZ@XOKcO/IXu"%WPV#O=
%dV$;EO`G%Xpu$b4R&#d5$Dk79er>4+,UgWc<ASY%8o_6IU;ou,j64t/\S0ZdUs\ekM.0F_8J23%DN%?Hg7+#SZ9GG1[6]NNT,gjU
%#idbJ3t3tufmPELE.D]@#K=-1D''>^`hjAQ]XI=J!%&mNnAE'IcS!Ge-7oQ:`cWV!.#TM]JT^J60bUaaT3mY3M1<9#MqoO,(msNV
%5;+@g[)8G'Gm"3rp'SE6es=ks[p*GWl4Z*["UhE]E9WhJ(cn-D:(Brk*Q3htlc1<bZ*?He/Ud!2RJGUWMMRJ_$]:@n;>J<\fK?c(
%27Ls2n;Y`98S`4+9==ZBb2WeDDY:tk=#ei(:j/n7RTj;oG?&ge(R\UO)T_j43`'60ZjnSnpL;TL.AN1-VT"i<7X<J;\liBP89S,a
%.o+L.eUXWKM9Mrp='qi28^fRYb1VS=hKP'id7W^F#4?4-G9&inK_jOQ[73p)osWLN(7*<e#J0TOpPs8PE&D"s:Il]\+pPfr?Z%\u
%CUC9>6`7AH*L&@m07)>PnTY(VfCR+op2ab9)tm*1DKI5P@PV^O*.72)*.AjM;-!ht0FrKUbeZ+u2`T!\P[Zp1%6H$.!Y"BQ4bq-e
%Y4re/"hJTQHEc!Z'i?_cfkQ6nd*`FSHM.&.#<cYk(FX[AS<7OPc=kCr(\"ndaXZQQ,!/1e7?#m5dIAWZX4<<:fn^6RkMoqkCl%Wp
%eu/R+j_\d)Y?ntRj1JgT(qg+WC?ab\VZ?b"Z4T/j778M6GM.cmV';(HYet:qP-E10,HE,<=Z<%82g>2KeIl',dI1(38:/fhlli[[
%[cJ5&jJK?@_^&4s''diCBq:fZ=STJA64Ht4@AUaUK1_"F(\gI"dA/qEOD_d0<E-.;.s"0lEMWI";f:lG4S<_n];W)SrjTCl(1p1!
%RGV/M)b9Akg"9WEe3&V'L_b/@/LiAA-u_8TJGp,snDN@:bCZ0TIAs<g.T3OOU7c@#K6C.rP'3)tj4!!,9-(aRlb>F<Th\_;)j;pW
%R%<N1k=U&;ZJt2XXAdLo7Ltfh/-9ES)Q2\NP#47olg=O%-6Fuu*d*b5_lRdQpO'p,"=B=51euFaN34=3!-e%--bWsSD]a<h\dPHa
%Sc7XfqY_N%)Z$U<."*a=lS@d^Bg$MC[GA3S9<+noBo+oGFeq?GV5L0R!<PpWlC9?I?qZLdiVp[DUg?Epg&6O1<*(-6$tqoTF2l=U
%AgMC:oL15WIEr#Fdf"gL=rS"!rF\/k4",]JBiF]6DgR"<\prWo.=-Nue\(@d"15[JS;tip>'b^`VD95LiBOUA.LC&pl[17umZPbk
%\J*6,-``LE3/Q"/ZuR0DhOIBJO=&eu[k+<m<?XWr=>ioup4&bCJQWSX79n%SVrku-#5_m(Z@eTCf_:^F\q(j]A8u,t<5a2-MqO(a
%C]b,I_SboF[QH?F#'FKeS_pZl1s]u"6,V2)fA2rO2R#!h1qVm*+^m@Vf9J\:;^R0e;&sdTlb#mso*_q*'EVM^SK?5oC=Q$K[Jq!7
%Tp)p-q`@l($+,lXhK$<eZt*g5W5i342m)+g`K6577XMhPX.IZYf1EG9dKS@45W:G+G@3up>^rg/+,9B7=fV)Z@Wl+$q\(Ass#(1X
%!Gl.Sk%T%;+knf4(?f1_d<;$%W=QUKFl5kirCBGG$aPo1O$oAdK*%SU9scRT#+'4Yc:FWcdaNM=TJKIoNG^l4h27ooiW;8:Jd,+;
%Ru6&l@@LB4p=!/S'5OEPO_^o-+VS+;/^KATJ1M^_hP94H_?4:Z]t4/?k+-.ko,*/FVfO08(DJlHGq53+Po*q5%gmDJWcO@#Ta(`^
%>L`(9]0L#)3[^@n]dV5FZ+_WVVgX-Ac\r'A4KqLVX^-[g;?UtE;6=,Y[.]@1G+LF24&H-]i9',``R<+Dcn]C=Q_gCnnqQ$M%;clX
%-J\fui-kVCNR/0UiSfV*jNqlNIOZ@F7;k<tkP<R(ecCbP#MY>V2Vf.-9bsUDcgRmf<S]]P)1"n`fA-oSf>Jm(``O;KG8Im6K30"Y
%LV4\M#IQS^>F5*53TK1?XO^,Co&_87'KFZX+,eF6=>3G7Y`D6M-5PV!0s?#GgDYC653tC?0pBnj6en5bE[UhY<C!92W%jSe._!YT
%o-A5?Nr7$D%'E;?`@WF[/><6klnYl.Js3cd/U-8W%MU>FWX5Gb*EY'PO#9.a:U1);EZ\:!l,L-d`ik=;EPrpa$V,to&]j1unp0rq
%l=quUbqD57Ki/:0dls\#XDl"@4$^K"Vc<U3he-;%R&O[qnD)%Y-+_2L@?u#0VG,fgA?t^8&]1p-"H)5[dX1@>QeK)=0^/XGB00AT
%=+$cZmVGflFN%5$(j]1h.iB4;qOeLIF8:rf2ht1IGFPFaL+SKF/$*)h!rF=7*Qf=kTPEA_'25+;3)^'o^=#c&T+.FgcBWSEIJ.P5
%cI[ugcAp_oSbma1rm`PihH'PV2et/ZB<5_XFb-u!.Gh%j\j$XKnELW1ji5'!5Ae6([uJTtH)#f=hLDgqD-L5Er#YjX^A48l%9h"t
%B"i'sRtZJtS%<m:/n;*Ph%&L?#=BiBDmTi_?6rAsa6pJZZ#B:"bJcRLac4q:IK.qYs4B7nZ#>Y_@,+W;_8SpE_U.L/(mnUiG8LkG
%Gq^p`7>(t+kg7n`lIV<.KapbikV-#LF.ksgenI6cPL*GoCu9TJ+CD>G;!?i7"_#im'KYU;F(1rc6DlIbVjg*<!7rimq9sAdRGU)!
%;n)(*+<e2d=<f1IfY9.O!hj,Ta=,iU>GC8a;5)H@Gd!cRWd\19^h:5p%bm,m6,TJ0k-,j4*V^&bSK800VNCT0#T\f/M2t"u;s7$X
%9TjYFULV*!@S(LJ@ohbZ#L048P#+1P3ak"/,]rI4SoIrj=="2F3^O'i$G3?7dZMmB%c(D'8s@WT4WdDZK^>DZU$G]-2lB/4#;r!t
%f]esR+dXZk5=pN'@r\GXk2/p`2=l0EAa4GJZ"TZq$sZ2R:7mbUrf&)9&iu8,1PY]Qp1B;90dB$*a?5o&/6B.Q*ML@cW#c<eEccH]
%OZ]Vi+h&ING'YNXO:/F<S#%?OLcjE;5GTQHqI6J@[1PGIH<"<'TF9K<8Ec`=r'ogY;PDQ0$"_AX"YN$jAh\k<SrV/@K^QQ&<`5X?
%7st`Vc?sF@3bLC>32+e;1p$)LcjA!0]>m79:D>_QV9nJe3UE:B*Fip$0:E(5F1k^C?uZ&>@i\3]*=JQn*iO8$X#_-(NR/hmG9Ekc
%Vf&Z7X%''Hk<t#!H+'qd%e#pjFX_Eo6`V9:Sd6@Vdprtn:P93:EI06Y>(snm/9JsYs&I(ppOu?aod8rP1[XB?\FBaThWLA,8VIYS
%KATD4:EXcUg=<O?)Vpr?$WBR=hfc2#0^L_K0d\<d8@Q*5+-l:o@Z6U]]KEAk,S\ZU`t32sBCiR-)FHdh1aVcj]/mY.H+#\E.`Y)S
%VE0W&/o+PCdiN,HH`[4ncd,%^WP%5g5nt4Gb!)Rcjdgr+$mTpDnK,%0VkrH3Hl`N5n.@<Eg@$jH]8u\j;fgI4L#6)bM5B"Lr`rB*
%g06(*Ngasn3*%nl:H)O?/qq9Dg\L5JZ>W?JV_.A"3ZjNG-VHHTfOJ35$e;62ou23Oe6)>8>-:[Xo;`fLoI]i\W/,0`>=kYrJC(Fe
%Oj]A4IB7U9l[,FLU`=9@W6I=_[!34JQVKJ3To]'-HnQqNkBUj"JgPf4)qEJO3_iZO?]qmaHHOq`31D7I]uS61IArI#qD.E70BaIT
%l4^;;DLf[1@,,7#Z(nZ--?$IJQCTk7TJ(*q&2bgk'1Q^,Y,5:0YOughH(q^48d0chjTF?Dqnc%1DcRG-jTDBPYlaYl`:h3sI((Y)
%Jm>`J?6B"_AW[VdZLt3I8#okS?lYe=o]ij7Wab\X?<B+KC*Pb!$_ng4=S%$&kub$1jN=l)\f4\>S7SD--*.nC22LPUXJi.P$Ju9B
%:dS0B.ML&*76M*42%/-da(Ca(.Nh^6#Gp^!"uMunIHorTLN,4uc)I<\e^G->ai@&OV\PMpDC>':VD$PA>!\e-c]H-$gLboT07_bW
%=SYH_qaXHZ7o0"P:]!XX9;8=Y^D+)Vh]l-3"h!4PBr/cL4Y8g6&r(e5^lW%t.R!_`d*lkrdaut):s.;fX7Wb>d*C5.A`M9"[Ths0
%O/G[N3b_P%V2!IJ%!g!I"t.FSB2HP[e2HqarVToBYupZmkW:R%m0qK&X:dCWg,5!VEU4_nmW!8i1/u&jKI*XlK\l0/]ir09oa4W>
%eh<=[d1]Lh&>@hmH-5o.<BnQ'HPcYYph\5,GRp_\I(7fu.;.d]YNBie&#JB_>,H8BmlhBl`)\'X3a1,=%2eD)<9F'>"V":Z8m(5f
%M]1J]>ndY2lTS`3BoVS'jA#AXX[TA\0'cI1or*aWUbW$%[iH:_rY)k.9V%$D97HVMe(T5Io?uNG?6*idr4>a>,FZ"=G6Mp%Qd+Ku
%rRI]8AghS,o$"gC1+R-A,HkTKPK_+2DCKe1%2WNH=0O";rca65+Ph.k)Pj,P)ALBRIuHheR`E1,e3%*Oocd!8f:gZmQe?CT:e7Kc
%0=0b_Bje&7atUnL&9(_*O&biiV=I>S(E1K#kb4osB@X`\LTncWqRAXb,!<3o!]eMuHY`+<Xr*a"8116fp$noX?`Qot`9??bOdWj1
%;$R`66ttdbCMW-715sZB7F`A1f3J.fT]"0KBX*OC)NX2uh\bnlh$MuSjsSdf-)W?\f*6D(WPc3BB<ea8:7olDk4Mo\]Z)e`Qi`[I
%X(.;]d!^JhUt%2&Hs5,*1:9$j0h(>NNB3DUUHiG>N9R4DlTaXt9'j@i;pmIqC[05lTR,XBqSoBYa`-^6CZnE8&W?)V.\ZhlGL?-E
%!]o1>YhJ&FS@]&ZqU4VZgX]Z[a7?#>p;"pd=F%CVQF,dsj=]_m8priP$ng=(n<jC_>e[-"XRD3)[p>%%K*t,'h;@k'0Xsr$fP9+\
%,IP'r&Th$=6@dg6D%"k0<fPj%0orNMP*kCkeBRUKZp+"Xo[UQ/K9Y,W`s$=Z>-B7@9%%UuaEWQQOr2nQrHMY\)PoO-#p6VeFHP/U
%cqd>J)0Yem7fDCgr4foq8UM8>mjKH;!Zb8,m^@cVL@usqiprWQ0$"2/<cRq-kaW(B_.\,NNY=I`BdkrHD^BK:Tf[)'T$cLR2]'<-
%02Er13b1_QZl9/TS\Cc6AWMNTI:dnW]Z3@:O4o<[Z5\M]Z1@QBITPa+0(;lMd#NbhjpeKFMg0m58"KAf(:p85H6[3OEJAGF'g-o8
%2bl!LQ0*!n@UlgUTJuQTcH)=_TD9t1?C@Ha1+Y2m2E(o;5c)jV[/CF8URMr9Ksn`^L_&[*Xc!%IP/rSE'3.L#:.\tYRtOe(^Jbc5
%ibXcX7K0;4o(pYmeF!2%P&\)(@Rj$iP.NfpmRK@^MfC[>-p9ZZIPcZND=_@Jpu-Ei:9%WtU8+c5/KI8E`urk]VPW>F@>]9gJWP><
%],"34:)jkWB.Y-(pHp=)pq*WFYGg^m9(@C6LO[1\6M<UOR<4/H5Wt)uO6qicI:@:Wf=hrKJg'0o,E(L';O.)HrEr*uefUsVaL,$A
%j'\COB:KqMkq.TaJC#`fVf!r*!_YSNmaNhB:2oH_\.jFZ6ANr_nl#Bk$6B%<-`-UM'KSoY-SNI=V9moI@->O8]Ml(]giBT$kk'#P
%Ec4@X.dkSt9@[K3!OndtlY.GL&ip^8gU`Gb>!f,_[+kbW',*0oNmR#C5-8=g'=tf&.s1V#pVQ5ekTJJ`bbKg0+_FN=NSsQONsf&#
%^J)bY$&),raLLce%o#D<&NV&6bl$`m*<Xk5<Tpr#19T`GV2sY=Tn>\Cj8L^&$Q[0mNr-S5/p,Ggm(!'gk<arLTK;H>d^d_UcZJ%D
%V/r=T?$`=qFH1kPn#b]1bi]-C3\4R1_g;6O$Q](;VtKh=d*X5DY:E]VT_<<Q]KQLmdt]7AU]=d63bO)qec1rtp"]opMWO'%l.FTS
%a2O58$UuK+G_BcCIXa/,J%Jg=K]fcY3ms+0j"W?I&",iL*5;Jr]0hkGMYn-ZIU:p'f;ll+1Epr)R]*9a@iYjrPW.DU*U?8[&D_HY
%FK?^\K3Y(]VILVQSNbU`Wf*`a*=3`H!%)9NF)"M,g+IZ-0k7''-86GH*JVqs1kCdB:+\D&es8hPQBJ-roLA$u8!iRNl\WtS"fa$;
%AF9c-d+2)/3e=',lW^NF6AJO#mQ4]$'frj=hro1X[F"H&dHbZA6XsKjkpClZWg,"?\.eTT)_u:n$;43N9HnRr7Z,p]a2&CBMQ0"`
%2bK8=5][0j/VFU;"Q/EbR8iBHb\d*F/s?X5^7_]5O+g=SQ)%JJVse!_)$hZ!*TUqlk]HWsd(,U^i"[M5<15=CG.L?c6bm/K]C'd_
%GCLfpWTT;05IijK<c4q4:7"NsoSIIK"mNr!a!\HW+Wr.CI-d;f@LN:`=S^7N,`!W-CT_j:Y,7U"$?Elc*:e*X%%+I^&RVfKnRE,9
%`L*enW]^a2#=ZO@OnusCmsYh(DesbpNu1)aKaPHmZ)!?!<WNPU4;V(U2fBG(E3S)R6pm++;V&#C1S)agfo9!.RuXOqUUE(_:]C!K
%VT`3T#bOY^8OLLW8)^6%O@^]9a?\d-5c^RHcGa6+Mah=-XQ-deNK_>4U7!Yff`.=9,uIUMb<3hZYiT2s<6%4hL"B=JA)CY>_HT_h
%Vt&NHlH(e!s2Lr//q<E'aVS;s/Q0`#?X-%]eldpH;`>ap94+1TFmX(KL6lEC1hq6`c&5H!8Xf5e+YN-kE4"1o$#sZfJBpB@i^+.7
%j6SJ[h@ua.PR=k]SRIXk`EDQ\.to?,V.qQ2Y/CeSRalRLZU/rd@9,VqD:F]?T\8Ba_t:(mp55j-!pS:#LfjD"]\-?.2'jLN=d[<@
%"W4r80!$!^n+YL[>mn$7YXXsT"X?ifRY+>U54]\pj)]e.[;nEiToASBCa.6<1,C.+[!-2WoBKY%;RU/1n\3Wk8;:97g0)q+-UXq:
%MTZ6Os.Vi??dOferpkh.NCu;S:KH0W5L[H1?[#L*QT(g[-`6'0mUIiLQ&P:L67#HGB=-d[)5T`ue>bW/g5A:EHdKoR>V5>3p<>O3
%NU%83dn]eg?@AR1rV(WWrkWVRXcjW#Oe/*Nl0jqt8p/UoaE-_$VDWM4l>bX]p0)*64fk#cnsqgt;(?OIE&j&^Q/6'fHWeUEU/N(j
%(F%E$GB+e#OA;WdG^L/%m.)VUCNN:X>]`-5G@t];p%WhFV%PWp?fktkP[W^p7LIjLBu"Errm-@Y)ispDD2+"mK0M+d9b[0FK:t`>
%T?WuE"%CFVT>>G_9\lk(X\NIeLm,J80tiG<T'"DDEkTpaGg`=LkFA4Z1;1ul/T]36lhk)Pn:*&9e+=)6=Kll"3L$Y6J"mBCTXdXe
%[-?W+^WhJngtR'IX72pEN'\&>d`^i5G,Lc+:=k4[H..2BnF;0kN$s(\Mls00;kRnJ'X=Kqdjig_aZ0,6S>CZGaJ%S&4lgg[/F6)Y
%"JpkI-3pboYsAOuR.lpuSY0rYcO[%'a6ONtJ$G?+K6XR%#;O>bfd3EckZG\f>[>OZ??k#f?+dV9Xm0DM]1Og`YrlRPGV#A?&"14!
%N0;?-mqf)bQ<NJp"qgS"Ji3G&/0MpB"o.9Re3=H&P3@DeTBdWf^e=UWI%<E?'n:SZP51"JU"^?tlfk:Cm5475M&Uc$ql".I]^rWX
%cS:OElk7m$6#F'0hH_5h)\jrMQZg'S5*<N.Qb7+o'3p$15l'*7BUA2^4%\boOW[3h2EgIX*AK/>2LXXu2"ch*BD9.i,N$_3-fI>2
%r(?:$GJe?/$UPYe3-WL<`#`.kLA-n`%)taJ^E;W(bo3,Z]6:Tr5#7giOmO$"7pDNt8!\>/5)4huk!1GbXb$G`GHbbFp(okGdkBkU
%o@JP)&IjJ-o;-VpI)o?gOd^buh*.2\15c7FTQ$K:QF,c%!+)9nfq?4ukD[m\l5*%kEN0V72lS/"a/MP%+@n0-5>F)qL.@:D8YTQ7
%Cgd13Z?"cX[:HBhHg4LGj]?;:LA;WjWiaulroq"HnI7X.TKpI%PBMASPu9qW.59km!j&);Ml^=#G]U)IaDO*$I[/t?Y"\sJggjJV
%ZfBdrDrYo.cHSUdkB(TL_PlN#L.^>!^r4LR-N8SH7hKcn^MOGX4</\f(n\Pr%u`HQlbPeE"r@Lk:+g]%[P0D'2qRS\dt,W?iB)F2
%ARKn8ZnsK,q>rm+P:J=dH$`rif)g>.A[`-[)\:n?@#Q*)m:]mJakqhkh6#Vn>OY-m+9)Opr'&uW?f?dt7sk##)?4u6YO1;EQ\$mK
%9]4k]=pPRkT7M]tihVJlX`YV(Dd]f:+4Q7/d?!)Tqt<a0r,shHlidfu1-BWHS%\b?%-0B=0BTWRs--j=:@l5L]OM"!;_N62@$UFE
%CY!nJreD`[F)Apn?^^>FT.F=0f7t7p9LWD1pYfV\gc0YjK;7-.DqVLk]QLko(XK@:bNmL0C[Q6Z*A'YVd<uB.qqfR^^M\*Vk8Xro
%[^,_Po&RUI)=t5]3tos9a62d79)eEiGAd'%\1H.<109ha=2r*U.i9(`<NSNsHMO7ZKMe+5C"'2bWUfT4r>r"D7;DP/ZS;a/SC@YU
%XuWjT8i,;eNA&LT1BNn_Xg>tcVgaI4il$2h?<Z*Ym>flc"do,/4)<]Q0<Z?qat(4i.2Q'qa74(@=80,56Z\#&g7EN#H;^6I3%X3(
%QL<AHH-WQe>IhQ.+:koNIHP(S]RR1C6!#cT#q9b%VLH/kYt\RiNGPBEE7Fkh42*7O:QBmc=5R4d4/fp-)=M2N\e!,h9aqN7*U(!Y
%UNH=G@'TBo"-ua2R/G<#rM+BgnU"G_nV]U5ft%bPXSo];<P6%p+5da_[1UW0\0sIM2oiu%WuJtC%.S.iWsCj?F0T4-CtJ!HT!jA2
%E%aOhAZKi4ZJ6k#S_63Y=R[GScW`Cc\'L*SfDl3W/'TViAlUN<kK!3II\tnfR%;I)?#L^,7"o*M1%X2"PTGe+biRF?->`WhQD)*T
%cUu:tg*tf?N/XH7AZ[`!G^Y6nI%N[1)AiksoVJHK;Gl+r0am8+57(!?*\&bD:-Q+V@UDqu0@;<gNAS$?f!DuL]3,6)]6Y\>`(J'%
%^->t):@"P;D2G(D>2%dFgZ]stK\`NWMM43hKAH666T5;7[]@/\B^nOC2DPAge`!>feATq]%4<C0=5L^ei?lg?kmL[PG8jh?Rcmh`
%1WpkaPd.O!Hc8^-',:;FNDFqMWSLN@ULCsYHb<d'9sWt%ATQC?;i.%DQiNuUZ,jL#T>)@r9m!t]g2\>RDDC`_WOp0,Kkq!"6_W7_
%ZueIFEETsH<jm8OaV;s*>]klIL`^7Ga61cea,R?Tjn6D1lLrA.a/I9X:7mF`WgVtBo,>TG]a^KbIc.X^Ot?-<+lc_Zo&rLGCtTO4
%.pZ"7oZ?:YnT]F+D7oH;Wk!B?!fhdH]1''as2Ycg#\+;[7\@#%R,Jg;&.r4shJ<ej;B+#do^1X_lXD3q;n(:L%NFhH^V1l6^h2)3
%AmorFU6U3V1Ni;jcX7R0=[M=&4f:5ngo9d!LFr5(lNZ`]JVrd@Ng-f1:4r6oa!2TMCW2nAr\kP;qN:ICoBSoaaD;>c[&&hk&lurC
%!*n5028sFf5J=*<U]uD\;EUo(f_0r8mCs`UjYi]c^H?[ZL=^@:6f(pN[R*6N(=N`OlW+::]eMO&I@)p*nM[C8_/t"rGddfLC`a$E
%%\rk_3fb^;fcU^+I1aQGL5ZK@_9^%kO/cNY2_qPuR_uH>[AhpP]+lRN9KRJae*([%"P$_>Kn(S\;5,!rg8tq_0FP(p)a`8\&Fd!8
%W>e1*hu&UXW;,:89QutYPC#7K69tC!c56L"DPLB'SG_JjKp^5Q5CA0O.$E^ghKpS!R+BaUd25)K&0?L:eFt2@0Iu/4gko((?CeYJ
%>T]iE;'\rKescWK*ER8NMiSul$GZ)Tof2[tVHtoh=2jN:HnoUgQUDl\>N$s,qH6p<&PL!k-<V!5AW5's&F3:3gd\,C!]2MNLd_ct
%%t#`M-nZPh;ZAP39^-Cu9_*5"X2W#V0UrMA>0P+fh5iX7p9rLTMd`a15uU)*`<dGnmcPSMki8R6@7$3K!.)k-"(R!JK1dka"U>L_
%*;HJcbg8V"4,P]Q7o?U45m))hBFO9CH;s4o%LeWW((il'M=/.\m/^2sGE.hBou?,raXA0g/^Y)rU-rQYQ`&a.jQ[2Q*(FX`&qbfD
%5j&g"4LJ:A+"m,1boKq26A\rsOkWV@%dJ#?s)uZLD=BbiZfsH.j9t&sm5UU'Fb+'Q;Qi!\qm5OX(=g%'BrZ6D:tJ>>VQa9IXJIPh
%mVe8gA%,TW/%j>/*G_X4Tqa,$FY#gq4#,:ReZkFO=<F`rQWgucH^l\mTD=4&[[/,3<7"?81J14TlO3ToVjL="l=-EO/Et^:YpD_f
%QKjjr;,F\/o6"Db$>F[L!jLbtUWf/uXiad*c._Ep)+d%%U:X^\cK9]aV)/fY7E9.80I=VhkEm_*T`\7]h)$l'PDf:Up,1t?Puji#
%caTt/eb6A*"k+6=@O>I5hSn#u.\1Rb3)Un1&8^Q$dEKqfQ8%LC2+eZP,q?Y[)I'W5C)&rp$;P=r_<sC%7Pq=L"]Ffr):?7HF.64.
%c'sc[)Aog3^8HW1:^I'#1ZeKdVk3)R?g:aC2i'S5V5hSYD,]EUhJ,pFMGHm:jG"ZNX$!lG8[-S!f/d!&K[*!;7(lKfGbFa^7]$;e
%m=Et:FJ_6f;tt4;l++J8$TG1d[HR\#H_[?o3)g-0VD\aOM&]eMX%fGEF\02+)6+!B$*Nbs[HT%hB?$+_YeUHe@,VVP#LaO.m;OZB
%[nF:G3kB.?Z*d`-2CMRM)tu1N:-,h*+4I)+)gk,Y?G@?>n:7i%F`[4s<j+)kc2d3?<a.1?/n-*:A"5A^:p\QL8QpYaN5n-2B#l7?
%;X&0P#KkI8-*K=R038K1W=AXQWS@)%CjQ-mkQg-b]7>@B"_cfnmW@dtd:Xt$q9FJ2"Y-5q_.V1sQ9*V$dVqCH]4pXi+EmG6UTJ:A
%BjKQ@rCtO+NUs%ES&fM;rE"8bibB0d;B%%ePDas9,UpoR/k"'?f4j8ml5!l3cY>\M5EDPda$KDK@h\WuREOX`)pFWj7C-bf2d<mT
%.UBd%9a"hUfm-$=7AX*'(sLh7a?NKBQDV?f%[YJm:0(MR'2RC#%(33+1>$@Y':OCJj(I=jmDu=Bo:KYHD2%fQS]4(.dJ,F3NOd$8
%W8--gMmpR!pTWA7m88ZMWIl&LF#nUF&SA^5E&DOpoOR=m/P-'+rZ!]*1XL,h?/qn@Vc*Ct%XX_jjQaJe%o4F6/ERgM:V-:JSc2dE
%a:C97lXThme>uT>QVTZMd+&*2JbD];7ltU%qbh:.!Fk3mH#3FaAmB\2BlYYY;4cFA<),1Rb:G1'GTDf\@0.ZO8#m^Z0B]RB>q<[t
%oJt2(R8Z?5A\`&*rC9m+BQSnL;!AFUra%$[:*(*#q^FmW5j+#N)P#AS:`:-'&5c\Pglt_BdsolbYc>\,e\^K8BlPjd/7:9c`nl-;
%[f,j@5%o?3Tb;T)-m$4TloTCr5s3oOcq1e<j*lQ/CH$m;LM>+(-H7JKR)K*Lb?P3&GHpX*RYmIVd)"iY+N*.WqB1YH[!0D=>nqNF
%OtqPaHZ]bE)j>H`pi1>H1CI-*m%=-^q[E'JrfEGQ]O-(&s,76C5$hfR@bf1Y6*HMY].)-119Fqo@.,!Li\$L^:>^h(?TunsM9C[+
%PM:B%cu&+a49&J*+5;(CN%XO9<f0u%3ZRS/8jK>=\OEqFD(%>Kq0=kW3]V0eMX8o>\7q-L\4>h<NIueGdc,nnaU@:bCW[0/[IV]*
%bms6\?c.T`rJf\j=.ee\lsk=?1pssS1*M(%JVdHY)4Q]%.S"+HJQZ!SFP+mi8J$0da1ueJe*?;CkZRLYa6l6-hZ%PD'\?+DG+(lI
%*?#/IF=oc8C_hbU!A$DXh;ABj7rq2DjXCUp5F6u?R#gKA-;RX.AsNd`S]\frFe.EpZKSt'Ag"8k=6?(c"Tm9&W4s-,2V,;ENMk*4
%(>Jk2I;"qm2g-nhAi]0.34m^MH.2Tqn6gP1Tm3guYuA6fGX%$>O=!P3U*+onC%c4]<;q>04sXJF`8:TSSFJ95HbKBe:uqt(#.j\4
%"a%'3f]WiYHZ$E^h]A@LmA$BabJ5:m:HL-`"i)m.fV]V]pHuVD."d[)==VL1oq4pYMdY#7f/'nb\&[>?r1K,!%eCX#dcKlf61nm`
%n.)P"Z7SNjS9&l"?@LA&,*)XP?1)=Kn=QV4HXgrD9+<b*iVY)k=kot2/j<D!b37s(&Lg13$&14JnV<%7K-4*$d<K98\Pi<QT6mV&
%5*V?g`uCZg2[oC1E/PMlVh%<K?nApnl2Jg5/WL^&_lla6s*0r<WoP8I*r/#jk@[QqNjiG#`j8Q<Xi`\:j$4ud'J,m9WWTn[la<89
%I_Vk@2CMj^o=tM=3FoR;5J$YY8p9aucC"aJ\FV.j2a$0'hrWJfk#8.u)9_6iaJ#;kq^2(7C:cgQb_!ptPE%c@Il0EJ2kQ?R8EJkB
%Z>Lnd01n%o?U)^IIc`UKU\u7nL.CcWDLS$#TS8+--?ieu^]4(n0(R[;_OP40&l%8E@,u.s@=F9_k.*B!6j#6k7^".FklLMDg9n@'
%-=gpH<T7LF$U"4KE\E[;/"df>D)2:([ZrjAA6^Zlh\<$3aQCslG.D%A>5XWY4clFn%kQ!i,o%8hpQ8l!9B0?U6Lm-#<W4t!<P5S$
%I`!ndca^_;#?NCQ.mJHR(#e&`NU4q2m!hta\bbqmC$]G]SZ+t!;2uJo0m.<9I[,E\I*@fopTK%-*Z.lccgca)HRLiEr)b>?_np[#
%"jq[b0]!33V3)]WJXAKqN+QsYN/B\hHJ6(<m([]H3mR(rke*N:/N2a?X3XqEVleg&q-Og06cd4>BgY0%3`jVbT!a.Wnhn:]!=te(
%4Uon!&%/oKdDg^LG[]^6'6Zm][6;1s`7dIZ+qLiBm^rp0hD#OZoCdlX%6lt*Z+G#N_t0LuXtXQ36^BZ]gd^-a6'tsX@!<<X_OQ2b
%F.XmDNXtU+:rmI=(LDR,o?Ylf/#%dS5/o$EW3GtUEa'u!>VDA_hoipVRmV6@YK_R.`$U+TICtZXg]4prI7@Sn-^2"^1YqWtnCSI(
%[=aj#=.#L1%8G[HIUj$fLTu*f3;R]fo34:DA*$YPV3-,<\pfOAD`1%8-J[`FgqL6GV$2k*!"107M`8qt7JZlE`OX-29Jka%\XB4&
%@$@@R;3(68,F-^U7!3D1WgL\_nZ-]mq!8p'J*Xe\J$iCU"Zm*]ZTFH"i?Q?'Ik?.Za\^dW!pj@Se>sWr$sfV:>*NDVVt4,HLV]mG
%mo6ui@_I6\>$*HCqaG".qk/&=[2s(a]0AoSVk<jOPE21<d[<XWEdu\uVtYm2O>f]$9Yb$V;UE[T-+t'2QK)"<%hnOY<Qk2?rg9aV
%4A64FVTUd]H%0FO;QgPcc-*)MO4+af4fso*SlWBV(_YD_I*2\6+\Gbb\\kbj`m=3(\it2&6Z7R0a<-_6`X[`jJ2\f26h4jsV5;jX
%/HC:72oqKtrqZ&4;]_Ag*sr,O_3in[,qbEP:A0ut^%G+.)QL*UE:a)/c1h1[oc9s&rg;F;I(4Q.Hb6u*IHlUVcLh'N._hqJgJ8X3
%Q++r[Xipb=;0m,-5$gF$oM>3WjaS!](Hi>qNTZ5CITCL,R2jA_B6FMQb=dhq8nPu^k?\P:UVcer\X`Zp'Zk3Mc$,)p>kX`/IJ=3W
%OJ't&1\6V]GGFu3oBZ//V>8_5fYm?A\$u1>Vs;1g]CWo(b!nQZnQZqbmh?"NVeZ&+ja><U-s!blXPM[]a"544*6g:`7%H8E^)K1e
%H=o':bsJ2RXLEa<G55/=`*TG3:f`L`q,prGFVbX:)rFbqA@(XP]3V`bcHEDfrJHSK:\gGBrNijbIWJ=F>r@)Ab;lg)(<3=[24r:/
%;a#8X2TMcQ6WmWb50KAi<SoJc3Gm0fhelC>@EGi)XpYc,Ng?0J?_a2KA&E(\4=`*M>e57'k_*]qBt5e4p)#C3*QmorDlm8Hjg2Du
%EJY7Dp.%Lt/tr=lQB*%d5$7s\`:)aW^r4C@m_J&Ifc[/S0B"!/6-AuPnF8d+p0iDXnnI+qZb$+fV!5+^0m@$tc>=_P(<ClMk-bgb
%$P\O_F'ApB"g4_8D@>F05f))/[tX<SOI5L%gHtZdBJmJD>6pi)GQ7EUD'=9BBS^fm[^]#h[LbV1N2#U*gHtZd6I.tOg_Rb>_9SoJ
%D@>F0T]"a7\LiIV+\WIRM[;5P&t3\Z;KlMjp=7`s%.l3-hMg=%1<Ae!]c"M)AWQu4]c"M)APcJOpLa'CQ%A!6H8Bm1b!>4EjK(o0
%PsOgTm`jsd.g%LXoOda@Q,0WJ!cLQs>T*#KiQ_/#.q=3K*sHh<[W)Fkh`:cI2a9fVNBue@TqtOX=)!P3[T?T.3.(,@%KVcFh3jp9
%Z/CX9%mM"6H)L0.)iTQWd^X4"ZY2fZjegmA(>st5V:+P[qAT8c[nuUM2D9qX90[1_Y="@n^*gg9&2Na<cO(7O.L4GJ=S*$$H(1gh
%AJ(uFR1r=^+U5"lbtMVk1@cE+YKYgn09VD,KRRbFUT!a!g<0iVh$e3c+3ek7?*@H`G%etiYN,cDldi#5Bb2CN1(&D(3&U9Mq\`0h
%3[fjm_4+6pLZm>LTpe'=qW-771C\GlN1rS?Q*-,Pn!Tdp.)`=pg;_Rs..#3b(4>(^K/b<9+)PJE>NJ'"A0ud8l6K#AaKNLSQLBgq
%2]lAG#_ODC$n>GregL0B:#uQk<BTVh\QQMtb$W;?P)8(7]Q8rlbP`\OCpR4=XlAk.3G?JqdsNqme6Jf?VX80!dR2t8&"oQIV9)+&
%oHDZ7*14!DV]m&?A,b#"(Q-Bm7]8jAJ:XpgjQt[*2UGqhOPeKq0+6@Fp'IYmlidb<\H9C[^:Qg&k:#tcjU2UUJ6lL:.3k]5LDZ;m
%gLhIVULC).D#/;F)E<b$N#n;V_T'og0hKkX<#UP+;p@/GMh69,DM^J6md,sTK)5L!C'p2m8d2!`00b3%cCMS8\U&LKB9CoL!em6O
%X/8qAib1-!OPG2[=s2;i?PBuJipH-a#AO-&<Crt"7CB.o:_gT&<GPS`KE[7GIon-oC]R7kQJR9V#jCDe*IW0D'!RY+d=l$*N+S\8
%05t%mPt6US3=%ANPZ]jj37fFCE>utcTFB_HH/-8O!1Uf>eji25>3HRiS@ChjL!CZ;T,X93'Z)Y359*gW"ZMg:/:ITe2Z*hOZPg.-
%dZ6#ai2h-h#q_Q*c')!MMsK@C]pk8p<b)hZcW*d\2?tb#]lgCq1c`nJXk#GS'1]*%K`1Q-\^?2#g\fXFog%q&s!&>gf(R2B6%4Al
%jU916P"*VZjfo$@#$Ck+Z[n]-F#*s&Y>ReF?\AqFmfF5APG`iB5p&M+$,:0g\'?Sn]t)Pu&!&B-N#PAHMAhi8gY;&r\oE54LK;Yt
%oRk$p\)ji?0]"S'D[S/8)QRJP>5keo>.50H20>](bj@R5/QZ-AW4usl=R5ilV=HFJ<a8@@\b:)5/@Wl-NR&^1Y0hn<f<i)0\"h`N
%`b"[\(<gKJgR_p3-M\Fq%q%C32@@aUb$\Y#pt%G(Fl+j5YDjC0\&S%okc%@1AEdMVUcri_nFNg<fV>TWKnlM(45nDVDHlaZDJ/"m
%+TD4>G[-`IVf(\,bN]UXYN[0$c5&^CAG8rC;,$L,l"Nfi-!l%*<_eXe/US]t<tfMMQ2H1s:ao]dN`h357bEkuN@s)Ag1RCJ0/ZQp
%h4RVYs2Sc3lO=DTld,3k`O"CCn^Z.PN4*[_^bh/!dl@LfD%1#k"hhp8GNIF-q@5<RYaVD(j8su0ouCFkQ""70#RHmPPHYS\KU]tU
%rKT:iRX*\aBlu9\4fH/^Hs1nmVlME41gmn1pQ7J0G>N\^Xg!#2i`>S02:gtl]7Xg?3@@/W`7);$Df^<&pKoN8"J:5U:[@DFAPKSg
%WneG3]%mp=$EUYRe*:sK,RD,O(1-rfoD"\n)`+V&g!t7M2>4AqS=Y5Lc%uf0_&%F7']:c!VY.B_,,VF%feieZDRZ5OGra:q_"Mgn
%/g.buO+MB/T742`AN&s/=T5@2lF9>49]sUZX3ZdH=-5TI>kX0:m9F(ihq'K4Z?EWnUDe*8)-o4Hi+bOA]sKU[p7l$_(^m:b<H-`q
%R'.Qg5uEF:gba4!j,W5E`m1G_[>0sUYE#1bD&t`b0*fN?b\%F5T_U1epWUPKC8ah-k%9WKIS_H.qrBR,-cjZEZ![Gi4)i?^?)uTN
%A#0d25kW%.D#.mVD+1,5P(+5pO@V)Lp!mFHID&ZA5((Ai^j@^TahT;kIjG<26MD^JX5*m-MVsa6$BPP$cu`SdJ6J'K7V:*We7*ZV
%kufiV4,!#?[G\(t]S`FK9@UQN8>,X`jR*'QdSsfAG"9QQVui5eDM)-4Vk+U1+t(T3TI">]F-Y:#e1s2m>+ud86q>qH]5<Q0.A@UN
%.>_P;+[R9`RHJE`$P0d*C4./)[:<@m8Y.-QKNd\gcX!Q"EB7,7Tt=;&:/BWLXIL_D"E@]4YUsVW\!Mho_Y8^bln]8hjfhI+XVKGK
%DMq]#=VaMYY#25`51*OPL3Q.YgWm@\(T>m&Z;?;d;![\c8!XYKa^5m=/QLo]MiOSVDH_5cYnLi-Faqe';"%X3FsIN:24^Gl92S?4
%=qSC[L.A-C0p+:tIiG1LdFT7g>$A'#lb"NY]an/1Mt,iq*QGBO^)F,Z<G3sthZkZm7Z27^g*qcH`O>Kn['sSXpXqCKHD_T8UTb,(
%aEPR3.EJbsqeo%5RH"4bE>oZ$g4((_oMO&@2;*j$C:aSo;rs=nHbaql(iF85#ScKY'_^t,:^k5LactV4+^SF]01QBNStbjp7KF[J
%,H0.I`I=d'_InO>R&4=pF6^?PWu-NXKjlI(5^"n([J#+JkaA43D15)qK3H:lE@X7bXC<T[-<8QQS-45:'l"K;GY1$$3T:X^B$IFl
%a'5:h^rYu6?a6PPrh?l&%,j!*[Q4-]9bV94hmZVp]6%)R#i,sA\n[uWL:/X=YBF@"NX`Bd/b@mdpB4g]B0t,5dSl;o0anUS!S>3S
%2eO]Alc8FABdrXub_%Xm_`5t^$>GLV*Fj[prb5dP'8?"H:VV*Hf0=/n_Q1m"Cr<ZA4hgVEI_.KlZ'Lecp!d`QPEf$(]/\cQ05]K:
%!FF_j56_.9<o5!>QU1ERUJCc<W*eHAikk04e^i,=nS5d!"D]&aj8m4A^StF4fF3lDTO6qe:V6PG;3][Bj_WAZ0A_ZVs56uN"Buqc
%3joln,)+7@_(IiJ9XK1q]DeO!P\KJq0OX1FGVs]ONWE?8_A:T8-9b'a`Kf5p5bu&J>4P@uqOLb1g1pg7+=sH$1MuQ_:<SX%!PGM2
%r`.5sD!SK's$TOb?8=IWhR-qoeGeV&D6\1-P#6go8[$l9fWrOMXIT:(QD2CDbgR*Rk@jBopEUA'*e]JK:t[Je+NUHf.,<GChH3kn
%:V1p*4Bu-%nlrkQ1N8eP7Vp"%`VC4ONomRT_Z>aK$5<pp%S5BPY:j._2@#PO:?:f#?a$^(VaDG9Ap@g`hfBuj]R2p@8@b#L9G'#8
%e_L)B\<Ijf0iYhb_esFdg1X=Ql.>cW8K55q@q+S$,=.;;#[#_Pm5N75C\%l$KVq25r%'gQB:N7_Z]!e%_o_Jf<auVXU-FO%LJ'![
%&OREbp;WO]Y).XS>DEA]3=>Ku1X(C%*<l-a(+qJE;2XjOm,I)n0d'BbW#Qp\s!^Pl"YgTAiYSQMHtrNLh?-<Kh2hK&55C*A.(jB#
%"/=?0L%@qO%Qctpoj1YY9+U'aC\>lT03'iIS:8*$Q<:,c+L$5T=#mu7g&i<8?Y+qiJlmnDeG*I6\1t8Z9M?lTTN&E[Z?5+=)u4n:
%oFCM<;<C1-F%9^/js8(G6ON^^Xc4rtX8/Nc*DqcY(D`P^H+uJ]aR<Ug4sj?>@Prb[KDF\s\R-N\SB$[4_SgoIrkPk^'s8Jd#DL0=
%AmI2..dIqOqP)JDLhfZ84uYDt1i$$F:cY1+#e*P*X*r6P8EI#bIpd]rU#tc0[kIHqqTrgHB]$F6-.)B>ehnLn]=F,pIQ;"[V7a)=
%L3%92N3JPJJaqdM8LS+^"?VJKqo8)S(@*X&kP;7>p/U(fqr*6N3/Df]V[2;&q'$@/Y3]TiYXSQ;a&>UT$PEN2WF6WWEN_2VQuTCc
%==37f[f!j==P9t2V'p0M6[`tsUUs\/2iLh6Xjq<<I,(#?a#4/1L@MLnp6U*%oD#[?*q=Y4KB\OO^`":/G6b(8rCN]gm%8LrolUfn
%7EgY)p3H68fo.0^.;`A.=k:lRbNI4*82U>n)Pi_5gCY%TMNF]&XqZA6^?3];U!8,@>cmedTj<2qq><L#@6JYZGg,>j^X>h"j\r6s
%//20k#NM)ud?>S"E?R6cfr;(#8YZQ<%ML%8LK-uKJBs2XQ)sI[qfn51qLaKZ;LLoiIr+u\^4MKZj!#^@OqkQHh\Od,NdlmmOUJf3
%j`EA&I2ZV2TCU:Cat=M!P[NG9Yn!>rHTP?RCgRRA>6P%OFM%8l%*>,q_;DB3rTNGL2K@G\T%gMD,\oQGgK3>WHT_QAId<q1H5LIO
%8OJ`A!O?0TncE=4ceP)AnsNDUH=O=CeQs/'.b\Cg43FZH2/E]/g1TN0U<;KRqI.a>p#^L)eJRTraAs]WPl-)Am2K>6PI>"5Rl39)
%]#p)8U\a\R.sJI8>h=?e_Kb9BOHPuVH0.,[o\@i0)!O0"oi0fS@J=i2SakIK0LPD@rY:'VB;NCYA)gY!OukjP$Y-AQ5dT.3be7X1
%-`]H^jt2S4l<]i>djFmBR/SVq][mLO'ad]^]GLdjHXWj5fm\.DF>['CaT%^-5JpM2glNB(bh5i$PdTe"R(&YCL]#aT77QUnj6Ss$
%_b.J(EI"WH&#*)TMI@&RYL[qC`FB9"_`q80FgC*e<\Nq4f(EZC:$Ftbg3Y/^D<tX9`jgDYdR>+/bX<#hHZH>N40`/00OeZW>ju7b
%[/OkCcGB6nQZMVH(,n)F?HK;+:1G(!:6;Xg0Z5dNLH4Xp5W8n[ITCqJgmkMe(2i`!VrdN0]eF<#2H_kkk"\S&chC^AV7&R5A?n+U
%h^T/oP(3kfaH[B6A%Cjpe5#8.E4ulQ:"OVLp!.i#CXZe(,=280@@7^cg!+mIWPP=fn]gJKaS)rKhW'P/P6bUmp\FAGl#Pj[:=?j5
%F]NZOU00Q[e+8:\-5qT.P6IZ?"IktWnU)ZHEqtm/:]pfML!YB(jPMXbrA3WK;k(:cocRF!Nu@AQLOsg<-fq663JSWj56:EBo&K=q
%*jJKJQe/]Bos=\/";=2lBE+mGs5BTQhldu*^L>md%i_58o=f^6daS/@VSA,lod<]6[u\sSj5]k/l0ReeqPOY.]2INm/G2g5Z_pUW
%l'_NJR$2[pO2Fa28tS>qqkjeIcO]g"YKBUiq>\,j^O>a\0DrP4^HI(Vm,*-W0E1g5i!&4.gk1g)Iqek,r+#L$pAO:j=."KRItCG!
%APKf:)ZP@]2;nLYrs/S3"Fn#cf`1?j[JlHjK-RMuU(;_.m/*+QHSC;+4Q;"c[lXMJrl;=@^[U-rk2(!`8#'6gU]4m$Vga',h*,-=
%Ntr)u"ru1Uo>__4)_>PmI^OZ?p%`+hZLRj9EI!]5pX-sXs)[mQHQdh$%#>T=qD`i5I^ko>/j@$5?+t1ScO9[,b]NHB&\Ot5:MjF0
%4g]HWoBbK1o6kpgn*1j<'F1AY5!1dls6o@PA`D)rT0Jr#i!4CP4M:Ghe1P[CDa$3cWmTp=P.rA_Ok.q8ZnCO=ICW3:[hg,F?d'gW
%rt@M)p.m8(I5F*mpiQCQHhO]6H$8_$p@QboFNoh(Kg.`<Su^cJT?CS#B/n35g"Y3?4.h0]87X3u9=;+(MhfKbe[*<>('CTGbO6Ot
%o^D5;mH+6MB@"*qr]U$LaE=;Vl!H#FF-g\j(@ViEq1l6Q_cZn4(lJkbdh<?Q17(f$^KR9E0u]4<6&+Q6%G*?3-[!VUlAk!M'9]#W
%Q.9uW?[).DX''oOUoS'Tpg4%US?-LQAq(CV*<P1Q[d!(uUBFEFm&Y!4DSJ$Bl"+/Xen'qUA:5,5dUMS8@)ToBX`F='$23GSs8!0_
%*\0/eVNhJ=-EFUZIf]1+*Th(J\kR]H(b2Su^*Bi!@dD[#%IeI<@pnuo8bbZ![*\%6QXaV:cZ[&C[d_r7=T]`8IEbW]D)DL%-1WUi
%n6cWXQGNW^_q!]<082]B7,*lTqNT=Q['H"\&sbALJ9'?EU,:n.bb;%,D;/4>o*l[7K'G%oAXG5&H<J:2NW/(n(#'mgQP`:f1CL,=
%,t&CFoTr+sHIugTiQii<P47`08@$LAR9_L1*U/g1?>??Gjf!#PlY/W$b#/$gbfs3af$q$pA'=)9]6;cP!/&h>k1$OT2J3CPbbKH8
%D,8pRn?cbKZ?<V.eu*BSe)l_"3pjFc>Fi2GS[SH4X!rjQP@r;:Zm54f%q!0ma3WHLr(Rb.L1+^H6W;:L2o*;=C`,WOD)eOdTTcg7
%rY<p;$l9[fa>1R3<bH*7N&rAj%b!0b'mIMTVC3*?Ke@Mk@4Q%<'Ke\MiNr&PTuFh;@_ktk??s'2/7bn5:#q?A#3+@N&RcJ!.]A4)
%a-ddgME,#9cs8SGppR.W$j14[EYZ8U!t31+'O9a@Cs+Q'c8^R;,XiRLpt#f#B&FFu_f1b_9_eB!#a7qQKN,&p47[^RLlf49B.ZhT
%#n5S0>-=_FK(!4j*H4A+ooK3QVp7:k$pTT:@bXhj4$.RR-e;ReQJ:uWiG!c)_4rU-4Ef?m7ujU63-+9:<`>)kZ'`N)jFlcMRcbNR
%.ORp*-kB-H<m>_"1_Iu1/-dG>buWp/*OY-#<"'EWM/@Kp;"0!\@<koTZ@IkCVB94ai>g=R*BZc?F'Q/:QH"P)oKrOn$gSsbi"kI-
%VeChU_l[Mo;i`bt5:.b6Is[b.[3,NM:_0,W9FPOP*,job_)h)YLn"IEPI2u@hI=s\JHpHUY(h"6b;%60fFdK^->H)Y7[Q(9-Sd"%
%+\[hH&W8?bj?uPhlEMS?f=^=P>8jHFZ795`^[`A0e9);'8M),663a*S3p.23r$5m3D,9!_cDg[V>AfU&kKbJ9p$gocV_13(i7-kF
%,Sh0?JjU.m)@i]k1rZP.^skLCWr`7h!R\MejnJ58i=Y?Xe$(CQ;1((k/VE,C@:hCO2^Bdm2]TO!S+<li*/G-#UZMeLXuX&p1;SA1
%qA]40!8@2t9%Ir<gP&]<"GNK0TV=21%OKmdZ^,IODgO12kF(m",`nCO"QXV6#7D@!]Iu]s3*Fl(1s>55D\6A-rWTeSBZ@:*]&C7,
%Y^?n0E'W_Dn->9[OU\c?6mJ=@3)GlUg(H6pE6SPS,H1(J$k^U'h0&b_Y*kq3\dj)4p&gEEd'hW+$./uC-hOc2;6[@1,_Enj/98#s
%%69_)/N@?Tpm,-m%T=ZY[U?WSX_e03_p.lD4+<"4JE<(_[Ku4]*"Ce4a0SJH>%^qDr5`95@)<$PHX-l!$!`"@NZA7JY%t@TC;(a.
%7.HfJ>%^[!N\3V;=n%s,7O7CSKCl7Kf`p2>)/A)>@^'7g0rlhqbAiphT[n!b(?2'jfs^<&Q3r6"G(:k@'XnKJeFbBB>\WMm./-RB
%L(k]H#FZJ6WLTV)fWM3Z&`%Hrm!K*H\<@)*nthDgTF_E@@">?,BH3kFccQC<9I;5b'D*!VX($;l_bA6-&I0=Qs(o[_4P*!hTUCP6
%Z_)?k!KiYTO;V0-q&V3og2hPBJfWdD>htL8\cWU'FBtUag^X$OK\-PKcBY>+h+OKu5IS6[lmdah20$B?m+0[=?.X5J,L-[u`paCs
%gqKZ_:<78Q!/<.g1>ca!7b9mrEfV\,TM6I!ABcnNM1Q?#RZ&Ub%%s"?"=tjRIl)/5-?_cb(>f]t8tJiZ<>T/tr@t?g1pM`O9/Ei=
%!#gonH\bV7M`r4iBF2WD3AdN[bE8Gc530iil9HD$9-EjNq<1r?C-hnXEReC1(sW-Kd6i=]HoD0CjZ/&lS.1R>CO>WYW+9,HVgLl6
%8[A_s@bTd[@WBY>PEMdc/I;@<>=)2+,bUkZi$(nAncCtj1B-RI+k3nc`?c'&*Wgls+1uBof`3%>_6jG3FiU>D(kC:14tm`++b`']
%EV%1lUF/#dn>7'CXq(;ackG&?##MHM=N$g3lC&2-C3C)uO+oOK\KXB`U8C@o_6$r:SIet;]<;%"r%*G)@eh^NO.2t29_?spfUDmQ
%fcr89E3+$(0oJ\-9i+FU;2.\"*lA;Q=9^NE&,+U0>a:Ge$"j]QTf$pK=rom6qM5-n3%.,rA/3"9-nW06:dd+1-u;U%W#0Cea4A\d
%'Vrj*li7i5l'_anQ$];fKG9(^gZ$;o8WBC9X%P:KmNk`uTA/3>IMKcNU>2ph[kZc:'4<B/-C((Lgg_$j[##pWf.Di0FUpL$B1;%!
%R4E56Tp^<c0psA+7-islOa31Y:^E>a*UnrRod*QOCtg3%J=J?uh]D2Fm%K:9l)0F^'35tX0%34/L'@@TVK6Uje4A'N:tu>hZ7o.h
%1jmY1bWpjf+#WRV4cApU?s!R>.,d.?"I8&VWT0<Z&H@b?i!gLZFfg+,3'PNQjb*]l2F&oaN=#5AE`Zg0a2L\0!"mCB)@k+fK,q;b
%kRO"GKq9?i:s^%B)>KQl!j"/81`J'T&S0R.[YIa"5mC5".()41I0>[iKXP[^dTU,2/AsH0"lbg-C*"K]r=t,&TeJjk5fn\?q-L:T
%3nQFQa$;tC4lZ>D6Hk[e["5$&=_u6LD_\ng7Za=bf/-Q\ij:RKVbI.;gG)]i$edL?HXs'`j,LZ->VMk=RCA:%0U>H8".5J;,9h\T
%YY@T==c`7X#SI&+j)V\e^]N?r(8%Rh*TP^+Q:ms;dt.u@La#,F7Z#MPg.>Z5TOLQ!rdk;EdjAl3/&cI(3#\@r+p0dA!bDVY:]jAI
%P$,E7EQ;JL9INGa\I%7?8ZIp?bFqUolE3Bf+\?8;(QpVN'6WVsRf:fS`\EUC-1fsBnBQmacF%c?-VY-tU_VgUcgV<"O\c).4V0<U
%/Yht`'2,d290iD)SXc>Y'uW[6L'BI]N><)"r7(dHCe<HfS02G#p%3q[H84YH>rWn<oa59&lUXj4ppNW#`@eap"QIn*0TrS!JR=P#
%WW5cOcaj7DS@#G[hf0>AqhXO]F_uL`E.QJGI"olrq6noh,Ppc,KM+I?-#i)*fEN.W;V@o6K&5Y"T'Xl0OQ0JEkgFX1[CbXL1"d$T
%/eK^C8FqGF(O7]d%GW#FZLA(?&gED7CE1JcSkgt(R'NgtJl!@OJpJ9jAB@XN\[nUnm-o!d.`d:R2;"rLBOr3>0"&W2_0f]=T!$"1
%a=;/o3L1=%2KE?nXs$(WG:09i)&/g%$k1KS)N>u4oN;YR[`%2Z-srEe3[.AR&j^g(AS*>1!6N=kQ@X_>P*9$8J'#gVksX>gc2MdR
%)9Y9SQM_bck7T?b.eSqAeotXQJj:?b-(9o]+ml3nU+pr#J.gti#,#Eunr@8b0b\IYo4"ng]=:TonPVG*D"ugO#Z\$66E%D,0mtEb
%l'A)p!$s3u]hZ#OW!9%SUe</`i]r_!?0P6:"=Y.^+]Q/m'lSlE6$sm[a`ESpI*R*nZ*<A=8c(R%de'X">F'T+*'tB!0g^:!j^!*q
%o+uVqbF5kV8[9-ua:Esf2),*fo/u\(g%7Rm[aAh#Dj/*3`b`l.DNdd:UZ5L%NOZ\/Tuq4-,(aMi[WJ!t$NNBR8[lgK9(a[%JWtLl
%"ql-t3"YZt8KaZ15T05-)5.8GnE$p,fu>SD(Y?b+]H:-]8D,`iho$q-Ma3\YLmuKt.V)3I&K)9,T)aU:.RjeC=aX6nKP'dOGaUri
%0g$q?Q_f(h/@,@sN>t:(20)5M6GgoF-6t^O7Wg5<AH1<M`c.mo?Im'eMQo7,`[u4%F,qe-+AQojbNN#4m0]kS0EUA,=CE"?9VmUC
%.$qt0:QjlQ5h._'LPT)60>54L-Eb0VWF"Np._C@-(NIog9LAHO#E#QlW1Hg#auuFA<&cj3(YoP7V1=0d.%X8a2=Oo).ichiAi]+$
%Kh]p\D9mD@YAadF97$\5f%)t*.uYUoE@o9_N$&4B;t14T7s*l)j_j$r0enS]_(BK73afR<X)?l-Wjmb&c<+.IFUP6Hm`,d1_V:!2
%ZaOZ5$HN2sZ9?_iN)1?uFpj'=MOAbdDIJt$KL\k9]?p3f!el+Z,R,,30L^^#-maigi19er!*!ckb[9l?1$t4]_D:cj[r;TfDW)/1
%KjRq/!9"_(.7N&SU8L5`ST/HkB$I=MKk9f_4h2_4\9gT+:dLUpA8"5=dV&Y-b$PTC`KoR*b6h_@rF]qW"$U@jIA>H9+]Qi>6`<g*
%%GWGR[M0:O7D9^t\Ya0N1CU-i_g1`h(_t!')h<h2*!<-UmYSD?1JW<b!_JT<TR>="1qp?ZSOqR.`bB`r,FJYa:b)*f!HCXgo&&4Z
%$cDfd)]9ea&?]Oh,KMcgr\ld!%H&=ok3A+lbh(U^/`/=GnRQ'jVJ7<1:rPglW960qA0MsXj0%f2P)4!o-<X<_'0m:"3J7_Q(dYb$
%fa8!<$\D2)#n"#d4M>)C/sph+qKcR#LZeZ86:2BH@0B:E6a:iG4sCE>&1Yo2n09\Z@%du<crD,>5\g,,&kOnn8qa7!'G\Neij`17
%k-Do9KXK$T_H7;)8/TN*[0^>',YNF7)"%=5h2UAp0jH<QrJGUlP(p(YdbLT)%>[s8W$)HT@ohOgc$Vf3RM?%T`+GJ5O^^/j>Y:Sa
%!0sH&Y_nh@p!RM3//Qe",,%sZ<*#@q$o@WP6WKMi\c?O'p/FCVKlTO8KM&M^QmR@-;?d<^;1j<L+5THTXVd)E11iQ2)9mmF#\@_Y
%@PikU^U"^nT!.C=)upEj:%o&V!89mOdIL;4))M"mc#b5+3F#8%U/Nb76":)Q7>o)^Ki#a%`]6+/j:n@lKlS\&KF1p#6,6Vd)$G1o
%@0W`@1um1N*L!28E-su,1JcnAQK_/39/>=WG$,*8_IGS\80A4;A8$Kk@Pj*hdT8H-fFjUehuV95;`:(Ul4ZX.#SfgMLt>O,Z:"[j
%=>HcgFmk-XrmZ,2Z&tD2Vd_L+j;48q+]-h.+\B`t5s#^D':B\s;kina%P"n4moWU%1[g"5<1Tm+RC\0`kGft$+]O<C&"t0Yhh4G7
%Y`8c?:e-SB*.]E#FY(+X$AUu;Jl4>AG<&49SI(u^mYlBr\5C/)80DV)&sQ0r$l:P!H#M,+3AM&>!^dcYZ6M^O9,XFFjVl/.s4)NR
%5Y![@fh[T,D!JUuV`&WjArraR?!<&@k*dIT*/,o'fpZhj*J'IW$E7MAA!rm#!*-=b&/Pa>E:iX`d"/WB:Wb`8AV0XCX'%q9<670.
%Tj]to%LCdi,=>;"2aW'8!Y).>,0&V`N`fU?ZAueCIoN*bRE%"6-Ea''NQAb#jKXA7aVW,b,(g"6b0U,oV;XC39Ac"KU7"nYc6c(3
%L1/&@[Zn+YA<%e\N^B\c3sqrXnqp*$-@*Qj?)kM.eGJDe3/2''1U\V7=H)()1_Pj9Z?oQE!I9PbT9+dr6BK%cRMga@Gbf;?-9fns
%OHd[.R8$6di_XbP`%GNMf)ofVLYH9,(#O,/)eR]aTLo?aJXM0p:rXo2(8r\J3'f.u+'&OL;9'hV$>I@V3Ra0BBnThjh7?^Za0A>N
%I3$V<GqH!a?^htlP3#-,Y=%M\f`tom@JC]2DZe'9BHokD2Ll3@Se?O4+454OK_,!)E%0%):*KTT-j5Ao\m$Lg)i#p5f/R@"?(Msa
%X['d[kn#?(WXXn70mm=/TbE@idE,5[Wm`U3(JH5hk33+Yb7l<jDe4e>;8+2QnpPOFO?iqHUc9TZ;I[-In\fW=:pD<!ImO,*bYo"f
%QH:cg_%)#?"?T"falb3PJE1e6UnVau_nrMSd!j"*OdJS8&qhj#TEq"sTd%!-U^IpU#tTdTPU6nWd%gNp!*!c+jKT+:B')7i@1I,h
%oSEB,<J9[&*2r(f*%5o#(Mk3]Z(##8`Grh4G&b8*3SPWk_<HjIa!$?-a+9-4(VUh,FQ)ur,#(E)q/!sB_A+rq7bYj;n6AUB4OmKp
%5fH]Wj_;FPQfn-*Rt[`E.;/ER4\!CY`Zu$YC*D&[')BDTJ]sJ6]Go``O"h?gFB.?\J17?M*4oe8P%!]<R$T8V`OI`VC)1l`@MNrl
%B^K9KMsGTp!!pnN9O^]\^o`^<@2!K]9eWSVI_L[o/4d7<]VA^sZ",-2+:Kb1'\4'B?\/P?PCNZlMP3#LMD*-)hF%DPLD#j"b^*_X
%<6F@,7,u/\jZm8PEWQi]Y=(mto]>/2C`nl$+5,(Sk0qPIU3s$Z[i9#u]UYi?,=%tc@9mp5'NV/+fM0kufX`h:M"$B0F&C.d_/Q2a
%0UO]GJGblQe3a>i7W?kkjZl8J[EYdkCTa\ng+K&!V5D`lYe[-r0O^s6YVsfbAOu:k`Lt+,$+_G9[<ujd.nIpbKpas8kG^p&#QE]4
%RnQ'TCDO+K#Q[;&((9XU+Y0uP?9L<;,FPib!DUa2_2tKt\#:=jJVk=\@kmR?@hc+>^sMB-5[g,8?mN7rWBrEdC;JmeT&[uu/>#N*
%K[Vke-$g1^MaU@X3oWD56?-7s+9Eu;@":>e:]Z#:?OS'r<p9A`=c3TaCpQaP'q23D-7i2X^;=9CY[#h]S/@J"F'0\Zn$b!22`*0E
%'f/i60O\"&TWgR>l:V[S+UX;:8K''$2X-,#UtCQNj64.$_He"VU7=(u%C5V>Rkkbc8olFr6"IM5M"N6TZoXrt-[)kO\ZPsj^kPC6
%ZnWjl;i97,hlOVLBprGCFVSpYGmgYg%EVd122^^@(>I?;ors;MS@*$Fe=t8l[&Hn5g(Zs/QY<NDBkkMG?Ti(_-Sa9'I&P1Z;_K^a
%deX<7*,W*5M+NgVC1iW9K#Q;3id@Z!#rRltW?pbA_B2M#d3O)t5t;UafrmK+aKl/7,_ek?';\HF?K=@o*LNoQQb^X2F3Mr^g/*==
%@n2suE,o")P>cl<CP\Bb]CYBro72sbkTcYB=qc>M@?YdgCIe$AS]kQ"^6uB!)p)63ZsaiUbpdeV5egIFc4=:T,XIn.jIn\;C1jC-
%$:m5)QoV%agHFX\W0<G$U;6t^>])c;a#9;u1N9CDAb&DC&%@urV#;""aIco1@G_ZN*Q3.C$LoDHX(%)i4`JE=UWpqH:H!&o<\:6^
%QL;q45Fc5eGW[j7_T=*@>D:BMmTW*j-Z*,-+&:J!MGGLPd>(,jp6jkKIFOH<YqingoUNgrEJc:p&`H-"1g0""i<(gi,/3AC9"a$M
%Rp*e=@KQJtYF.YFJ`G),:is@Y9H\`\$RX5\iA55.G,W?n4r1]E"BhKAdILiWQ2?5+%oOW$/V5;$ED#Iu9O4Vs@3lq.bQLkojT"I*
%eciO\<`,<(W]WRb'bu?P0dmcX[&X*QFgI6<8,&]'X!#p;b0]4@WSngqjS&VQ]r,<f<gD\^?Jp*XjCE*8mhZ]j*a?BJ^*pC<M]m'4
%A-5<J`%,:DQm/k</AWtYaVg\8J-WG!\-955XJ@s$I/N;"Eig<Bna%DAqT^1I)j9Iaq%n.Lfm(n12fBJc*LN=(=FoqpigtRb?[m=;
%`NO%u=Eo'`D<V72.^@><i"3&$)\TM16VY3C1KbZ$0g\!%*eE*qNbb#j7t+>D0<[+T_dL3$S//^8*8f1eo!'u`4.@[rSJ^7Q.3HCE
%<91i/))H.a;[KY\'tUR.NM#H*V\$=:Bj5sM+e+2VL_8X?OXW,&&4f]lk1PkG:_YBp/1=49KUSKbc,Ki6+!D]ZFC(j5@NR&kf/fj'
%ika$eVC&p`4m[jf$b%_T(P\\_@T)rajWf:eK/!q/$>mObhk>tj8`J6B2iBV.lHD98oQBerH'.4,6;sWd*J=6N96N>An9m8efSQ9g
%EV$,9-6R_LZV<85UME-8+kHNk(D/u.ZrpZM(`j.u$VYE@Z*nlj2KpoN5(Mm#n8mNXBc=B*q_>qX[QGcqJXC#+%DhhYTR3nf59?9k
%XPpp(e.*.g%l-u5-0F=Km1h,c/:_+HBcqiOYACMEE]RM])(N]3<QS[;L'lEqa"r<hT5CkC4,5FCCh9=Y[KL>!`_U_+ji7eZPM'=\
%HD#iib?8R%:"](`BO-=D\mX"13asiF**NK[HfL2q%@4uI_&p#RL<pH#,#>!;_WC)AJ!EAAFL?F2`drNQ-kY335e--7c'L)V4pG$:
%K+W7HBak5^!"gUpm'd*%-i?4H1:GHs5hBCER(#j%!6MRj9F2'Lo7J#*#n$Ppq5YE7N"7k*lL\jE+Jg<8BR)5AWH@5f%j&)@AN0\t
%^>!&dQpZKdelAZ(l)5Z:Y$"N("ZCWoUtGmD#$Zot8>5N=Z++b_VS-DQUY]?e/+PC/1U;''.drl9e\,@[*7#/(=S"4J8=F;o$KgXN
%VQ2h8g:h8L_oX%+Ermi[S.,'>2&ec32\!tPFDWP6Es)iqO\]2-:i&NR>gqOd'XZ?A%Uu>Ph[[Z3m6E&:%Qq<M60g!7GJWf0%X=l=
%[Y>!r(6%1_Y1X^CI8't&aUYd)(+L_+?:?u@7YhVIc6QBmI3bbE4qa)YMQUT7h,Xdl5]E`h"Mt6Ca^?#1f4,>C\mXg;17S>9kT`A>
%oT>f:;?16q16K\BOm!8jiqolFGLG3^d@.L5VE5fVUH)2_PG%Kda\YGT!7If^KHMXVXqKOk'MK&snt=:NY_qCMOOuMnPrDHm1.&g<
%kdEg%b0G]_-VZ[M:u7"9\>HqOF;IdW"<$J=-5tD9,Uc^rnB;<mOjsF<,cLeOPc4[Ef#H89[Zc*Z=kehTD_P2Cp-V10%t`eVaGPKL
%$5ET3ZOnZ5>S3'j9G,(,/VD4j=p@[>[3V.^XMVft&Etn[d?dKW;?S8,U^0LfXpEC*fUf/M80CJ9:nXN'`t9=FWX)-lM>'P2(CuL,
%"n\H\:P>qT<$j-s%9Wrb_k+"b)DLk9hi"K9L5r?=;$G;gk&]D'L6Fk8@7a:PYTtX[+dg9+:,e$Y8@+F]&dSKXF;1#d()O9PVS/*p
%'!B;4N6':9:hf),.,uIa'3bf6P,9^K,RdsfFl`csne&?RKd4\^_3"k"k"%7lYn.#4j[/K1N(2L1O<]TbLX4)s&<,2I1NA9P4QY6W
%B6d_o!/hfg%lY\c-)`*[0pA%M_-92OOUi\PjLj&?q.h<2\gCuVJVF<)X<J](V[-[:\EW2hp+&Ehq_c/C0b%K%^Cj(H^C$41?V89I
%<D2>O#*hMs,nRbJc>$FA4D8-0T>Z0n:rn*"cFO.[.mV+%nQ!btCbD04le;IRXMNI-7t/\-qH>ik0jb540jb70R4iphZq"D6^(NtG
%^'Z]-ZS8-:2VD[T<'G5?E:M:%jr5P4dB`h;)jSMXPTtm]K=J9&R4Nn7Uem]m.0*oCSmlc9o>AqM1>0TjHr#mH-9?lD74'N-JJ:(V
%_hhiVJ24LIQSi-9aZ(#.2cR-aT]::&%<$i-jB.:5Q9Z'd85P<^pefX>A?l?$cpE;<#_4.gN$$)-AHWQ7(CuLlak2s*E$Ks'!%#0"
%J6[[-`4%it+Ig0V!ggMEOA-,]fnr$!ONfhALuAJ-Ot./EOt.0092GU+Ni`RtBf;,>L1u"3V?g_;[W&V;^<#:N5,J((<#eP-H.ujX
%';.$2C;D9S=_Xar4>npGfMLW`m^[6anlPpLI1oG&hde.!TQlB+H&=^bp+;NLd^6msjc'P#CYG7;JIG?M!G@JsZ>!gg5u\t":eC;J
%2KP(jKM%sTTKYe^[t;b0_g=tYBaumTUb63nn^'7HCgt4ZmW3HnTL("kSUd05CSMQ9%i4sJh-,j+EN!YdAnrf,A%=5diG,gc["HdH
%RRW*cb0,I+fiD'BOeBMr&$[XfbN'r*!Q>,25I;Lb`mI;S/ItY(LY)XmZ,3^#'a;kcY97qZY,ZU$U3eGa%F^sa7SVKVa(.+2bl@/$
%<)M7)0Fi[SnWj2bKBYi>j2HU+1s?;8i]2P?<N(J(c]1j@+W`+&@'4ae$J<&Uqj5cPD/8%=g;(Q[YWdiu^1hg$"=l7T`l/'AJGRK]
%1j*Q>7MhF-$ga0FIMOJ&iZnS?Ti2lC9O]u>S87V2nQjoTh.>h%-?(,p?'Ogjl`kMIF]0Ini1\`<W6[:_VE5&3Q9*Gb'u5/7(Z"j@
%T4pG7'C4/RCE=L1fORgFm_FF$B$?Dp:"6&>Hrp+-juG?6IH)5%TuY`JO+l:+BRk1KjN_<oY"]j7-A,D7S0eu?0Ppn'gBq*cd8dXU
%.@;5D@;NSN_+55tY$arL"IoI[&i4U#L?Fs?BQa8Q*_^c,O3n&q9.@nh5l*mP/GiGbCG!2"$rab_keQBS.-"6^H\>rM,EU7(R*$rK
%"rWS`,$KpBJf8J"]g.2=#;$T_+]B6g(/GZ*`HUiXMgSaIJ4WW3iB\QmD3r]ZhUoi<:.sYa^(2U-6p.[W`L%@_Lc+iG`W35RQpKPp
%3>BAc1t09ALfeKC1+aC)i9coX(*oQUNKp\U1W45R.YRT"paug!AtX9tJjDM4"5^<FhViDT,_&l\_[24Z_IYR-QUgY3Phc>Ji0\Dt
%5<rfN4UFYQc8'4e!>9A)QU/c+KM\/j-?-kA1^hJM"4rn&'S'jM0]Bm3TgVa=]c2tY5g!Ddcu=GC\8W2-X,X'!h-]QmA*[7oQ#b8l
%'"UThU,g_6q/J\o[A0G.&0POY+k4Nm7AjK2c#TeM\@e"6;H-L5rSXb5/E2C[=^rThln7@3(;h7(ULGL116iDC2=,I`?Q'Cfq@O8"
%/I4V\fSpL>9^#Vt,#_l<VWe4fiY_reCE.#od_*N(9UA%-/.?!>Q)M"m";"f<2Gj-Eh&"D*kdmODYuDY]q2b`bYbo%KR%4Yn!u4:[
%@cFA!d?f8D:BK3Cm.shE?\6X8>XT`BK%<pMAs+m,$U4`Lkd5t'JM]9hJs0fS"JX)"3>?.1(3PJ!TdEAQU)4A/OD>fO<)(RVPsH1$
%!t]:3J@_$]DA%`YkdWm.::C@nIVYW]5ru1LdU:N^-jrLj%[??gc(M5l3'.GbOJE_K3NBo)RTSmD^Z5It1X/3NYtTo2ZhXtWr=/QO
%;2W1#`*a^K*2asY&`C?2>0;KQ?R?405f%[/>lbDs=BD3#"6a@4O*K;dJaJYV\qr85!7YC,nP$ht*YaM?LMPT_a]!^3F"CCRm[SgM
%4"$[^i.K%Z^.B.*KV+^q7WseW1fjd+3dZto22;cA31Kuj4"$]lc3Yo?<%naEFi1!2aiG&2ArG=FT\pgc[)3-fikjZCp*RdXJ1'P@
%>(C0lEA8W15W.Biq.Xmu?@/,7\^inVmnV6>$pbq[N'e0$)(^08+s]=-9c4'$@edY=$,.=j)$4N(FTi%t@;>.7rW--2D-4qS!YC>=
%VAqcJ()@D3ZnDdC3J#2+^Y57qkk[%kW$<MhFlWuq:"9MmdDDVlnjERV0N$T/U(:F04@C5aJCmAE<s=]J=-#[r9N[LnJUT(SO6dd9
%Jl=AQa5k2DK/N%RU=]J_FEAnG!66qkT"1F+Y[:UY_G)g+Y6jK+RBF@2W5fCk\19^Z"@Q^.<qW3h"I\2Q0L,etQEc9<>+-65;N!rL
%LOEZ;#t19B@gRGR6+fY:!e-u>_c-fe7tZ"G1mhWUK`VLtk^3+Mf_q/D!\p/E'UV.5g>R\Cb/2Q#]:trU#3f4j].n/g'IuOJlSC[f
%;ZX9WbG:OE#3U*$=6[k$"&L[MbB)L\K2cVX*_lpeGCt*"1mhc9$?\4*-)HZqY"79TQq[Pf:4c8'Hr/[U@(<)IM%@kp,aj0SJ$+bL
%'Qd``efP,(RuUa>[VYhlZ0GN(V4)iC?D.>ue\,1jV9*]tpeHA>Tj@lC1[)`h?SIiPWb_b?%Ud0j%,VJffVSeMRK>q&=T<hjXbb2[
%r4[Tj-*+K(>82nQ3r)3NG$Z@;,?Ao5o)g((iuFUI:?8qZX^^TS[mVgdf!rNGYU+$Armo,F2njmq!O[F%/)%r82(nLF],B\nrrflK
%TN"TVcm2l#pYL`H=1qUM?/V$EKcJp@i+gjV[G$)qiO?G[GrTckO%e=#eUjPj5/@MZGL6c8#AA#5_.D>ra;91`>fG9ZDi%Z=0a\:.
%)LJRBg^JrJ;d-W)0TkBJ#0ki%g:qNG'AV3QZ%(lrX$MbX9X'&8h03ohX@(f3/eKo:'qpMFLdA<Jc=11&^^r+i':AH@IPgp$P`$en
%A!p79<r89H4`\aS@Ck[5YFC^@YUpl'V`fET5-EN$a1SATD#KF2Js9SUhLB/!O"`KUIQa[H$b9CkHL]hL\4THfeKHN&&H=#dL#c\C
%eQlGieWu);S!C.'4@pAX8CHXU$ZsbQhCXP:7.?fR1B-6h\=OUC;1*4"dE@<kZ#9(0!&6H]>oS(rkp+Q62_Hp>I0d^YIoZ\V&%rZ.
%8@GJ,60Ot*@K6Y]EREVK#,0>ke:7QKj51@Y^/[q2#`3G'[&gWJINJ`8?qSPL&:S!W/^XTm=[_Gjk=:`s3f3@]hk_ti(I,)@$<C7L
%et#^T1=Wuc^$_;X$OO*GF]9^1>KE/1C%nB);&VjVIJ\S/NV]?#g:$_`fIGFg-,8L)XP.87U-FFAFqlf]=&ISs\6LY6hue9m!+_LD
%Z@W@5CjEI/JRdr$<pmnu^Z%#qD&X5;qa'GNS]0YjZpbjc2'/*^fs^V_R&WbWq68cRA=K9K%_T5n'f18>;:j4*gaTo27#mnp`B8oj
%S>Ss@0X?r-:q8PWa;-aqQbXt`rVZVVb^H,)jN8Gu]SDU3I:@a^\91RZE6Nh6heaK!kcTT#<`Du(7$nqK:b\<dCR#cE-WN+F<R_su
%eu%=VOR7?Y5S%Y+lE:md&!POu$%.l491*p&e\`]t3Y7W.KS/thd^>[a]Kn)fbl-3]_+*m>9;7u$1:uL!m5Z5_6pUEpE<\=THr`+D
%#nfY,>F-SRfWOrNoQVaIHQK"nf1bQKUQj=57%1[/XPPNXf0T2o=+u8$pA()amKsW`[f@]DC`K;]2;DP,#rO.+j2$e^`C5PTj)JL0
%cuERJ"kR$fMqa>qGGD3iqpr!_EUWA6HUC2_<0JTF>MYq0^(Psm50$nZF:?/Ule'TWC&@H4$4K\4*,SU;\3B82lXI)pD<MgpKs(.:
%gW8[!]slne'!\h<eZQ(\>*1KE^[G(c_mmgAT#*3'$Ctop-iei?m9?cdkgnB@&U`m"6F/PA+1C^3oOp%&@(6K%YIL'[(!*%>>ep,Z
%&t'oTdF`D)GY)f==^e$j8?o.W2^S`[-\Er?j:aZISPD`5&?9gM-ofL4+.J.'2'!7"j*G'.1hjCQkkg3'R<'Q,VPK=6op_!meO%t'
%T45&/nN,Z8<cKja&4U(l[r7Lqdp8D:f*dPqR#0dPb4o!m3M'o.dl?UM);7;ETnTH8h#)V^;>mWc(R[";Fnt^qo"<(<'^XUTD#6&H
%Z74>Ijeh__%&A*1Z-h*si:q;ritE=ISU<[VXl_g^h.T+RK(fpQ@peT.q2X.2PI2U8!1sE?`TVtSFcVeJ3[X]PU&jKgijp1%5+N53
%g=64X(V>tt7anl*6pK(bF1e5W4);Zuji^M`V1>>6[KD,ZE=D0lBq_ZtG:*QZLRpSfPP2e*TFYQ(7oO*84#$fb'SP46d;OXGnV2.g
%I""&-maiGG^pmJrY.%akTJ+$\`tSOd&-3"LWmO,aUPBaS>C8$U5k?R]l@g[C;^Y7YWO;oWC=d5nYUt5ed5:L`/eVeC#l"&[BT5@E
%8hfG+(0l8ld]VVNI8-D<Q@Fn[_R%'uRk*e^7F<j=6BNccaAKQUicWbn[+3&!W1Bd)2Ob4S)q$e1A'.-c]_<(56;MH55]h_'QN8<f
%T2N&4X5NEsP'.k1lWZtfb87qKHqRnd,A22AEPJ@F)iD*=VXBibhB0ltO""Ca5Z!./Fo.S?7f;e>]YG)IWotn6?-UOrW3,ZWd!SY]
%q(10\f1;b6lqaG'8(NB.oA1!sXQl$=fT`QELM_i6o=CSH?3PPfQFP\J>[LFnd!b+!#)-*chgIDOn[-DN$"$Zj8M8MfXU;2^'^m[Y
%A"C5uMR*l[SZaK"C)c'6BS.D5Xe^P>`Eu*[W>3</HPNmiU#Ks"o.Rj&D:`uW7B[$K6U-2.$GAVQ@O7+\Rdgf6*XCamd(f\+%R@0I
%@J<SaH;5s:`L8&i.Eg0Q-<*Bd;??0I4sE#[quGI*FB3)mF;BO:YWe3[I0G^jdk?@A4J*q\W6cgVo2'7b2VnZA^='n(2?Kg*BV"IQ
%>&n;1IC0sE,s#JbihJsX$$B_m7n#ZU=:5b\&EQDiBLZS9';@`g09(R"?j]G@n;2]L>Y%,7,,cZ=%B[KD-!21M+>_C58jA<G8K\kl
%kZNH=S`:NC`eq8O&a`D>(^F,'gQuKO0kO)80,#`VA>$q_%+6pkmPkME9=<2@YJEk-_BLeLN\YXsMuB5uc6<b%2dV,_UH/\.;$"M.
%phf-UL6m-<ngtR5oa&aR6&sY.Ip4Tk,O^U"E'e-8qPL51!Ck\IJ.Y#"_^LC$(cE0;o11:0O>!%[^c;j=B#4WL$!sOpp41945BT@-
%'Q$3TEq;PJ4iU6*_D_/h%:lD,SGmch,:`rQnuEnnLi-*4@a$t5m,4WTf[QA&I[T^a$BgQ;M_I-bR7WdZ`+X7rUOdMM(c*7c5'dJ&
%3WlU7jTI#4Jm%c%.E1V^j7as\M[bg:I0J6$.abT)b;_ET+QuL.VN<F$ofYoX/*@tI:q7'gjp!$jKrJ'QV[O:;INoY2A"\Kk*?'*e
%RuDld:NaqHCp!>KCKre17Z[Xn\[,dgNU];u)mdud)24=gX)4[27\EP.mA^NSn/r4>BDUXg5'LdYgGkk+e;G7N`Y=;\1jCPeM'KUu
%M6bl"hHJa5?iB,B5C`OQ?iS-X:LF+rp$_nT%mU!ke)12un,DbP:LF.sqsSIQR6S8MhkDLtO3+$gmq:k&"1fe3R!3i-8SLZ`FK@)U
%Dne`eTL5N6KDd\`Dd/@&:pET#!IEQnEQPBcHK]fCL6gBbS6/'oL><UY.>#N9'58[[=6t0QA:>q`I8.f""<)J&C*`']QYd]r\G1H;
%W9b`&`sNWan]Q3tgJTtpcnDUkjIE&@Xu7=;@kEUu*830B@X<V%SG9,<&[)T)+E<V+^^-(;nhC_li(4%_6$u*'-iuq2*R>SYbS3`r
%DF<2%!.(LpEEFU@^gQNrdEBO_,m:jUb[Jo")FY6;+8JoWR+$!qL!bFX(nL-:aA>fW_aJ/nWZ+#kP*5m&]!1K0,h/b;bX\]'iRl-I
%r;@O0d=Sj(U>aH-L+NgNQSSfk"TZQrm.1Hui5#7#Sl*"Aj/?Vpqp.MO2a&!&(s!&NaIp.1K`@#+:lNj5X1#i<)OX,BHgG:P)>\WZ
%kM.1hcj(Y+?Q/k.KZXT+6'BfX8L2V\:7)1BTg]W>&t_MX7L5eE697$N60]@BL9N+pp,Og>G=SYbh2m@8,!!GsGS%,!&mm@/"=&`+
%%@(6RHJ>b1XK\cHW1)cl@37gb3(@P&I5pPc`eRkcs&V!-/Cp4B$;j]+D7F1jR:k>g3U8J3,.Rk$_.M#KiZf=G`jRG;W_fk7Lu]k:
%r+tZb!rSlPVbj@h:J([K#BIi0X@s',^Hokg$ef@Z"QYjeC0,pc9Fq"i19ukSD('d\LlKVgOg&=cdb^(k'fA&6n-<'`S<=75$Xlf,
%AV",X_AM<<PV+f;?0IP6'f.!UGpf%W4b"sbf]#jt?sr#q'"f$dc5-DTQ,O;j_`_aJoD%!I37J76C6f4I.:2-dl`!IfSEgeshlFJZ
%<*;H;6/@/V-F.9"I1\+He2n@uaHlH<Q..$j6!Wu$W$eFg>;9gT6?c"k8Ou?#^Dh@cKZG^kh$:TYLEt_:?"Z:.oe(>'GeKCI7idNK
%Ue>>fB*T7``1=A-D8%@T^u<_g%lD$H7Zra0UZ/`k+I*`cpH7""aJW<+V.%pW8_K:P)I35mA.<rs!\aAr@tXH[L*L>COLV]Yjd,$&
%-I2afVlFX7"e't#6hO=%ROF=RH%eIT,4@o;dB.X5Q[HA1EjmAX3/-V<)f>m9D=!AJ5Tt#;_OWsBVA(fuqlG*9n[QJ9c15oZ9Jg/]
%P(<"@Z.?RMG]/^G;7qEeIeh&QAt5l`e3P."1YE:Y!:hoes,!@J?@k<.-V[(-$+84/b1V"M9!fq?j)n/eGZZ)r"sQdH073*n5pe3(
%dt%Yi)[QY(HCf[3N$]Z0'Os?3D428B'<hLZ@8C]'bG(_.>E2ML6Gtd@45i0n4,I\1CD`m4B00c'RCSYsEPd?\;W(S<jG9RdP.,#Z
%,r/R5W"3:![&_c.eBhN/m89ILR#u2A+"t=/Y@ZDWA(>kiOel3me<m/W;aH[s,/^VGekg3JXq%1"7-rcMdKhX!+uW?NakI&;%Vdd`
%a!3F`'W7K1?=kFt%W>ObZFVS/`i_knm,-iaa'fj8r_+rf$a*!E$$r1I&6G5)(.\A`:6))pCBJu)@q_:aTaT7NQ1Tc41ekFLi)T=;
%hCUmKQP4*SJQK344W0I8/(H@,HbR)4=8Xd0WR\Q5@cLR$+[O%-$Fj=pc!0nYLK.T@1T\U%0!(o/ZC;H"Uh<e@=@5Pe&SMFkN'!Ur
%RmmgdW_?AOHAOZ+??2+EBpb,Sm;/cT/uf`$XC0BN._F$Z2+>W.TH<#D#-/0G$k]fp'P'mC#>:T\+@)K/7rdAF"q5D[I[7&&X;10_
%'V0BU$TsdYSbpDI^Zmrr?,BSX*[(33c@Z/V/5;AbTh6sq,/J%4m:`&:/#n]^P%'LX>N?da<Y4C/mgEF*i/cq\gL$ooimH4*>>L)T
%88q,/FZ-.\,Yr$jXt4c80Cg'pF7(WN4hsc?9U0pqbtSWmUVW4"Dh--&ATl"d<j$FT("^doFmW!mblUomr'QY'aK1(9qdG^AE')(c
%i_,X\\u>#@Wl%>C+3]4*AH9$8`+NWOF^\Ht@dE$`;h\Ha/plU!')SB@P)Ub_'gB,MMmX=6=UYkh4%%&[E$(Lo\'SEW/B"h&l?!Xr
%+iFF<[]Aa`9Ar$i#fgO$o><5]KF0[kAMBAfq*7."leBG,DfK>)L*Bf>`R<%5JZfij>uFs+J`8hJ#nC?WjRotNos*M2;:d+2(5.MH
%Re2ocF!M^#0YL1dp:F((qaB>FBLVhM+`RN2"hI8L1k*Ru:r_U":Z`'SHDBq\$Hq6(*"[%7]938"D&ap:K*T3F`f7,BY+p=S_q<aL
%c/g]eVViFr,An"kL??hSjes!V&:!"gi]8,ml`?F+8:CCoDAjm!0Ji_5?MMrG$*8t<fquR>Uk9^\a&U,kU$l&^bV1#O3:-_RN`l`?
%+.ar0hMA)<N&tU2#+`LlXipV52'$id#IN2EVqBD82=FQN0jVDlFr33Bq8?^^CX;<(Y^>WYdD%7[o2s&)X7ledN9`5.`I!0immn4$
%aGG.U5G?J/l*kS2hg;@:rtq`321s33`g(.#59Qrdf"uhcOs;9gUtJY<<37b&Cs[Ade77QT>D6iE;MT;pnrX0C8`)ojBaj@F>!T=_
%[$QoHCmTdjQ6q59mG=50@r.RCe:kkk8t-S:MdiBC!\4R?b\GK6)ZFY#_@%(b9]h`F@Mh:h:@qgen)2-`DLLB\l,HbECX#h-4#@@g
%P]BUq^P]if(Hs!;oNb98e]it]9f#;(%B.#nr]`0@EV#U0%ZCsm1kWO.`<!fgqeLt&ZaaJh.ddc$f8`J8,dLP$hYgIA"cXJC7,R*n
%0A&dOQ<`Li/!/t!Z@+ZWnL@,&hHa2Gdrc+D=QmAi@k0RR`dL2qEG$$\(2j)WnRWndd'bLuXjq)MrH0@&`Bs<lf,!C7ahc0K090&9
%?ao@'?8(9smqE+U;#C,WgpJ`Cq:jjVW*+sR\SpaJfNT"]e]?o2or]#%OYjYCo8QT8eKBm9NF,OgTLk%+a&jK)mT%*:-$(<H@iOfn
%NeGH2l'kEm$e4'lc4//1[B)dl\\,#5:5W2b0fI@QGX);<TkT);`I=M%7Kq*/of4h*d,;,X\[QOIVKsh?<\=h&';cU?(Q$$9oGnPS
%8PX"q^8ucQ]ot#gZW(Nm?g?'e2_)pW\qi`?a2^#89>OcM]mZN&6J59hcEbS8Y=N8-%A`2M[iimClM6"QVbV#gd6?1#?)kD>-="p\
%)@o\tcL@Q1\Hp!lO_"8CV,jD4W4\DcJ;4+CIKHhV$2N4ZWmh4SXDs`V5E&fiS^e/aYKB&`\p0Z@E+3E.jPG%=<Cb/2%[\S/8o,Ci
%g7h2qY$BAJ-+9IG(sL]2bD.Jl#Z"]A0Vns'U0#"o7QYL=P3X?9jH:0nD!6W(l_%*r'1F0(N=Xa\cnTfm\Y+"_k&5q.ml[F<r?SOZ
%?p]aYWfE9"VC[S;:3SQZ3klaL=r5*'6DlbMCL'dKE)6M?'D;0;1,u=Tgte1a8UTsg6-,1-@7j&rC#Z'KFmK,Z?Z'%hZtk6Pm+:49
%4m,1r1RR'tjN=<3k-oRh@di4Hg@Yt(DgS4=/RFr<i[V,_#-CmmLNOSWN&MHE#\F#17Cs!"ELJ7o+.&-9LOISs5F*7Mk/CDf7W#l0
%'+J6V#/4uR^ade5:Lpm'l`)RK,ZZK4Wqn@`3)S.@(t-K$pAm=1@oaY`^S8dT2]L\>$^B*ldjM>n_]JcXF1,+3^C:@+;p+]B*h,Gr
%-U49/MqWp/A),Ooo[ilnK,g4SassZ*f.^$rjk*@c'=BF,rTJb.d.(h)I!#.mcDsUVp%@X--EsH4ejX*+%IH\>Q:)\]e)@CgQu7eA
%4fj&5e=>l%bYjA(!\\%"A>h+d3X2Wj%#TB(>_Wj&MEnlt"UaVW3COs1Qnq86@0/U3%(Mdd>&nTH@oS4neh%F##7;F%XPQM]hoMtF
%CEMP73iAY-LE2>HJ-q,3,Tn=iRk$bh*!FGI!U;f(3`L9U(]mldQsk+r#c<9$(iI\Yq=\V(jQrg_C-<_4@VUfNq<T(Hg=neX<Pf_f
%a1%uX:cq^sX+5t5'\BVaCV(X]7K?am@egSjXa2Z*5<<B_gk5GjNmTHl2IoZu/H&L6@KAOEiO;@&h]eb6oA)Z6&+CFb1NaFc4"(i6
%+Up0-(88iBFrc4pdU'rm!a8rc+(F)f$`n!K-$9Uc><"j4A.+i$i'^)KpYLAP/ukkokMFJ?nF]3>Y(?0G%gl$)6o]8-/Wm/u7A>Sr
%.VEsiKBF7BlR=F^"0(j!qaGsbM&$pf.XqMFp-F2J:FeXqTa08&oHu&5gKFc)-Zio`kj=^tAr8aM6+8=l#E&r%BYGN1S65@3k4IiD
%+S.g3cr6FXAtoMaMO?3XahVteaLu7,?\>Muc,g2sajjfc[uM5;ZlnZ-3iGtdU$jh2bTSPH#7h%R@EFR/i^?MY)b?R'?/2(_`iPYi
%4=<`:T-SR0U<^a)fu3J%6"'2M!`[)i]>/*KLa76%&.,S[I$%2L05(Kd_N#Fh/mo(B^YtRu2#&W]d'lh<$Lp1=:"2)uqK$"Q4F#T,
%2PoI)o`TDB\RUA.a*@rn@0K^-L@G;SRqFp7#Y)HQpO+U<2EaBDVicj5VX@sD9S%!ZIsf#-$("_`10/ab+Dm$K6nL[1_B[[>ja4Me
%=9s";3K!rJ;:ij##q-#7b"EAuHpHc&gX$b9=)PCW>SLZhV0O>X32)"aFC/XDK)sj?&;4Il5:3!`f-+>5VM#]<WcWWaoAu7ZQ>;Ud
%3M\qkYn0C?ebSGt5t38feugYV*K9+rWq&-MS_.W&coK5^bMNP4_3+A=rA>[lr/DfEM16^Rpp+\n<p5oo.YG]CW,Xa%_NO-B<)+:f
%rs5)9^H[m[pLTH.dkq]_O[2<AOm7@.GOd4'U(@GQqQH[#GjpC>r*;ORBA<LTJbMMUG3S3d0Yu"-9IeO7VG#P^`1(\2bmp)9ED%bW
%^--&E0'L:=TYu*r0$(@=q;@^!)FEB(:7LVN1H\[i+$Kc4du@t5#=dTl&H.:oAqO!7QCX_)kn)TXX%=Vo`c@(oS7K`.%]?b7D'0^@
%&>,SXp9ft\!/W<ZH!sihbo_Il;<W;]qHJ%."#.PKUP<oR']6!cmH*ElXfmD&.B(lBELcC"5X!!:`gR\j\Z@]FK9Y+3>`)':p9"TY
%]&8]MB0nn*@`$#BXfIHB<e5FqVP"+HT>E<D0:[(cp+Yo<Aek]&FUcB=gRtNZ%iYE<b-\mQ5ODBd-SSU3V+LRh6_>\k"uM88?\1Wk
%XCKdPN[-T,Fs9+C8h!'!#;k)HCUV4Eqe(KiV-*p%:/2[,2d"&?^I:Rnfg-.r5j*^+1m'G#[ZddjX4V*5TW9$Er8IIg5/O3#SG#]\
%BMg7@(]];qGtPt'dRhQ:.8HpO$W8N0MO;EF:cIr6Cm$'XgSO*If#;p>E<I)0fGZ&/>9Nk@&:adQ^'M!T4E7^^[D\&PRFY!PI%nS\
%gYq-%nca26G&fP63I02es5#u6F,YG\=MQ]i3m+h1&]4!>f/e[kbDG2\Ki&pAPB3QQ3u_>diS]_BL2A<":(8Rt&<g4j&HhZZ+N%(J
%Qh^"_$u<m%gM<XiL,hVS^-#4nd3=5$4\7&$%;=K(j%1[AJN<e[/dV$A'1C'(<n,St:grX>JHn$?nG*;%kf&K:!es/e]M/H!+iJ*c
%EiF3c>FX()F:K[G[D+_V\/,@<'oSabdr`)bgYDCErJ=*B`<d.8;a^MH=YR)jK%XupboEj@TRK&EQ&f,[626UW,lR`?+im1+\r;r]
%75sT.R.OnU"7U!NV;FL$8fmWh9(V-5LALQCl+e2"q<r@6K$[V?Ri]-SCQ]#dK2";p,4Bs/@g),<dmu(U>,Xb?75-1:=+E*`]7?TU
%Y_!)o,0bs#Y'79U"KIDaF>mm&gS$V$O$F_;=YHsB#<90fXqfKSb0l3$OUn%b71B]HSq*%J-^oP'\N:ttPg@hTe+j>CE3!Y8Hh#[j
%E.sNuB1[\A@T)f\+rC?qKGA'jg[2]R\E?jM+n6msE,.GI*h\N?'gcjcGQ/7g7MDAMN$3ZZRb$lP++e_H(>\LodK@jF:1g!j&SRYU
%mJDsI'4cuWi_s1!\Lh`k)][R:;_!/kVg-=fnd*ak#t?1kp)eh3@Zn$AXNqu?N2BW*LY\arT`#l!(D:QV#X"PtmJBZf'`u'*;T4Q,
%iIPPFH=+0Sq'p:[,pRtn\1!&j:h@G%Wb5Op"s<Y;[5ESq'/IfC(%fQj;cue'fq@IRl8oD3hS9qAC$CeE=2=P<3/4>*E.5JTGS\mK
%@tb-l[)4g38qAq&60LPi<c]XUi'#8T1I<+PWc32kKm[I&Lpje(hToY6p([h5P<Y2lip*Hq]l!9;!X8csnWtIp&E6MW7E&jQND+nC
%ILUKR)['&SPkHoHP6G^&lh=[m0024lWYusOP[?ORNL1R*kGiJ9bA]$;dPMEe)]kIX&B#Mp^K]VmP%7mt3ZAZ,QZOQdKBRPo$>`Yb
%a!b.4Y0.(.`I[Ne)LhTDAmg#um:bkc??YB5-6Z#Qi)-@i2QT6L@\c7un$it`eDV-pK4l(=E5Q6..]FAUT0^gU@@K"p>X6:n.#Qki
%FH@#9C?/=U7(u2jKm.VT>E(#Nm\bCJm>D,&clIh?rr)KkG2-\\F?0TQ:c>0k>JjjkM6JjnB^nSId!.?C1r:Uf=p/8KI<B%N%R+83
%eP[%9<igre9PP+ZnHN>M;f"<t(#W:45CA1;^&m/n8,]^-8;*E44&X8D9d2K8Z@t2nVuQJ1Vp#H@e_6Xl$3I!ueg5<>#(ZcXpR)2:
%&]$E>#/GtM72;<Af*n;gQQ2PJ[9F,,4astdcqXoQ2X75jlttVB'SG.Lb\Tq:+BZQ,PqJ'<qgWBc]]@UIKt@'#;%S>E%&/^We!33a
%Fn+H30[aI8i(f`J^2+?$mD.Ui(L'U(%S"[YCBks-L``mh?L8uIU%@M6\FV"IbbDUX#;Q.`VOk(@MQ;&!b#=K$E^K%kEg2*qR4h1R
%Z8e$jA?9`8#nN2^"<f2dF/Q4_bd3sK?UXjWR$c&,OIKC&>3:0nKmZc[KL&>U]9@C8+fZc]B[gim#)07HT=(NXdR<2F%Q#b"LM9$<
%1OW#Mg()3O-(+TRGofuqq.qCY86H""'s\-Af/Fn:Ad/k5TJ3fF94cdn'XWk6rT$1_nI';3<4[rLrPKD,BHm,MJ`CJYXq6NN2Nj!f
%:AE\pZ3/N?9f@mM`QjecV99.9f-.YjEe#Y]QKLUrU6/Y\[-$J?jo^)WGRtY)O_6]"=UC+!Mi<k#lR?FBgMgCCao(Z0WoKeO/%o<;
%#[ZDa>uq7h`ia?.,>0)d1aE1+$@'T]l(KI1a\@K_Wt%!PP7i&cnO*Vqb+M%9jfK0@^.IEd]U)g#Lfut'.;BfMrOkFc*m;.ujKSEA
%5aeJmoGalKo7hCBKDR/k!Y(t[=Uq-.@O?cn,aZ`qfpXn8g/pf%q2n0V-@ffTQ-_@!5^Cf_g3R$8^tjo:OS6Lm$]'fFW+=,hEe,38
%#c:!UO+nJG7b/*t3?D@N.id.CKsUHR/M:tf1s)0thuh^M7]pp<:lKe0a6OuA\5\-HW1MdYH;lRE5K>p>#+f0X[[^00.^0_b#hi*b
%jS4n9TPaGr-i`_+*e&<)BS[$c$Zh%N#[X=8k!GhQa@E09Qig(/\W9S6.u//1n/0,k9O*d'[d/t,YJK*-gW-70eTD!9&(onW#5_)M
%_Fb!W+>m%8FDOdam0>dD/Y"50bFt[:`@Ypi1=H('YW=2k#k+,/*05;k+,3LMFK'd_G0=VIpHPB$9j=!P,QNE/SI"&/:dr6RZ@rj1
%.<N*9[B2o/7K!eIYu$O=J1i;fBP-pdRd#s@R[uEN6,pMFX^Y8M!BFgGHio'M-^.Zp(7-CLNEcrYqg@3&UE[7q1/9C!C@[%XQ%07e
%+rH6Jlu<]H%DVl"GDf_)AB:3,oCYLoCt2LNRYr8_AoL%q+Zo<$W+i&in/*1:d/4ZfAWK\=_*L"N+/?8U[rM1U/M)[Q+&"$gMf\LT
%FL"aHM5[["?:b#%ir,@h'OIVgg,g=^!GZU@++e\JE**AX?34nG,rBf1/9Q;mBRQ"]ZRe&0@DBal.5>sOA+IiJKkTDck9(.d:rAMW
%;:BIe;bP"MJiXfR\+%ui+Ki]-\!Wmd<@M,HO9Lm5'*-!$>^rE(0&gm1aZRgqXsko_)]qtFk^4,&i_TNDA6t&/-(sP2&sC)$:li=A
%M2L#QhgY-g34lu;kk@>j4YRo>GBm8VYiCek2:)b(M3@r0!P"V7^OM1dUYLf-1!P"Eg@+R$1,7bnW+jhZs$&5An2@,'L0Q3",/>au
%i>RW"!KI>erT[e%4<`U^hMX=M!1qP?OD,dCeP$K-poh8B+E]tG5/p73^rJ>'8&>aN+bU$,2VlWI-pA;m5>d+'Ft]Kba[hhI&u^sg
%A3no_H+Gp<a+[8@/W#K"#==c92F!`\S0bSjV<T^9>O_rOZ.I`n6#eR+:`]ma]TIZ!VAPUHi;E6hU\[X`oZh7P]n=aP@FdM6?lB2k
%dYLV\F;Kdi;S,9GI+('Hf8[5ZUu04q_,3.jmi!MW`XqRVjPpYkRQMLj00k09b=\D]b]k.@5&*K#$>\q:Bs-fa*RpUCm4kQG9I&qf
%hBBQCbAM95_Rg"^O`66OJPrZ8@l,#V\t[m(O=,(-W^.oGSQLBXhLm3hj:HAK]uee3Tf+dM$P-.Vm\d+NjtNlqAInCThIN50D=*uD
%GFRroR\')$fNk-17KS]e_2\8kkb6O>7GIH7,n&@75E5!*deB\7C\-I&W4:PiR"IjN69nVY&#bND;BIPdR"LI("_feE]O<i&#S@n2
%4!0g^U39CU&^]3tDpt)/WnHqLjBX$q,%^R:Z8;\%@B=)Na.minAQI-14:#r;=ZDSD5sX[P]B>&D#.n+'CD)dopd9.!("paXD$#8i
%:[Xf6VDSGcI*S8k0[,u6"VPr0M[/]UVM$LW@?Dm#WbR&\hCNg`lt\CDcNt<oD&V+%-)!*H*C"S:PNql=bhm8`&b=5!5W4U0FE(4U
%QJ1(K&rD3,_V_rB`+5Tm[rM7_hW;J$;dZqnN;-nU55g%SVg&Gu$]skLrq7F`q$U:S5p?/38dnJXqT2D\_5He-Z"Q`<OEtmT/]a_n
%d<p?VKR6d`<O,%3n6YqfO3kfD,sA]Vs8BQ*^\Y-`rmTd&n:sehq,`(=lRuWEiTl!hj.CgVZKHK%0E<O6q4'&Xb^g;=@&ER-[_$lI
%1)LQ*POce?p/"D6DbYE;/^e%9]"_tZ5+X_5Hr4[^I"Lq:?s;3H,`lYBLFX]s=iY,V`*WT9CLU9KXb@>G)%c=!ZurLsO-7]g.D"W,
%Bu+$@hgUlAE`WMdcQ:(W':FlhZe_I8n&u!pa$]^:Z\)EmHD.q7DNP^I<W3W[`.N*c:6U@\KjFH]Tiia_J4.gW8,?9U^/r(>^D#uU
%-OP&j+V@]\B3>d79[DoSpHWY6q"D$?OnP3T_PO#&4f1eaW/Vn^#+6_Id(dt8na,Bh#o7qP*fSGJ]f"_*VMlnks.1u"]g]N<J<F%Q
%*FPolY<H:(Vo]]dB%gfI=:f0k5!&Q9;%cYT;0;.Vdt5'_^\qDg8[O7g%m_'aIc"^joK[aIgV3pNPUDLP7h96(qH6AQ_NnoP>O='u
%:I7_\OkTCPipFh9>oU6W-WYbTbQI2Po^scdfN>J#4J+#aAEY\H!\Qp8!G[^K&Sod0$blREM1"u)4O2VQ4W_D`XLC&D4Yg6]M.3B)
%pKl.>n,Q<ANY-'SCC=HX^A+C^ol(m>Ump@iLQc-Xh[S_7EB7b^l[9$f>#Y/s'[`<-H)D;#ZLEb'S>&L@J_o,MN2$YM,c"(G7fsj+
%ks",'C-9U.:Cq;,H@PWeML*o;2)o>D4j[C@?=V8[O"75u1JX-Gcj1-m;6E*aNB(TB$lr#U'2OROoH^*%?^lYW)OI<sSPu6dmr^j'
%G<om]=oZhI3UIpTA(p-!]phRV#VAWW^@aJl/uRA][mk.a[sDCkIUnKB[<m@%ORk1^Mb6+V3>Lm\62MG:kR$8^Z;;TEQM`oC@p;c]
%gZ>PM8Nae(e_bh!<2=$"\*2MY_O(<m%7[n2'IL#D(D**SZ/.Mi-2G,Nj\^6D4MY1g0/5ru$ut+k+\Udg/ZYoo/]'GERN"Otr^ACp
%HHq+e6O:YYIjnQ%%U(C5U:1n#iRC._J;BEIg.g^BM<)1GbJ/nXhH/&[B]RlA/_VMUbPNI4K"(S`A%m%5.TWb?n8T-iGKCPsr-;U^
%pq]mlg2`O=oY`aek%4s)^niG7*&r@kgL;a\D8A#'Sfk[@B.o\1Y"3VSg:iRm^H"P-j>#Qg3(nk9<R39Be=tRk?XpNtg/C1Y(G?hO
%hslQG7?'!T1FPW<4!'[(iZ%*E\(dR''4q7/P&Q]j3ESsl=g:Du7IP)<`r=sS$1->B353k@*3i,bJJ+C=4F^UgE_iOTgY'tS(5/[$
%/Wr2\CXIJJ?=VR%J%+)o"q`UZ_QB4bFN-a@W$$\n>b9nD#aLJS+;T*UB^As==gWeBE^#X=Ym5Sl_%ZMZ"@+ue!SLd'D?H4E1oJSM
%dj&:"\:?7mf6ZcC/.%aL_7%FE?0crrRGq.q_m6Pe+fe)pO2ie]_R>AI*U+O6Pq#WffUd.G6%gu>TkSq(PQ\O<'bBpgdt5'_^\o^W
%ZZQS`*Y(=p95@p*5\%UURJVQoFghWJJa)&ALr[UacXL+Q"`JOu`[hE;\Wk?S&0KLY1.ZTMWVXFt:O5A<Q^FPA[$#7W@W4DkJ56(<
%.$tmn_9psL/U4DogWtr]M@$.`[+th8)NTL7\gd5.H035S@"9at^N=F[6nVMgPhn/IGcUd#k/`qVa-fknhMYlBKdTu/>m'm0,@UYd
%hKTSGO=s^f9%qPA[NMk.C#X^rd=Cu&^\o]L\f`Y)f(9KCb1Psa8++'jXmVaK\-95$J%>2I9>])Rb*KA%>3o;a9?`M04js6FD&0!\
%))!7jbn>'=9N'4OOK-C$M?iRVHj'WMf"1\T/Emc$+X=U1)Xpf)'@^-g'AiSP&p(\I+B\rFeK'<!-Q"ZmkgI4K;M.<m&"*X7eGU;,
%,Y&r:)\9,%oX@Zr5'E696*Qh)21!''1fAt8.!Q:?V6VA:AKe+R'mn+ed!gHAXX?ZV($fP,p2S:X[Lct+l3'jCJTsU.CpWjWC<6mq
%&G8uV;@iENJsViR8<E3'EQb?H3KN.@E6Xpi!8k04*\gC9f.4.pc+RV^@#4$c83"eU-m47e$P9iRH>CDS/ij8o:\T<-3B\#Mm+&#;
%,2HHp<tl!AbP-I#fc2<]hYSJj5d*n,NB,Gq4B]q!JX'TjC+&e3e)igRcD>SN9T+H3XR-&n,cie/T*:?c,#5OgMVR.'ng>il?':>B
%*NYo"W%oege`SH_Yiu2noln+AE0f;6OHF7m>O='u9g\Gjgccd.C4^)7`7nR[[+^cO%BB?'^5<X+[op^4*$Bm?ZMFDH)3JoCT6Z_r
%$f5Xup@AE)m\1-C*b&WsUl>Y5T)B$7O.6t9LjJ9om`g>+pQ+o[9*H7#<qAu.&W_#Kp@/ud<-aCY8J4C<V4VEJd9gF!AQ:1pMOI;!
%n)h`>HkZ\cLh9?6&hS@/q["(1+GkfUrKA)A#l9RY5()jhT\a4qJ;[UFoh\:N;S$N.Tusb#XnJ*K-(tP,ji2C/Ij5F?\GLtT-$Y*t
%YfH9.4m_\Ia>dXed=\KeO,nmg'pH_"/^]0Z\t<ruUj4=Lq\L+l(B^gVI2^!9P<^3t(cu<?p2H:Upp1h#[nI1dC4D4G'$$9^Wj3K^
%"7hp.+j@d!!1>EjN_PD"F!h@E`sKUJ:&Da(r%*\;%HXDB1,jH]r<^(BEe1*7&#k!^^HBOKb<c`>"&'X"FS'L<7!+bZpIpD_]%?im
%F2YPHW$sMm.N['Nr,a6m):d*4;,T1bp'??H0XL]YP"2>9YE+9ofhXD?6Ub2J>5&[W8-Php\oo`<c;qmW=#X>84,1]uo!65MmrW1K
%6ZL4(A4$N(n65EVb`?bh`+'<DVJt[mM]aB\R3O]2W4Skg6;dCiI\&;s"q,\O%H_G1&@=P<9=?,bn6Yi&:)[7*plKIg05"unHqRb4
%1-D=<0,POHW)MIMc%=S`W[sAdd=Cu&J+dpdFO&*YJk,dn,btm(EjADr4/[`JK!$;SpUgN8)9LEVIZu[<DG-eADKUI+kl>0DFXl/E
%6`0W6)q2Eh*j?/uZEIGnBdCj'Ip-kdQX$HU>t&Yt?MDcp3lmH3bNWLI3[;AMGZ^AdGb7L%o[1'O2+(jR7593@/;Q-Pd@8J.P/sr)
%3T.>>"5[emp9Q"g+,1<8*_*\oN7J[j##JQ183)*Kbdl;B4e*f1fVfbp>G_F>[D0XB!UY@r_S![IdHIJ5(Ra:4BMHoSr;iC";+@p*
%@O1Z(%\:>_WGbBgbC[;Ze7Hj)\HdFr_mc6jM9N`2?TX-)/7-O4M;:dmNA&LZF.u*:qJRD)Z8e%[Gjq#GTXQhl`2rLh;Kc;nP@S"H
%hpH4+8N^A$JV!6cY&Wc4.OA=sn2,l/,b/EdB%VJc>]MEBDo4AC%@VZ$;^4&$(.)!Iq8Ut4>c;!O-suf<rR@Ro2)VA!&Sod@'4,.r
%KZ4,sk"(AmF@1LG:i^sFNa(V6cO:(oh$Dr\:+&S-0kN2/TA,NlUqFqM?=[7/?MbCrUjs.On^^(Afh*#M?1S(Y?7m$*/+(d"=Ul\8
%STl,*M&*bUr=ZHT-fbQ<07RB#AD]ZE.`UeZ>$@a'RQ6/ANu6*QZ6q139XmAdMsA?k?sl#\IIrs@&+EWo';c$tgi'l!F_-'qo"71j
%SbQ#h5s3@FX66=/;A-T:$WB,Y3^YfKWVJEK#KR8_58.:<U$>8H9h^!?.s+lJP'!m^c,LZKY#c;OX##t->X#bNZBpaemG5oJd!H_'
%E:VqIg0MI;1c2((m'$nuhZ1;$S'Y8A1b*:g[A-V8K+an_*>Q*iH>g]:baOuIDO4L)H(VnQeMLE:&31UcX_jF^Q14.)rPF*/.VCr[
%P_@FrAUKn$2gDP*3>6!EOR_2J'QTB1eEBp\jb`_"e$qD2RbtH@ZYYalm-giWKAPAP)AB!4IZUA$J4HW@^MSY'9W=rl#uDqGnVfFm
%Ng--=.+7Q>A+,Y$Q3B3bC+K=Hb-gHH%F:G"W@!,^."_Db3O_HHPIB0>%a4,@7B4s=miBra#]RpB&(?\Wd<cg=@b(qspCbo<&<I!(
%.0c`,*>9,R--N7K9h:jHq0</&C2UdN96u]a/%C::oNM8NDFAH;n$apHcCGM7gKk2>;\n9&$d(#Drmo+m'^)^?;&cbU]enXnk)/n#
%1HdW5:tmZ["sOA;k)W=-0&c9><84^B"C;<2"U.[sE6Up5bLWu`&%:6q]f+gegWS4hRX<CWcb+a@:N)Fea!!4B?Vj4IqL%b0QGkDB
%lH0`T_-7:RA&=IdS>sSK.;HRBN_U:8B*H7P$I[t-M7O&9,i]3nY#`.,q,%cUgdOd5[S.(cCB+!k"a#3fCmuI]E84C<!52qTld9Bi
%n]WJ"6.eb6]_,)oNfu>8lImi=JG7c)@\/6Xg1gA$a:QiX$%#=6@h)@.P)LCH8UY-)d[qi-\,jDL5L\:E%GEZcO\&:-:Q82/?L**X
%/XiqlS>3NRF@ht4eZ0VROV+;<)qpAug#%*9M_a8=b$-gD>4gO#f9e.lKN$8EiAI]pTob^Kq/o8IQ=USG>to!g3JUc/6kRcdUQoea
%7@6TeROM[e2<]ZN4Q.OeHZ<rrhU1iq@NK'mIdM71n@1M5K]+lX&!q1>A77s+5!,`!%JlasQ^BKkHe^pRN#?t.OS-E=k&o)`(K)&W
%4bQD5%-o5hXA1Sq8RF=fcE]GSELoY60=_=6CVqr?bkN4-]plM_U,gGY[)d9U[-%R3Df5O-b?5Ok;::BsQ?o3jqHm^GN8#A/LC_.I
%`i!dtf.:M?L.43V&bldtl&+Gj*&8K*bR^)bk=<Y\6$tSmUFO`CpY*C\6jXkBkMauZ7tP`fVAFLo#B(]t/1g!&fT^;;e<7o<V>Tmg
%V?LnG^Vi8)h'6^'AP]".R_L[31![t9hXP(!>lfC[IM&D57`h4bfIN=WDFlh2-J6X%C!`/]d<ch(TY,A74NZ)446i3s.j0^"eAYb_
%n03+/aC(;3[@acRS3Gu1`)ioR]sloGk"K_7$.)GeSK;Kl6GhA3'6(`u>(0\j*$$aJWH%5ed&$hs9>XgIcR(0U_ifA>[l-?YcB-5f
%h`G#[a9FQ;TWq$Y\sR1*5L9TeqJbo%Q:7<P=ZVO52;#&1TDa_*PJ*c"gN5a[K,h33'P)k(o)YsK09sB3#Xh:cq<_%>8Y?2jndK]D
%pBf:Lfo5DQA%RIHQZ.^FQJS\OT^IdhX+>4p5b0qt-DfYj-CL(+0S<X]rRoKs+gqm%]R/qI?L1u1,\EJbbCO;MmMX;E4d.<jqM@O;
%m0S^o9>XgiJtZpl9iAM,H>CE>o[b@l<gSgN?;;]m8;8tUhXYLE6qP"TICT#MbC\r`k;<&b@LqtZK%HAG54t*Fd*!mUr;]'#O[g%s
%j`K2N`tc,NUgF93'eUn*g6._?Q47+tKYAOK/UD?Q';c0DE'e@7N]QT_BM_9/282TW:`LmH,LA&`l)9o-85eg*/PbD2o\P=hQo'Vs
%mcU?d;o0sl:kLWLVBI>Q"1m)fgb6V:"D1LnZHe:l!G>8?_@G=fY@8%7eq>DERR$S+Gjd#$.Lrhu`Oaq`*>n2tW.Q8@?TYjA_?F#O
%N42mshHKC];oXUJcC>:&[qE?GJE'_0D5AE^4=lTlgM%k&dH=L)A9OVje"N%@9":)h':`!)kUkD\[l-?Wb2Bc#I+gbFMCgGpK2P]F
%;9[u<L3->#X^&Fd-'@e8dY;S+(;88u)AAtPUusdO9Hn1KJE'5K7%[/W`C5M+8A\p4AEN.lKm*bHAYt!aW!A[XI&:7[/UD3K1T!ef
%47B#4@o>8Bp4Y>QD'^3Z\5(Q&1U,_^WC='."gtpYYnk$\i$IO/rPDgud)I=M8@YXm<_S8[Y\W0>Id1Vi&J960'2<]X9LcmqXF&,r
%DcT?17;m$f_@6f)<ceDWFu2ai'p*X(\iLas*8gfQnc8E25IG0V(SRJWS5LqbCV`ZfRG3FPH*EElniLFgR#s9I)/j(7i#L@8Q,0@r
%Y:).T1UYl"E0cL-R&B)2-20ZCD0UetKpd,E[A+j>@D!T8C0atcUXWM^U3PcJpO6jSjLpP$=]AAeJ_ljb)O'<(A&8s@+e]U*V\PPA
%AmAL7W%Ka0)S!X:BN%Zb/`A7=KAA&f`*2Z]JnN:E4:oM[m:KCR$Q^6*5(ofr`q0<JD&o#Rn%G5[Ob.,@RGVI*H>CAjbaA9M$/?(I
%32m:r&_q80AJ-R?jP0JIPAfiGOq=`5!G>OTlajKBYm5MSs,>,YZ4+3X(W-59;do3-0[=iC3eX(Qd`_5M\b&bB,4)U1qY_`75d*n,
%M7IZ=-fHNt;92T!O`+".F%bVO%6g=nP'YP(njK7Ycn>]lZ3W!bkm=6>%Gk=YN![tj3rH1!h+XW09t7h1[[J8RE,\)T$cJj2QYt*S
%O>V*`DRgOr[Ga!?bjD8AaF;q*B2#I`R0^5FP8Z7J3PQA6cf'Tg23%u>VLZ#:cEUrV)XuU6B2"^OmPI,aHg)i#.?fh:1rJ8KCZ1.?
%7"ON:2cnZe3I48BYEr.ikcG:I0kE\NouQ<I7s9`]n^PoFQFVU/Vo_@]e3&#Z.Tq'KQn#BJ(\@H"dXh?tDF@^+!UmFGqrq"o'\)P6
%9T40+9MQTTeP9L=Ba]N9[k]_Wp2H;8L8)6,[nHn\CO_=hP&lFL1pe3'7@k(N^5Y7[@PgSu$G+394eSm`g9AoF5Ze`T1rDUZ^f_AN
%[Xtg.D6X=lD8?mo('hm.>,0DM3mW$da(nM>3iNeagjpYT9>'t='a9^d.]\mcp->f5G`DMSFNnPX?1=D-\jj7TKSa(#"Z06[/<ZZ\
%o9+9+-ulN8*jEK[2D,H`S'R.Yc6MSK0]O^P#/&RemH4fna9l`O7h<Wm='Lg<9NMo^%FI>^@a&#(l^sC\J#l89\)_Dm?L_f)OjNCT
%rf"p@gg5C6nY3\Pncn;lQQ<!29De]njmCTmj'l.Y[h=_,*c]//K\"D2E_l>YL?I?bI=W"(g<l.:2RBp)9I<,U^7n;7F6i$@)lU2Z
%Y/_j_6uQpeNEL<cM!0,S\@1@s0qEtQ@d4ft0\0'(Z_K2^i;o8?oV8$#--'oOqAe<?o)Pu%5A.R'/FVf"LC%+23!5g0`AoLirN.[(
%.WTc?HFQT,)):o/=Gb6(][m'#oAmWt35g>WGn"?"7!1b*dSp(@T]U6/cqLt?p'Z\'E&XD]-1Q5EQd`Ui1uPM0B?V$63$M#=V2*0>
%BjtpO<RpT1_<o-l0LEBu&%,qnX#"!mb;A.Zp=GZZ4cS4R,ml]\lL)]9g2n0G&;`ufb63aa]=;];E_[T&BV'N)!m[MLVf_UTc6?^L
%H>gY6<*SQS8?-n"V^ICj+599Sb7,hOKBE4TS4L9,G>jDD[)&"Bl`F&:H>gW89UXJtOlM'D-QGlD>\K7^9QG0alB7[l]us^j-=H[6
%=V,roR4%q1r$X"fAWiNsagC!.p2</uYS"Hkm3*OeAaVkg'/+u)hp?Cq0`BH#@%4Z!,%r6;B9l4!hJ.OsH/`6u4a:5I"IHZe2Q3.8
%5qF<Z2Xl%()8sINH(ndQJ;nCP\.frn^=&`oYm.m#i<`^])Q*r0K@bQu4DhAiBr/=*W,fs\PSD7<g<j37U!"rZrKM*EHQ-:$dWfR]
%7qcZYlap"_kr<k8b^PtA\U&@Y\]-H0b1L"5.p"PPd;1WPcE]=@c,b_feR5l_T:id&,#%mC::_PWLLs^kY\n(\JJ0'e-Wq4gS^aqS
%k,,G)I&bs(]sZfFAkW1d_U[>O(;0="lg<>W]:VZ</!p;@3psL4/g:tAd[qA4_Vh2n^->5e2cf^&b-^B7r[7%eN^lCGGHqp\c-.u_
%'](@]r-Uq]b44?5=gl2VI5uFG\JDldiAG4@0"IR#bRAR^21YRFL<g,#'e@.i=$e7[A5Xcnh_K,iqY=9W+lmM%k7sZqGcgr_4%oeG
%?FY(hhJfh1'c\6ncBbA[#P8[(@)a\*:282HYIrl]QIl;Q[bs"i9?I1k>/4X9/)4&rIu>JI)-#I&ekIAH]f"j($\%.M`D.A!2%n3?
%"g4/&a.8#kK0Etd1U\/#f#=)&l"FTC>Rr0D*4A'B__;UCS=QMMG4"KC><sJRQg]sW2<]ZN]Z.%`]bcCtf'-M!jM>,9+A'"3eH@B/
%,RNr9<)8:e!uuOE6F+?$rE0g8>13R]90LX+$_D@=VB\FAG&p@E4S.`:k>sl`#j$r\$q"4=91QB@]J7m2Sm-4Go[\cKQnqg-?1L@\
%9:BY,/XeTe%$NI_&UnG73J,&%aZh<`)atpHqil&cc#EM-b=tOh*pC!<:REs5D0tsMIQI<WTfq5VAUl?#.9o[S2)j@'WC9I3H)8c'
%Wn7Ee2;ojYbjDhAqbs1mA-BRao(>bcORMe^&N]>HWp7u;XI^gA!,Eeko9=3[9s=Ul9mOjgke.GOQo+65"j-%TFu2b823P4?4V^Ib
%^S+1,OSZA[].?JgAiHX;L#)'EM&CB`IHcSnR+7iS??(&I-Q'k<UJ&I_f`G0#Lc6"S%S=i+-(JP/<&LY'FNZho>8s/BPmLrQ@of'l
%7t!Xa#?_)5hLZpW)O[es5bhpF^[tH__Bla+FP7LWTXQ8\`h^00_!o^LOr+df,$UKjUFhV=>h6hkiNiCB#3E0p@]nQ:i@Gp6pYseY
%>3/r[hM,ZZ1L]'hHFS/U892rDk*ec63Q?BS'.(On]D$B3"Z9n*Ma(4[>4CC#f9e?f?tc=do$D>h<>c]I#?)k,U2]-`eGA2b20='E
%[/SW0W!>1nM+5?bG%_"e1.Z;n#C:1'';c1Se9k-.G18H1+-4l^-TDWF*5"*p=qp<g^=@!h='=UpXtrknP'`k22S?u()4a7dYF.9.
%#>;5Am2%f6LN;1'YT'6RV0]gh%h5c>$]&18H)Hq2O+Ll[F&;V]-.7Cs\t<sh%B[e'C\L0b3`13lTah@B$n$l/WdGT9mG$a<cC!n`
%SP$9I[HaC_"Q@<()e#m9MtE96T:']h"hk1]0T:LAHU0eKC]YJ-L\"_S%OpJFfP[$<Md>ZIp@A8c&L\N`Y!j\UbQu.O+0FHP`m)b9
%UMDa'1jaC?bB;mYQsEX9#.rI`Z_%B39>G1Jmh2%VQ?E"XR!D585,WB.7+*3_e095f:?E30o0ePloCJ_&r0Xgf<a@I4GcUet:Cp4?
%7U,iE_sr?`Bh`aH`"$hCI_h*O1U^KmV;R^l<P@D#6jql:IZ7Kn`X4_o(;RFU[h>Q*luE+l`$lqdTd`[4Bb1imak^FdB-ufuqYDb2
%B^3n7pf3^eHE7&`g.0+N4PW"94jSgMJssZL&.?h$"(bMtIdQ>KRmBDKf/pC_4j[CP?=UtX?]LL0&8TA,0^eo"Vr[XnTO73YF=\r*
%%)+N1;jCcFfXM]\dq4#F$\IP*Bu6bod=Sj=^\q[Dfg3N<E9SH)NmX56`UDOGQKfJ1'ujJXZm7OMT4[5+&S\LSh6/P'5]^eG_UTmI
%+u]L@NCa%%cpRD1'H:f9Pg*>/[9c,NjLb6_.#8="3<YX9KAEU-p/;*ic]N-'BD8>rN:R^!)7.j+c>nGkC_,pa5:nm=LQI1QA;N.q
%^$_5S,3-_%ot:-%7-a8$#ifC_F\`3i"s6fah=l@snUqhu?tTp<^ff1#NI.=)EOSo*hHKE-UBb4iV-gik$Rh&L\0SW8o\Sdk@6l/]
%VODPijXc9_(cBR-r01sD>74bH`q[OnUF/EU0D+*>X2uLtqQ!`=`r>"pHfKcbd8Y*[NfB&^f5l##'$dfB1`*(?:$!G[XUS'n1C.hj
%4=#uJiY:L20n.MHV^W)>HfGhle!K=I:FV_D@Ph@pQIH#M[GW@n9Lu^>qc\fS%$)2CO18F@#kdZuC\#C*/qa47$7%>2(bgQ(K"f=t
%l_EOfAYSV89;KOEFas:fJkX_jhRum5*ufMr.!"&[)L2pm/-FnG/1q`/s(9BHa3oeDDIm#@>5;sX&Jt#S\"3<hM0/iiF8Ss!3^B%W
%j#i@(<0J<;Kg=WT2FsQ&)+=H$-okmje#1YHdt%2HT<P#>MNYe'B+I//,KM5OKH=qd];,hSb?W<$r^fCXp&!NM<M71r28@'LnN".4
%1]`7G"Z4"shuW:m?R8E`Oc][DWs$'3XGQre&>.Fi5!M8(,(NTZ1q--dhJ.PW[0L"]mF&m,%9h\(kNNgg[G@7P"pZ"&@a=Al6S00@
%]coE7/^o7Eg0\?][*\E0OG+k"(n69HDC\Iq*Z7,1V`KZo3`%s4;(8%KcEcBUn6nJ:W*G8;Rdc7F`?Ec+\G%d?c;V5\<=R&?1<n%D
%gOYCB=kdik\]WnSm5#dGP&&Hl)d[%"+;Dsf$B<N`Om1)B9bR.uln&Vi%'gC#bqOf\6adR7im!(p[e]_rdZnf^'#17pdt5'_T<Pe(
%6o3@t%n!/%-:6a_O;M@q+Z$t9,/#Q#o<X3U&sS\WEXQ`P(;/2s)Y54BA2l]B;T:K-*_R=H=N"9NCn9!9O'#':,"7qU??d!f_E4h;
%!G>P/M]=Raj:lrk[h_)7Db3JE_.VIp2f!QiTN\[YBB"!nJMqJn`-X_V/DQJ3]A6pJG\b-2ba8cT%k5u=/?o3,BQ47ra0$r"+G"\u
%GP.n"llf*(#E"_%!Am`l;7>q(%pSB$hHKE-_[*>0e3/h0VDif9i@^YUb.9ZHHG"b7HY'e^E>HM5)#K(d=/jO[][d$#e"nb?LNR!V
%+TtjaYSrHBFRo!F:((V-8/`e<O:Jsp.'k05E(\@#O.p`CGCE>g$ZrNJ#npmo>7XrX[=;\9*+/k_p2jLWLT1_`d"rS*[=;*&44u@G
%Xipm[f)?So,SX'A=>Lr&6t'LiBCA/L;=Rh@?bR[(QeWOB3T^BS]V"?bW@?EV#,c0;VDNq]CAmkTA"4'hHpG,M"\_XXWeeU>1JNlS
%jbL[l?*AO,.%BA$Ej31?n%Idblrrjnb_qWf3HBS$TE$75=>RoH2`]Bp[+7oUDSifIG(KuGlnRqSO-7a4qq\jWLeJ35C4F5hj2WG^
%-cMp;Nr*#t;a=(F6g9IL4.uh57S@@/Z\,Sp:J3!@+t[u=q__slmX+&i`)]'S2e:'j&djhS4FuK[#ZY,Ii%7WTp&W%OjEPk3k@_mr
%oREDC>G_S-[6I$.L#3kLb"E6_<]V/*]Ee3Ie`mI(d2;:sQO[b%BO2;o\OB]g>5)gV''/gOc^:s=(j!tKmPU"J^!TEV_0^Eq<!s[B
%/f7^Q@:u,QgO_;tq*)>O<T&F6COX,/5r`l#_tDD=3q\M61P<Jbi%2sgm4TRfjgc+rrKEC@Wet!pVBYU3YI2-b*6BfT"=rEc7/0>R
%1*VZ#"pm=9BFKJR(a6?rClejR].7r)b\rP_rb]4d06%rB<;M9i0n(RA(e;@3>@W*^K^R+SY(-W_n\j3eVFBk<Q^5P-(.ED'gX*@Z
%TDb;$itr2!@qJt>ZkC1?OGT.9>3<HR<XRVAdfmZ/"\^**o:oiM4/dBdDj_BRec+rK!i]XI4cBYqAIK&HFSOO,?C_Q7V]NKE/fg1.
%a=X*mJQniPDfu*H-\Q`4J@tEbd0:YTf]#PAP>&_iKg7W9%,+&c7D3)#*5gCK[U:!IQK_g4"Wl=(k3(N4A*Wm@41oK\<uj-@Z;aU@
%IMNm[OSJe&3u/gRi$Lt*b-TI&hUe,7hKsGn>%hgdMC%uCjs8+VIlJ:%^T0_'h"9H`f/no02prnqDi\pK-FBLm`0S1@]N4uil%)?T
%<c?e5=6d`7i55sI_XE<BIXkr)itoK(:eNRuea/rd1t]5(Q^AuRQ$hY/L\k)qN14KJJ"0*L(uAJ*,ut0iG/4NpZNK9`k5=j"<_2Ac
%Co!;.YtMK#QlLLi^N:ug:p#[GQ>Q*W&Kr>'#hDX2]c8&VEYSoHPsBgj[,=gM92(4_N2@h7&)/1eesYi+GjdapLTuG'&7VnafQsD7
%2],eWE%753af?8rX9;be/9\/hgWp5&IRu6?fq+=m-8KTioUt&/^@3/a?jVd"Q`SQG*4ERMFKP*BG-1Kb-AF1I*tKt)guQhi1ZG0^
%qM7PF\sp2[&77ohR5PmA8RMeO:Mm@!Y-(M@pQmjt?#'?3dpgf<*)qWe?]8L@#^KLob(`#uiPb"cKGWh)/LcENZPY#n3MfmB;Wg]s
%Lu<&kVZM`+Ka+XOf%O[)BV_cPE$j)41-A>'_<Cqc`LH/lr%&`Drt4F.XYMJQXo0,@##hD[>7V*J;ph&::[[d'_NG],fH^<rLK_"C
%<aKDL<Mfr'[D0^DM:J/*=:Ho.pmoIqW1$m.&>M&93-pk:&CekaKYgrIHanN<$71X4>&g[/A[+mncS8ubn)Mfpi0_tI%lHV_aG56"
%@C`ia,%dKWQu:/X#cdHq7Se">]@?\`T+IF'!6c:@?Un5^@#=pr4$'(TCGHo\C#]3V*HcdXP`4N6;.^c4BV9^s:RD8*WH$@_G=]'U
%`9(PB\i9f$S#bcTk-=_PJ*W\l7-IV#pS01c@^ipup6.dE,!%ifm4H98+UAsl5e7WXbU["25D3pWi?I4TG;C(^J`,riqs1""*.:FV
%21CFii2uPt9G1SFI(JuhN!(qRJT+KH0O]Zs/:e`[a'>[3(@I>GNpFgrj.%k8n5B't9Ti61-[`EPb8>I,f;eSJ#O0-M@nWmllr)\U
%Xr)d#"fj@a<Bmn1YQ14V/hM&I]2\V@e[+giCq9e!/J?qTdV8$D,4X#9=GO6IV-C:YfF5Ar@2^?8@+SRh@Rg-4JN*sm0Gmg"F2U4D
%URk\0U^)PZI+]HjfX!.8`_tdUg"s][A/IZi_'RQ^f@lj*`F(Ub>6fjhF#9bjZKSf],NFjh_)n.WXb0di*eeJ):IQ2g;Y=hLO\#)]
%Kbp2=V.22Wd`?Z7iP.cI5t!Ua[_%bs\U`=DPPP,))8Mp(Q>'K4*oOI"-d3/-QN=$UQQ@nU)pp6Td8*bQAj7t[B]3bl]-dd&5e*E^
%llH<OfX9k.Qm8;j$Q3991h9E#Eg@M5OOJLS`8g3ThA'->Hr*&CWBSPPO-0bNR!CuabQGLWre(S52L[^"SfJ5Y\R<>pi^Xg8TC:kK
%HI1]J9*]+O0Xch2DaI+Z!FBPkNCi,s?gXYYED.d8ClCpuBR6K&_0[D$lX'7+\2IIm\d",Qo?1F^PQ-Q0`fao<CRs@3Eb)h3+_JT7
%$a6Xcf`^9m=1,l4WECc1Nge>D[:<CCK,\09@4H.^f32Nm:;?p@BHY;UQ3<0g9I^mk$86bJN7NVTp+j'\^3*PZ%-<I-=S^A\!teck
%*8r?k6C0aJrKP*U<oZJXHW<2G4ZaZaf\V@*SPQ>cqjH^"//H%,-+(lhSAd+g^;Q!"FW>lI@ZZb_moMKNEN97u\L`U,k)suQ']ar/
%SmX8MZBEF!^:!'i*E@:4--ou.HClrES7Ae5kurH"NFs?n#(ebD/!nK"n7j?h")QSbh"\^L`k3mK#.rF_)De/MGbeGoeQY&/`_W&$
%4&><=I`X:6Wk5)DG*n9J0&*VXc>Sba%Zf&ePt0pRlrrikcB*W'kguDk,-a[Kq7FbYQ@m-+/hFChU";=dVSsJGkboM#E<a&)qARhW
%(?Z1h'3RTAqMDhQ&n)p9$I_KfA$T0_EKu5i0F,>E]KWaBnf*D3Pj:ZT=mT&P'9l7np^f+WEcgk(D^"E]K'$@_Cl?+C4LLqkZPXa2
%Rbhq[3/_'WrRoL'O<[-#%e):^<QT==WhU>8nNo:-[7E#oJe<83R1"=iI[1E3WE"@paY_q`nn6`@^t9<<*DAn>atT_ef;u5gQ#qTi
%kJ=9IZQ-7dX&nnYBY[j.5Ps[f'SaRK4uu'1b.+^*L[8X<0ai;*Eg)`]8U1VS`$*n6"nUac_#rs"es6\OA`j*#`#7cBlaNK+T`:b*
%jQp!!JKB!d,/5@DbO?<,(hPM0@,%kfDWoZFMO3N@B;'+CY;%Og\Vb5`&fgmZV1BG,#^$?*"qRi/1TBnj1T;g1_>9I;.a5)WJq:IK
%('URk4MYaocT"4(7#70>JibX."DLSi&\+%AN.$4q04C.dgV[$s_h'8_P\?_*bs0f/nt@?-HiN`)s6e?Ss.<Zti`EnoNVEJ?qu?>%
%r7QMpeURMGpYZ#F++F5[8E9aJh:M+Fo>C%3s'H-2f0B<*:]Ip)e:8'Zqg[Y8q=WXIH"j`:O0HW_#Ah=n6tARsn#B2u&=MIg!TB^?
%oS$e'rXcH/s"IXIJ,]!Ts4=/UIK&7;s7:/X(ut7\J+r-@7S?7d\R%Jup@i'ns)7Ses&e_U1#T$f+ua\K64=L[Ti_d#DGelX/`7dc
%^OL,[_iJrH6NtB(*H-]S)O7f4,&ssjh[M"0c,=7)IJsebTDu7pp^d:PVj$U7NW4;D"6Uq]pMJ\!K5b22NEc3_Mp-b;5Q1;"^EhcD
%PBSnF0`b5A=%RC<Olp2Kmuk+sm"X>hJ@_Ptl!s$qj+t-?HRj>AqBFfl[(eI8c*oYNgcN9Aoe,I7D<!t?`?:dEi3uNpXC2P-Wl.69
%2&=_SDfMh!&'!`f[lcSZKSJt7>[;Z3JOe*)eW/$hoFNhp"K=FOrZ^9LHir:HF>VhNdUgcMgf^XCFjOXig<Bc<$6VjniP4Wm2)+.r
%.2XAG91+qs65k7#@'$KYRaLIMgD4+0I?Hnjd14*IZ'g69Z4BN=F:(C)k<I"h(c7Rh>5&6qOZfgfOInHS"1sS3VVuKf3kglY1cQ4J
%Q3jY[XCL-:10(r&A`s\qW]o00'RLXtP!roT9\eg%NgXf7*)K'j(E$EbAiEO:9q-OrR>fF@2ociFK"'Yn;Ej-0S$Q0:l)fr])Q1>;
%W$F/s_pL/u?NPlR@-)i#;7"2Z)o6C3p^F(-K^Hcdp5sn]*U*J@aTb<+]^%85fgZB2[ui+V08<K->mq70aK_Y2[IeF=]'j>g.>OpV
%kr5am0$?`2C;e]]`bt5+:VJ#d*XS,%14[bjhuho1+,sQQ!BScE>m9G<.C3/^4rb#+\?skUTIuT8Gn)0fmD%ZUhY*t)45+93qttDH
%hK@>]O,_n37"WZ;B6SP@ETap`%\UBfe8(TM>-O=Jf+ZZ1$)gpDQSn=>H?.Zmec0#Qd/H5]4RP;TALCr2G;Wu^1@7s2lj>\/Hge](
%[Y;m?_-Nergo),fB75\J2$Rk8@g5Gk`0dK#7^.M[2,L?)gV6ufR@"Z[WuHJR7,sOXJ5CDuc\h.rD4k1`lts9\g)6lu:h35D?GdG_
%Mod/Hb83aMWo1DMNlCe8b0i13kfc*BF+=9'>A,+BcXRY]"cYG]-UI6Y*.]l_>bNgmFaV2I&1":pqHSD_#5u"J$#kc_4"Ls[-Nq-i
%5cH,b]Z[U;!-N"1b1>o>A?ECWHLd`Pqlk5VFpG;p(aAe%YrmRmN>E'N'^N=q>K:MRP@(,o4a]-8a(qD1]m?!qQ(`1X4j(6e'5^DQ
%ZqrU674FUD^pXWhU^pgCkVqc^&%X>f)t]fb*urGKHdC/MCgY6qNm&]8SiQRij&dEbUr*k"K5t=)?g#GmY%s%:F_c/dn*PM)"Tt0\
%@aI-1N4:n89YCd]rbsLij:8Cuc3XTQHSF?NRGQsG@iL?a9E_OMdV\H$^!,^Sj=[bL;JDY(Id8-4PBJ%DCMN<je?4@NOKQQCN1MT"
%J$f<*\<5Qn4U6)aUH@!9=-Elm/US-!Hml>'b:J9$Z8KF;"Jq4/AI['ok`.*QO=b&sfF-_ied=H7=_^F]>`bghKg(!rarg'XpQiRD
%o+Osg-CkJMD")FOQGo@V;/SI7,)+n6_9=rgfN1q3U%PYX$nCs9ED:3ah7#%&DI'XadX$ph)A>TWX3-6fXaJKdJ*@hqFsVG(h*ne=
%pp@keS$;tH,J5K!Q'J%D4aD*[A[:CRpPlTN8+a*"aGgpq!imsbqY\*V#X[)Zpb"d9XF'lN9W![3%'+DI7[#]Q_FV20UFd5b7*]Kn
%_%,9?`6fnQk,i`V-$B#[A^/dgB_FAH!Um()Sq'KGHE9-pYl#(\](b0k&e&<JM+)PN)0'`KR<g7Qq4jqe;`fMDppW<b=52<[6RS=U
%Hml!"TUF@-r%k[/++J'kS3t?)oWL3BO7nZ^QiG%&hjc34n_puufqNMcq.^\a$-gG!d(.5V\@E5H]bC8?dIR9E/%E(d-VlsP8<a'u
%reDF(8aCL&-+jjGYS2)?2?8f;;j9V6H,Ah]-1sV@$*Ci$'O<M2q&cB*CnB#(KSL])osa91SrM)11gt'<F2D>mJ%_Saekb@TA\)=J
%boq<?;!o+8[ca'^W?10Z`>Nc(NjX1"*_omfI_3u^%<Z&:lGR<C&G&92EWV^7j'?qs=O7lKLPLBD7c+`@,?5O_#8bXGT^)g_SOlKs
%U\K\HdS-?G`VV0CHrM[9Pa&)W^F08;KuSqUTOVfchSWr!<HRjD_4M].01S!b`oV[KBLHs0$6N2iZ&$Je,Z&T!hM--LI""&)XqPWM
%hbp60%8]E`/K/5Co*,f4lX^(+2p.0onk_Z#I4K//IR%9$JMo9sR462saSI,m"Gp>RWmsm(a;2K3kkI#i&sYYK3\V4]mGEnkOT%N!
%l<SB%D2Z#cN#80&+,qXp1B/8H#6%"Xh%Z4iD=@mMCo]P<"0)sZ1<70BqBA`00uS5a(d+?-[^Zc\^&%+cfuEag`RJcT;(KJ3hYLgA
%JESY[NF'S)caKq0^o0tQk$%8nWLa)&UID9<Z;0Rdde\fkWcAjq7oM%V89fV4=6;N$#Hu=&J];'#W*:N5)ti\D5mPH0QfhE#ET9Mg
%AaUa10Jm;sp#.=^29ng=;5$c(8?:9Z2`bHB/NT2B9(MeZ6r,/Y(e)/05A$['3RbAbm63:KIZM'p8uib[JeW]AYGfpk"cI]3\H?jq
%kYPlmYh`1X^<!Jn>!38h``%%Rg5o@7?Z)+QHbZ:<#Ebrb^gedZF3'1$D_TqXb1XM/YhPgu=hEoc4lkLi,9G/t4t&_E<^"GC,>NR&
%Xa1uN<';?IGE':<9#a@Lo&n9mkgb?ATXO/2eH9_:[Dm/_4n-SpA^fia%LgD2Rq$7YVs^h5/`jg"ma21?Ob+UFd"h#iFBm;3WI*R*
%U,oBeV0h]'aQ7#UNs-Q8a$SZZ'FB1m5IHH2;"G&G/`S(_iZYh&]#TY&h.*-_GsGkLFS11\p`\dcDpd"V7J1UZmsMLBLBAVHX9\V]
%;rgb<G-RlV3&p61FV@q7jn$Cco9&=SpE$+Ord(<sG+B+L(*3.k@WW.[..I5iVq-G0h89qsg&o;;T]Li/n"G-12SPe3P-t/_a]?i/
%Xf4g+'KVHh;fHquM7\bl6firMNP1k)L[aL#F=JA[QDQrYS`:t.NkHNO<Tm7CNe3ug(i^=#]nc0`gA$+c>>pBbOs]ea*'$?@qI'`b
%JP^?qZ$E9tE%^pM0DYpNq9#/2oT'*FqT"cgr_W#Ws):[%PY_71CEr\%l5r83_Ys4+0$i3r+(#[@[#\L-C(D#4kgU8TSYu$5gNP+h
%=QHH,X*i-tBqM173L,Y*cA]T(Fs!$jap7q2,VEr/lp/^kmQpSuT!Qg-!!QGu*Ag3dp2Lc[rP8cG:fWjJX_5lO]jK/BFUc_^ODZ:%
%X0>=Ze38%93s=Z>ON^o..G>$ejRmdEeP`=A0i9n95W;+K;<5A2:m)b//76dk?UPo+*4B,_iI(8#BZP!!)n^_=PLS`m)^Q`_qh]n1
%0(\DoVP@R=4E`hL:V;7mLq8dC1Z8-2Nl.opQ2E#\+%$\YRHdbhK(%f21rHE).)0#M#9&MT2d^&Q.%m*nlVL7jW%_fJi#4:mNR?W+
%:5i.4)WT\s>*7U'p](2%.J-%Im4.kS<H&?Wk5iP%%^(A)P'h^<Fm^1-(_A9\gJSS1R)/T"Q<r,)5S%^/C`'SSUq_`@;S[)o7+V&m
%1PRT:EYKK3c$Hs"E?!>PV`poT2"CMI\Qt(:>*u:Nj-4"4)PbYYLmYL''\n+@iiXMISDFOj.H*$u)mmMk;7nDl;/h3oMN]jZFL5#@
%0;;_Jq0K7+,"O3T+`0Sie2D&2D1b4-;59^uF!g!n[R?4VpXe[/+iSW6VPrgJHo\'mRhX8M']I_pljsteYsFpuje=HGFfFlS.F[#\
%o-d@<<JVUIlJb[B9d`3Ib3;0ucE/W%e%YQ,g0=PeCFI7ikDtoWZus?oTH+,sFrQ^YWi5enOA)Sge0"&UMT-M(e.f<_3nnjOP?AYo
%M6d@ce_B(7`-P3R;4I?0"Z(2`fK."]WN4ij2FaCB.#+Li*<m7&*LXO23-QQR]?q:u/q3RF*dZh&/j42HG^h.9ckCOn\6->i'6RG'
%V%0o33XnpO8p"@8[g#T=C)X>pBWI"\\YU*/)P1.aUt$NdibIKM's1Uj?WtLs4`Lna[O<t47;_ZJGRT3q]8t0'<KVcRH5/2K"WMBk
%k_ekkl)J?pY)(:XY1Lk,&R*=dl'I!.-f5PL+kF9U`G"!#IRW9r%VI)lYcIS8[RQrX@5J/T5f?TV>kL9](uPAYQbW<R?iMJQO8n^e
%n)&WhO5L!%]C,sn(]X;TJ,'#XrTSNUo=*WWl'K0[_r(L^s8DrGmsb$4Yt<jQh>#Hs5Q'dC^]3mIs7H8f^]3UardR3&dJDcSro-0?
%VuQP8?i9qUr,o.~>
%AI9_PrivateDataEnd
